{3,
{38,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},1,0,1,1,1,0,1,0,
{3,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",ca21cd18-35b2-4281-b5c8-016ecc8da8ac,"ПриЗакрытии"},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ПодменюЗагрузитьФичи",
{1,2,
{"ru","Загрузить фичи"},
{"en","Load features"}
},
{1,1,
{"ru","Подменю загрузить фичи"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{6,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
JOn/AJ06Dg0Lnh0eAAAAAElFTkSuQmCC}
},0,""},
{0},2,3},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаЗагрузитьФичиИзКаталога",
{1,2,
{"ru","Загрузить файлы из каталога"},
{"en","Load features files from directory"}
},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{722,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаЗагрузитьФичиИзКаталогаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаЗагрузитьОднуФичу",
{1,2,
{"ru","Загрузить один файл"},
{"en","Load one feature file"}
},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{723,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаЗагрузитьОднуФичуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{721,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодменюЗагрузитьФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"Перезагрузить",
{1,2,
{"ru","Перезагрузить сценарии"},
{"en","Reload scenario"}
},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
fbH+ZEHQdaBGrCgPHgp3++nuPc0VOPF21bLo6ZQGaR3fCVH+rrrK2gcB+/FrezHD
3UTB3ahtDxXsZYQYuSwqy4LETM5L28t0horSdhNVUWnHnaHKX0qCvLa11n+9EA/0
Phr6FmJ+0sU/fhPe3YNLf2CCP6Csz10g2PfHWg3Y21PtlySp/Yp43bsxUYXrg0lL
mlM/2fl2/NA2fM/bRMYdTKrJ62wlpmBLI2Ws8dXdu0PUZkdjZWwi3aAdBburKmN7
aWXvLa/sfWVdae3P3Wv9MJAy7WGw6aMX1m/XL4g0MRiy96JM+t4a/3g3OWLQeJTm
JS1jqr86bg9W3jt1lLUb0lCXlXm7iJ67UNpuRmZPRXeTTIjK3MvUA7RkFFJ3VlLa
NnK2rSwXkQI8tjZfr74/Ef18irF9BWEXUJmZIeIyN4/D/92Z4Gc6fXWbRh1+UvlL
wpS+qqnytzdX1laS6rcZ2cNN6RC5lHVmP8Fmn68yd4Md9ZS+va5abiWZJSq32t1I
OdtJbvc2VuEepn67mH4xi8jaQbSnDxl7IJDS+pO1C8e/m3RjF+kGyN6Jv+aYIZM+
u34hiox9iAFk7YHoXeR8DJQjbSw+7XmLnq1Q2pT6untbMCNKo3ZheruoYCd+jZtm
u4owy92kEHsq0IhKriHpjJRNZnP2kNMwZ81bUU+dl8ZoxT8nQcnH+u/Vf6IyomIR
YZeR2G9XfubYD+733T+u1INLMtV2eYSy1qOYnfVRuB8kEa13cP/tFdVydzm13FOe
sgr14T9311UGpGTu8oeEBkrdShshMg+3kslqRM47RO53/JTxFgEJYjN21XHXtaQP
6UbMTlIOjuWgHEPWDr47eIjLMoXugbAiZO2CtJ2kHe+gtHfwaWPvVJ2+ltwSPVPG
s6a0uRkj7KuMdyDtnepquY2GU6bzPX1HJaXvLE8jKtBwPkNsOgpMf4dIiSpar2Vu
tiSQTL4H3ukopHwBVb+iqN9R2BVc2W+U51268CMO/rWzE9RhDgt8q2JVsKGZst6i
3u10zNVXHQIYLMqsd5jmvFNeWdtxCdv5/nZtZVgbDZisEWXtzXwbVXBODufkYMI5
bxPQQCamGrOlvCttQJK24qccab5K2YL5bUdpb0MW19l9DC3fqexgg5bxDgGDGUGr
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
13Hu2vKKXXmHcvCzma/jPqbUVc8lHZiknSJbtHZddOt1ti53gfW7LyFu2cfTlTM5
XJk8HE97necXW5hFbKjq2pO+voJS1pVVDilH6nqsbB3tW8MKNQQ3GnKHqpp5Vsn6
x3XSXq2lxKVVHWmG2FcrK/511LeqskJfvd11pMWrZZQyB1WM89OqjybSlE+drtxE
3JbGrIS8HzHNjf+dr+yJPNViRSJ/NU/ON1mOVEpxazF9TCJpHSnNWiLeGvzHGkxi
jflRiIMMp6x1FaizgpLoiAekC7QhDUUajOA0kIcFZLzGCvKiEHWenabTV3YyaP+G
rp91hYXNq1cv65c/fmZN7jzt/Rb9vav5p8epzYwWyp5LNF/ekMDmp+glBCfalLwK
sazGl1J3KoExA1+cv6aJGg6+XVXMPIuTlrgYB2ykvVpFiSB+GbuIllVVwkp2FC7l
hiuIWkt5ODGP1dBRjXTk5zdpyL/cYuI10sxKIe5nlDb54DPq8GoztXmdpHl5LUwb
dZADRa1hMPAlCetqoxSSVEcahK0tp7S1Rhy+zKmoLMSWUQuU2QJlJq7l+tX4tlX4
tZU4cAYzazU+kN2QiWxr7Ty3pQ5d3MSAfQ49Hpdx6ffLzgAsmrMYhVWwEHXlc844
p1Hbn1Ob6THKXdRU2SvrK/3NOorBHRVs84c4Zj4QZgNj9eW/GaAGA29X5V5e0gYw
UgsxT0hLWAJhi9mGCYy06MX4Dnxa3KJSip1eQmnTeXY4iadV/YL06ZWDbj3sytWL
HtJsrcxmAnz+hUb3mN5Srab6qt3Shsp73VdRC8srCf+QuMFPsW/WViyNSVhNmsPI
pqwqi+mWVvJqVFg00uZfktZT70YAaUn4vrRVRMflvsoh92qFOsyN5L/WVHctiNeR
K1sxwE8ZsK9pBoudKMwY++3iH65Zf7D4acTZvPgnzrGHNgM2PqLsGQFKW+Sr1JVM
+MnJ4s1FLWeAICyVgclYwdO21U3VCNKqPFHk06L6k04saKjERTUcWQmLSD1ACz7H
LsRElmAGC1iHmoP9T2yowqERyn0qygndmaaxRSLrFhmv0EpgD0laPROk3EE8tpvG
U24GJYtkOPmNuii3nuJW+Cp+Je5gFQ4fklquJl9zwKfg35Jc2lNGietKKmZDacVg
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
TkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{8,
{724,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПерезагрузитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыполнитьСценарии",
{1,2,
{"ru","Выполнить сценарии"},
{"en","Run scenario"}
},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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}
},0,""},1,
{"Pattern"},"",2,0,1,
{8,
{725,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнитьСценарииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{151,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаПерезагрузитьИВыполнить",
{1,2,
{"ru","Перезагрузить и выполнить"},
{"en","Reload and run"}
},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{726,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаПерезагрузитьИВыполнитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{302,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаФункциональности",
{1,1,
{"ru","Группа функциональности"}
},
{1,1,
{"ru","Группа функциональности"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ФункциональностьЗакладки",
{1,1,
{"ru","Функциональность закладки"}
},
{1,1,
{"ru","Функциональность закладки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,4,
{0}
},7,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаЗапускТестов",
{1,2,
{"ru","Запуск сценариев"},
{"en","Run and Invoke"}
},
{1,1,
{"ru","Группа запуск тестов"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{48,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДеревоТестов",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,2,0,1,1,
{1,
{17,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{4,3,
{0},"",-1,-1,0,
{
{#base64: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}
},0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,0,
{1,60edb81d-887b-478e-94ee-7fef2b13393d,"ДеревоТестовПриАктивизацииСтроки"},
{0},1,
{19,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0},0,1,0,0},1,
{19,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоТестовКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0},6,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовИмя",1,0,
{1,2,
{"ru","Наименование"},
{"en","Description"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{1,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовИмяКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{741,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовИмяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{73,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовПолныйПуть",1,0,
{1,2,
{"ru","Путь к файлу"},
{"en","Path"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{2,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовПолныйПутьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{742,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовПолныйПутьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{497,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСтатус",1,0,
{1,2,
{"ru","Статус"},
{"en","Status"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{18,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{498,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтатусКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{743,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтатусРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСнипет",1,0,
{1,2,
{"ru","Снипет"},
{"en","Snippet"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{3,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСнипетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{744,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСнипетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовАдресСнипета",1,0,
{1,2,
{"ru","Обработка вызова"},
{"en","Steps definition"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{4,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовАдресСнипетаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{745,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовАдресСнипетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСтрокаРеальнойПроцедуры",1,0,
{1,2,
{"ru","Строка процедуры вызова шага"},
{"en","Step definition procedure"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{5,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтрокаРеальнойПроцедурыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{746,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаРеальнойПроцедурыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{8,
{731,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},1,1,1,1,
{3,
{732,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{733,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{734,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{66,0},0},1,
{3,
{735,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоТестовСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0}
},1,
{19,
{736,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{737,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{66,1},0},1,
{3,
{738,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{739,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{740,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{66,2},0},0},1,0,1,
{8,
{729,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЗапускТестовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаГенерацияEPF",
{1,2,
{"ru","Генератор EPF"},
{"en","Snippet generation"}
},
{1,1,
{"ru","Группа генерация"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"кнСоздатьШаблоныОбработок",
{1,2,
{"ru","Создать и обновить шаблоны обработок"},
{"en","Create and update step definitons"}
},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{748,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнСоздатьШаблоныОбработокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ГенерироватьУФ1",4,0,
{1,2,
{"ru","Генерировать управляемую форму"},
{"en","Generate managed form"}
},
{1,0},
{2,
{1},
{0,4a613abb-7ca7-4311-a631-b5e3612d6162}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ГенерироватьУФ1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{749,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГенерироватьУФ1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{361,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьОбластиПриГенерацииКода",4,0,
{1,2,
{"ru","Создавать области при генерации кода"},
{"en","Create regions with generated step code"}
},
{1,0},
{2,
{1},
{0,8a283e0f-869c-4fcd-900f-3dd5d76d573b}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{362,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьОбластиПриГенерацииКодаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{750,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьОбластиПриГенерацииКодаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{153,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур",4,0,
{1,2,
{"ru","Создавать закомментированный код для переиспользуемых процедур"},
{"en","Add comments for reused procedure"}
},
{1,0},
{2,
{1},
{0,260d4c6d-de55-4638-b304-609476bac030}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{154,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедурКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{751,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедурРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{478,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ВыводитьТекстМодуляВместоПерегенерацииEPF",4,0,
{1,2,
{"ru","Выводить текст получаемого модуля, вместо перегенрации EPF"},
{"en","Put text module. instead regenerate and update step defintion"}
},
{1,0},
{2,
{1},
{0,c41105ef-8c8d-4cfe-aa90-50c875ba808e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{479,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыводитьТекстМодуляВместоПерегенерацииEPFКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{752,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыводитьТекстМодуляВместоПерегенерацииEPFРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{747,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаГенерацияEPFРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаКаталогиБиблиотек",
{1,2,
{"ru","Библиотеки"},
{"en","Libs and Canned steps"}
},
{1,1,
{"ru","Группа каталоги библиотек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{306,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"БиблиотекиПовторногоКода",
{1,1,
{"ru","Библиотеки повторного кода"}
},
{1,1,
{"ru","Библиотеки повторного кода"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{48,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КаталогиБиблиотек",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,8f038ea1-e2cb-4d4e-85e5-de99851c076e}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,2,2,0,0,0,0,0,1,2,0,0,1,1,
{1,
{3}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,0,
{1,de65638d-a806-4a76-bc10-f62bbc86e0e7,"КаталогиБиблиотекПослеУдаления"},
{0},1,
{19,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{19,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"КаталогиБиблиотекКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогиБиблиотекЗначение",1,0,
{1,0},
{1,1,
{"ru","Каталоги библиотек"}
},
{3,
{1},
{0,8f038ea1-e2cb-4d4e-85e5-de99851c076e},
{0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,0,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогиБиблиотекЗначениеНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{765,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{8,
{755,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},1,1,1,1,
{3,
{756,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{757,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{758,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{84,0},0},1,
{3,
{759,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"КаталогиБиблиотекСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0}
},1,
{19,
{760,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{761,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{84,1},0},1,
{3,
{762,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогиБиблиотекУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{763,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{764,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{84,2},0},0},1,0,1,
{8,
{754,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БиблиотекиПовторногоКодаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{753,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКаталогиБиблиотекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{292,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаДополнительно",
{1,2,
{"ru","Работа с UI"},
{"en","Record UI behavior"}
},
{1,1,
{"ru","Группа дополнительно"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{333,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"РаботасUI",
{1,1,
{"ru","Работас UI"}
},
{1,1,
{"ru","Работас UI"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{298,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ОткрытьПодключитьTestClient",
{1,2,
{"ru","Подключить TestClient"},
{"en","Enable test client session"}
},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{768,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОткрытьПодключитьTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{294,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"НачатьЗаписьДействийПользователя",
{1,2,
{"ru","Начать запись поведения"},
{"en","Record user behavior"}
},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{769,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НачатьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{296,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ЗавершитьЗаписьДействийПользователя",
{1,2,
{"ru","Закончить запись поведения"},
{"en","Stop record of user behavior"}
},1,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{770,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗавершитьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{767,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботасUIРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{347,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаКоманднаяПанель",
{1,1,
{"ru","Группа командная панель"}
},
{1,1,
{"ru","Группа командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{351,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ГруппаПодменюСостояниеTestClient",
{1,2,
{"ru","Состояние формы"},
{"en","Form state"}
},
{1,1,
{"ru","Группа подменю состояние test client"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{6,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{349,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗапомнитьСостояниеФормыTestClient",
{1,2,
{"ru","Запомнить состояние формы TestClient"},
{"en","Save form state from test client"}
},1,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{773,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗапомнитьСостояниеФормыTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{353,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗабытьСостояниеФормыTestClient",
{1,2,
{"ru","Забыть состояние формы TestClient"},
{"en","Purge form state for test client"}
},1,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{774,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗабытьСостояниеФормыTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{772,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПодменюСостояниеTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{355,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ГруппаПолучитьИзмененияФормы",
{1,2,
{"ru","Получить изменения формы"},
{"en","Form changes"}
},
{1,1,
{"ru","Группа получить изменения формы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{6,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{357,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПолучитьИзмененияФормыGherkin",
{1,2,
{"ru","Gherkin"},
{"en","On Gherkin"}
},1,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{776,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПолучитьИзмененияФормыGherkinРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{359,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПолучитьИзмененияФормыJSON",
{1,2,
{"ru","JSON"},
{"en","On JSON"}
},1,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{777,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПолучитьИзмененияФормыJSONРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{775,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПолучитьИзмененияФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{771,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{308,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"АвтоматизированноеСозданиеСценариев",
{1,1,
{"ru","Автоматизированное создание сценариев"}
},
{1,1,
{"ru","Автоматизированное создание сценариев"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{310,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"РезультатГенерации",
{1,1,
{"ru","Результат генерации"}
},
{1,1,
{"ru","Результат генерации"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0}
},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{312,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СценарийПоведения",
{1,2,
{"ru","Сценарий поведения"},
{"en","Feature template"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{314,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйСценарий",0,0,
{1,0},
{1,0},
{1,
{12}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100}
},
{0},1,
{19,
{315,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйСценарийКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{781,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{780,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СценарийПоведенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{852,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СценарийПоведенияКод",
{1,1,
{"ru","Сценарий поведения код"}
},
{1,1,
{"ru","Сценарий поведения код"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{854,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйСценарийКод",0,0,
{1,0},
{1,0},
{1,
{15}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100}
},
{0},1,
{19,
{855,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйСценарийКодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{856,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{853,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СценарийПоведенияКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{317,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"КодПроверкиПоведения",
{1,2,
{"ru","Код проверки поведения"},
{"en","Generated code"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{327,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйКод",0,0,
{1,0},
{1,0},
{1,
{13}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100}
},
{0},1,
{19,
{328,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйКодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{783,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{782,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодПроверкиПоведенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{322,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ИсходныйXMLПроверки",
{1,2,
{"ru","Исходный XML"},
{"en","XML file from UI record"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{330,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйXML",0,0,
{1,0},
{1,0},
{1,
{14}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100}
},
{0},1,
{19,
{331,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйXMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{785,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйXMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{784,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсходныйXMLПроверкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{779,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РезультатГенерацииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{778,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"АвтоматизированноеСозданиеСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{766,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДополнительноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаНастройки",
{1,2,
{"ru","Сервис"},
{"en","Service and Settings"}
},
{1,1,
{"ru","Группа настройки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{650,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СтраницыСервис",
{1,1,
{"ru","Страницы сервис"}
},
{1,1,
{"ru","Страницы сервис"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{652,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыСервисОсновные",
{1,1,
{"ru","Основные"}
},
{1,1,
{"ru","Страницы сервис основные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},9,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{720,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"КомандаСохранитьНастроийки",
{1,1,
{"ru","Сохранить"}
},1,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{789,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСохранитьНастроийкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{304,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"РаботаСТэгами",
{1,1,
{"ru","Работа с тэгами"}
},
{1,1,
{"ru","Работа с тэгами"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{221,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СписокТеговИсключение1",1,0,
{1,2,
{"ru","Список исключаемых тэгов"},
{"en","Not run tags"}
},
{1,0},
{2,
{1},
{0,c62ae8e3-c76b-402d-8ac4-7220e83d541c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{222,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокТеговИсключение1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{791,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокТеговИсключение1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{224,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СписокТеговОтбор1",1,0,
{1,2,
{"ru","Тэги для запуска"},
{"en","Run only tags"}
},
{1,0},
{2,
{1},
{0,67164642-7fbb-446d-b627-4bbec5c301c3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{225,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокТеговОтбор1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{792,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокТеговОтбор1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{790,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботаСТэгамиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{859,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОтладкаTestClient",
{1,2,
{"ru","Отладка TestClient"},
{"en","TestClient debug"}
},
{1,1,
{"ru","Группа отладка test client"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{867,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЗапускатьТестКлиентВРежимеОтладки",4,0,
{1,0},
{1,0},
{2,
{1},
{0,40b1a642-6565-46d5-9eda-554b325627a0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{868,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗапускатьТестКлиентВРежимеОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{869,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗапускатьТестКлиентВРежимеОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{924,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"НастройкиОтладчикаTC",
{1,1,
{"ru","Настройки отладчика TC"}
},
{1,1,
{"ru","Настройки отладчика TC"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{861,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КлючиОтладки",1,0,
{1,0},
{1,0},
{2,
{1},
{0,840a1222-1134-4e9c-8b6b-3e6b43832313}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{862,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КлючиОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{863,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КлючиОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{864,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"АдресОтладчика",1,0,
{1,0},
{1,0},
{2,
{1},
{0,533a26ed-ea27-4523-a57d-023be95a6d58}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{865,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"АдресОтладчикаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{866,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"АдресОтладчикаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{925,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиОтладчикаTCРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{860,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтладкаTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{910,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ФлажкиНастроек",
{1,1,
{"ru","Флажки настроек"}
},
{1,1,
{"ru","Флажки настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{912,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ЛеваяЧастьФлажковНастроек",
{1,1,
{"ru","Левая часть флажков настроек"}
},
{1,1,
{"ru","Левая часть флажков настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{341,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ПодключитьВнешниеОбработкиДляОтладки",4,0,
{1,2,
{"ru","Подлючать обработки реализации шагов для отладки"},
{"en","Enable debug for steps defitions"}
},
{1,0},
{2,
{1},
{0,c09d1e67-5742-415e-b9ce-4f315bb7f8e8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{342,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПодключитьВнешниеОбработкиДляОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{795,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодключитьВнешниеОбработкиДляОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{344,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СохранятьКонтекстыПередВыполнениемШагов",4,0,
{1,2,
{"ru","Сохранять контексты перед выполнением шагов"},
{"en","Save contexts before step invoke"}
},
{1,0},
{2,
{1},
{0,edbf9d14-eabd-4f3d-8c3e-e43bd46ad329}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{345,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СохранятьКонтекстыПередВыполнениемШаговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{798,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранятьКонтекстыПередВыполнениемШаговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{335,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ВыполнятьШагиАссинхронно",4,0,
{1,2,
{"ru","Выполнять шаги асинхронно"},
{"en","Invoke steps as async procedure"}
},
{1,0},
{2,
{1},
{0,d3e90876-ed13-418b-8adf-61b9879875ae}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{336,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыполнятьШагиАссинхронноКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{796,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнятьШагиАссинхронноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{913,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛеваяЧастьФлажковНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{914,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ПраваяЧастьФлажковНастроек",
{1,1,
{"ru","Правая часть флажков настроек"}
},
{1,1,
{"ru","Правая часть флажков настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{289,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"DebugLog2",4,0,
{1,2,
{"ru","Включить отладочные сообщения"},
{"en","Output verbose log and debug log"}
},
{1,0},
{2,
{1},
{0,05bfb715-9288-4b87-adbb-dc394cfe21ad}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{290,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"DebugLog2КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{794,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"DebugLog2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{338,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДелатьЛогВыполненияСценариевВЖР",4,0,
{1,2,
{"ru","Формировать журнал выполнения в журнал регистрации"},
{"en","Output log to 1C registration journal"}
},
{1,0},
{2,
{1},
{0,0289709e-d09d-4ae3-8e91-cb039e008662}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{339,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьЛогВыполненияСценариевВЖРКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{797,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьЛогВыполненияСценариевВЖРРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{481,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ПроверкаРаботыVanessaBehaviorВРежимеTestClient",4,0,
{1,2,
{"ru","Проверка работы Vanessa-Behavior в режиме test client"},
{"en","Check Vanessa-Behavior on 1C test client session"}
},
{1,0},
{2,
{1},
{0,7bd6467b-8fd5-4ec5-82b5-7470ba5f322c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientПриИзменении"},1,
{19,
{482,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{793,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{915,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПраваяЧастьФлажковНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{911,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФлажкиНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{922,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа6",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{897,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПортЗапускаТестКлиента",1,0,
{1,0},
{1,0},
{2,
{1},
{0,51a50b95-38da-4c47-9332-b827ac6c331c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{898,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПортЗапускаТестКлиентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{899,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПортЗапускаТестКлиентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{923,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа6РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{380,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогИнструментов",1,0,
{1,2,
{"ru","Каталог Vanessa Stack"},
{"en","directory for Vanessa Stack"}
},
{1,0},
{2,
{1},
{0,13046aca-b33c-4435-b736-44bd900e8d98}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогИнструментовНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{381,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогИнструментовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{800,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогИнструментовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{364,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"VanessaStackCommons",1,0,
{1,2,
{"ru","Расширенные инструменты Vanessa Stack Commons"},
{"en","path for extended Vanessa Satck Commons"}
},
{1,0},
{2,
{1},
{0,4d85443f-975e-4a29-8380-cf64e31473e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"VanessaStackCommonsНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{365,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"VanessaStackCommonsКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{799,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"VanessaStackCommonsРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{717,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогПроекта",1,0,
{1,0},
{1,0},
{2,
{1},
{0,9fc46fa6-3d72-407c-9604-0c94d4618802}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогПроектаНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{718,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогПроектаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{801,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогПроектаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{523,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИнтервалВыполненияШагаЗаданныйПользователем",1,0,
{1,2,
{"ru","Интервал выполнения шага"},
{"en","Step invoke sleep interval"}
},
{1,0},
{2,
{1},
{0,b2ac6d56-9033-42b5-b64a-c9af0dc62ce3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{524,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИнтервалВыполненияШагаЗаданныйПользователемКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{802,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИнтервалВыполненияШагаЗаданныйПользователемРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{788,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыСервисОсновныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{654,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыОтчетыОЗапуске",
{1,1,
{"ru","Отчет о запуске сценариев"}
},
{1,1,
{"ru","Страницы отчеты о запуске"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{144,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОтчетыОЗапуске",
{1,1,
{"ru","Отчёты о запуске сценариев"}
},
{1,1,
{"ru","Группа отчеты о запуске"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{918,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа3",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{375,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДелатьОтчетВоВнутреннемФормате",4,0,
{1,2,
{"ru","Формировать отчет о запуске во внутреннем формате"},
{"en","Create report in internal format"}
},
{1,0},
{2,
{1},
{0,7d63373f-6a4a-4900-89d6-0cd45ef22cad}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{376,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВоВнутреннемФорматеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{805,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВоВнутреннемФорматеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{919,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{916,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{378,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа2",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДелатьОтчетВФорматеАллюр",4,0,
{1,2,
{"ru","Формировать данные для отчета Allure"},
{"en","Create data for Allure QA Report"}
},
{1,0},
{2,
{1},
{0,60ba8002-c996-4811-bb24-8b8857299dee}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{139,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВФорматеАллюрКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{807,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВФорматеАллюрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{507,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДелатьСкриншотПриВозникновенииОшибки",4,0,
{1,2,
{"ru","Формировать скриншот при ошибке"},
{"en","Create screnshoots on exception"}
},
{1,0},
{2,
{1},
{0,a0413348-0fed-41ea-8cf3-7827976027f3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{508,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьСкриншотПриВозникновенииОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{810,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьСкриншотПриВозникновенииОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{367,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДелатьОтчетВФорматеxUnit",4,0,
{1,2,
{"ru","Формировать отчет в формате jUnit"},
{"en","Create report on jUnit format "}
},
{1,0},
{2,
{1},
{0,5bea373e-650c-458b-8cc3-0b84e7f55063}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{368,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВФорматеxUnitКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{813,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВФорматеxUnitРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{806,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{505,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа5",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{141,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputAllure",1,0,
{1,2,
{"ru","Временный каталог файлов результатов Allure"},
{"en","Temp dir for Allure test suite files"}
},
{1,0},
{2,
{1},
{0,460da161-c609-4913-a9d5-b774468cd6cb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputAllureНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{142,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputAllureКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{808,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{510,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputСкриншоты",1,0,
{1,2,
{"ru","Временный каталог сохранения скриншотов"},
{"en","Temp directory for screenshoots"}
},
{1,0},
{2,
{1},
{0,cd4c849d-16de-4574-8d35-dc45da3b4bb9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputСкриншотыНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{511,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputСкриншотыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{811,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputСкриншотыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{370,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputxUnit",1,0,
{1,2,
{"ru","Временный каталог для файлов JUnit"},
{"en","Temp dir for JUnit xml files"}
},
{1,0},
{2,
{1},
{0,c75f2681-524c-4f0a-ab16-22c1f58dd0ff}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputxUnitНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{371,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputxUnitКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{814,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputxUnitРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{809,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа5РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{917,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{804,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтчетыОЗапускеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{803,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыОтчетыОЗапускеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{656,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыАвтоИнструкции",
{1,1,
{"ru","Автоинструкции"}
},
{1,1,
{"ru","Страницы авто инструкции"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{503,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"СтраницыАвтоИнструкцииОсновные",
{1,0},
{1,1,
{"ru","Страницы авто инструкции основные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{500,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КомандаСделатьСкриншот",1,0,
{1,2,
{"ru","Консольная команда создания скриншотов"},
{"en","Console command on screanshots create"}
},
{1,0},
{2,
{1},
{0,20371760-fed8-4ccc-8549-d8fa5bdc3842}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{501,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КомандаСделатьСкриншотКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{817,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСделатьСкриншотРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{816,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыАвтоИнструкцииОсновныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{658,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"HTMLИMarkdown",
{1,1,
{"ru","HTML и Markdown"}
},
{1,1,
{"ru","HTMLИMarkdown"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{513,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаHTML",
{1,0},
{1,1,
{"ru","Группа HTML"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СоздаватьИнструкциюHTML",4,0,
{1,2,
{"ru","Создавать HTML инструкцию"},
{"en","Create HTML documentaion"}
},
{1,0},
{2,
{1},
{0,9eb13fb7-f8be-4967-8ce0-4884df5a4979}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{136,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюHTMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{820,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{148,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputИнструкцияHTML",1,0,
{1,2,
{"ru","Каталог для формирования инструкций HTML"},
{"en","HTML documentation files dir"}
},
{1,0},
{2,
{1},
{0,fc118c0e-9ac9-480a-ae97-95d8cca81e47}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияHTMLНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{149,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияHTMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{821,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{819,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{642,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаMarkdown",
{1,0},
{1,1,
{"ru","Группа markdown"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{644,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СоздаватьИнструкциюMarkdown",4,0,
{1,1,
{"ru","Создавать Markdown инструкцию"}
},
{1,0},
{2,
{1},
{0,7eff7d4a-86fe-4164-b21c-414ae25803e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{645,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюMarkdownКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{823,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{647,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputИнструкцияMarkdown",1,0,
{1,1,
{"ru","Каталог для формирования инструкций Markdown"}
},
{1,0},
{2,
{1},
{0,3c587afc-6eab-47bc-a583-afb26533b2e5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияMarkdownНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{648,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияMarkdownКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{824,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{822,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{818,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"HTMLИMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{660,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"РаботаСВидео",
{1,1,
{"ru","Видеоинструкция"}
},
{1,1,
{"ru","Работа с видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{515,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВидео",
{1,0},
{1,1,
{"ru","Группа видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{517,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СоздаватьИнструкциюВидео",4,0,
{1,2,
{"ru","Создавать видеоинструкцию"},
{"en","Create live video documentation"}
},
{1,0},
{2,
{1},
{0,52cd35c4-2333-4036-8074-7d10fdd4d65c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{518,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{828,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{520,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КаталогOutputИнструкцияВидео",1,0,
{1,1,
{"ru","Каталог для формирования инструкций Видео"}
},
{1,0},
{2,
{1},
{0,232037f4-6935-4cbb-b458-145de2c1fd0f}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияВидеоНачалоВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{521,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{829,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{827,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{904,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"НастройкиВидеоИнструкций",
{1,1,
{"ru","Настройки видео инструкций"}
},
{1,1,
{"ru","Настройки видео инструкций"}
},0,1,0,0,0,1,1,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{906,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"НастрокиВидео",
{1,1,
{"ru","Настроки видео"}
},
{1,1,
{"ru","Настроки видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},6,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{902,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"КнопкиВидео",
{1,1,
{"ru","Кнопки видео"}
},
{1,1,
{"ru","Кнопки видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{715,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ПроверитьЧтоЗаписьВидеоБудетРаботать",
{1,0},1,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{826,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПроверитьЧтоЗаписьВидеоБудетРаботатьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{857,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЗагрузитьНастройкиПоУмолчанию",
{1,0},1,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{858,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузитьНастройкиПоУмолчаниюРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{903,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КнопкиВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{900,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ПараметрыЭкрана",
{1,1,
{"ru","Параметры экрана"}
},
{1,1,
{"ru","Параметры экрана"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{706,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКоличествоКадров",1,0,
{1,1,
{"ru","Количество кадров в секунду"}
},
{1,0},
{2,
{1},
{0,627ed60b-0020-4827-8428-521e11a1abbb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{707,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКоличествоКадровКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{832,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКоличествоКадровРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{700,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоЭкранШирина",1,0,
{1,1,
{"ru","Экран ширина"}
},
{1,0},
{2,
{1},
{0,34044de3-d41d-474f-8bfd-2fdf21d0aaec}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{701,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоЭкранШиринаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{830,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоЭкранШиринаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{703,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоЭкранВысота",1,0,
{1,1,
{"ru","Экран высота"}
},
{1,0},
{2,
{1},
{0,a853027a-4bf7-4379-aa68-125c412e7576}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{704,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоЭкранВысотаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{831,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоЭкранВысотаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{901,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПараметрыЭкранаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{662,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКомандаНачатьЗаписьВидео",1,0,
{1,1,
{"ru","Команда начать запись видео"}
},
{1,0},
{2,
{1},
{0,5dc7f2ff-a66a-419c-a41a-29254157b8c4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{663,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаНачатьЗаписьВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{833,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаНачатьЗаписьВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{671,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКаталогДляВременныхФайлов",1,0,
{1,1,
{"ru","Каталог для временных файлов"}
},
{1,0},
{2,
{1},
{0,2cacccc6-7a16-4ee2-a542-031a658f4ca8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{672,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКаталогДляВременныхФайловКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{835,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКаталогДляВременныхФайловРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{677,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКомандаFfmpeg",1,0,
{1,1,
{"ru","Команда ffmpeg"}
},
{1,0},
{2,
{1},
{0,9f4d8881-2be6-4071-b900-8d5e60a31f70}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{678,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаFfmpegКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{837,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаFfmpegРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{680,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКомандаConvert",1,0,
{1,1,
{"ru","Команда Convert"}
},
{1,0},
{2,
{1},
{0,b1a9ac5e-423c-409c-a779-4251bb7f5af5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{681,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаConvertКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{838,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаConvertРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{907,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастрокиВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{908,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"НастройкиАудио",
{1,1,
{"ru","Настройки аудио"}
},
{1,1,
{"ru","Настройки аудио"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{683,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоКаталогМузыки",1,0,
{1,1,
{"ru","Каталог музыки"}
},
{1,0},
{2,
{1},
{0,b2654bc3-2820-48c6-97d6-8f4e023137f3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{684,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКаталогМузыкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{839,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКаталогМузыкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{698,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ОзвучкаГолосом",
{1,1,
{"ru","Озвучка голосом"}
},
{1,1,
{"ru","Озвучка голосом"}
},0,1,0,0,0,2,2,
{3,0,
{16711680}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{686,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЗаписьВидеоДелатьНаложениеTTS",4,0,
{1,1,
{"ru","Делать озвучку TTS"}
},
{1,0},
{2,
{1},
{0,1b05e4dc-d3f3-4db6-9ed6-17e948af1655}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{687,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоДелатьНаложениеTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{843,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоДелатьНаложениеTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{689,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоПутьКДвижкуTTS",1,0,
{1,1,
{"ru","Путь к движку TTS"}
},
{1,0},
{2,
{1},
{0,89667bd5-e182-490a-ba14-6425b0a785f9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{690,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПутьКДвижкуTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{844,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПутьКДвижкуTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{692,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоИмяTTS",1,0,
{1,1,
{"ru","Имя голоса TTS"}
},
{1,0},
{2,
{1},
{0,70266db4-16e8-4988-b997-152f5cdce0ff}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{693,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоИмяTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{845,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоИмяTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{695,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоСловарьЗамен",1,0,
{1,1,
{"ru","Путь к словарю замен"}
},
{1,0},
{2,
{1},
{0,cb540838-5ba3-4b52-9f05-c27db709ebf9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{696,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{846,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{842,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОзвучкаГолосомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{909,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиАудиоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{926,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"НастройкиВидеоДополнительные",
{1,1,
{"ru","Дополнительно"}
},
{1,1,
{"ru","Настройки видео дополнительные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{665,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоФайлКурсораМышки",1,0,
{1,1,
{"ru","Файл курсор мыши"}
},
{1,0},
{2,
{1},
{0,01d682d1-3c53-4058-9a75-16b782221776}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{666,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоФайлКурсораМышкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{834,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоФайлКурсораМышкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{674,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаписьВидеоФайлВодянойЗнак",1,0,
{1,1,
{"ru","Файл водяной знак"}
},
{1,0},
{2,
{1},
{0,a3380669-dd3e-4f03-ae33-1ee5d43239f5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{675,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоФайлВодянойЗнакКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{836,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоФайлВодянойЗнакРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{709,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм",4,0,
{1,1,
{"ru","Подсвечивать активные элементы форм"}
},
{1,0},
{2,
{1},
{0,9b037573-0482-46b4-ae39-d6f5088b6bbb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{710,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФормКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{840,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФормРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{712,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы",4,0,
{1,1,
{"ru","Перемещать курсор мышки к активному элементу формы"}
},
{1,0},
{2,
{1},
{0,5bc0f8c3-6c92-4884-9e98-94dc1de82d50}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{713,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{841,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{927,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиВидеоДополнительныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{905,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиВидеоИнструкцийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{825,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботаСВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{815,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыАвтоИнструкцииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{787,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыСервисРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{786,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{484,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаСлужебная",
{1,2,
{"ru","Служебная"},
{"en","Extended"}
},
{1,1,
{"ru","Группа служебная"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{489,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогФичСлужебный",1,0,
{1,2,
{"ru","Каталог фич (служебный)"},
{"en","Features directory (service)"}
},
{1,0},
{2,
{1},
{0,1248d1d6-f91e-4a5f-97b6-46e4d48aa426}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{490,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогФичСлужебныйКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{848,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогФичСлужебныйРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{494,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогИнструментовСлужебный",1,0,
{1,2,
{"ru","Каталог инструментов (служебный)"},
{"en","Instruments directory (service)"}
},
{1,0},
{2,
{1},
{0,13046aca-b33c-4435-b736-44bd900e8d98}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КаталогИнструментовСлужебныйПриИзменении"},1,
{19,
{495,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогИнструментовСлужебныйКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{849,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогИнструментовСлужебныйРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{492,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ДляВызоваКонфигуратора",
{1,2,
{"ru","Вызов конфигуратора"},
{"en","Invoke designer"}
},1,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{850,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДляВызоваКонфигуратораРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,1,
{8,
{847,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСлужебнаяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{870,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ИзвестныеШаги",
{1,1,
{"ru","Известные шаги"}
},
{1,1,
{"ru","Известные шаги"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{48,
{872,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ТаблицаИзвестныхStepDefinition",0,0,1,
{1,0},
{1,0},
{1,
{9}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{0},
{7,0ae4bea5-23be-42a7-b69e-97b11b29c453,37740564-9e86-44a0-bea9-3f485a5a3f91,8d772f97-c0ef-47c0-9cb0-efea28c61341,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{19,
{873,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{19,
{874,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТаблицаИзвестныхStepDefinitionКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{885,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionId",1,0,
{1,0},
{1,0},
{2,
{9},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{886,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionIdКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{887,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionIdРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{888,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедуры",1,0,
{1,0},
{1,0},
{2,
{9},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{889,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедурыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{890,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедурыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{891,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоиска",1,0,
{1,0},
{1,0},
{2,
{9},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{892,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{893,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{894,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionИмяФайла",1,0,
{1,0},
{1,0},
{2,
{9},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{895,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionИмяФайлаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{896,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionИмяФайлаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{8,
{875,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},0,0,0,1,
{3,
{876,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{877,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{878,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{872,0},0},1,
{3,
{879,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0}
},1,
{19,
{880,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{881,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{872,1},0},1,
{3,
{882,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{883,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{884,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{872,2},0},0},1,0,1,
{8,
{871,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзвестныеШагиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{728,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФункциональностьЗакладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КаталогФич",1,0,
{1,2,
{"ru","Текущий каталог файлов функциональности"},
{"en","Current features files directory"}
},
{1,0},
{2,
{1},
{0,1248d1d6-f91e-4a5f-97b6-46e4d48aa426}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,50,0,2,2,2,
{1,0},1,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},
{0},1,
{19,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогФичКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{851,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогФичРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{727,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФункциональностиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",2,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"
&НаКлиенте
Перем ОбъектКонтекст;

&НаКлиенте
Перем ОбъектКонтекстСохраняемый Экспорт;

//&НаКлиенте
//Перем ОбъектКонтекстДляВыполненияСВыбранногоШага;
//&НаКлиенте
//Перем ОбъектКонтекстДляВыполненияСВыбранногоШагаСохраняемый; 
&НаКлиенте
Перем МассивСостоянияКонтекстовДоВыполненияШага;

&НаКлиенте
Перем ТаблицаУжеСуществующихСценариев;

&НаКлиенте
Перем МассивВерсийFeatureИмяФайла;
&НаКлиенте
Перем МассивВерсийFeatureВерсия;

&НаКлиенте
Перем МассивВерсийEPFИмяФайла;
&НаКлиенте
Перем МассивВерсийEPFВерсия;


&НаКлиенте
Перем ИдетОпросЭлементовФормTestClient;
&НаКлиенте
Перем МассивСостояниеФормTestClient;

&НаКлиенте
Перем ОбработкаСвязаннаяСИсполняемойФичей Экспорт;

&НаКлиенте
Перем СлужебнаяПеременная Экспорт;

&НаКлиенте
Перем ТаблицаКонтекстовОбработок;

&НаКлиенте
Перем МассивИменКонтекстовОбработок;

&НаКлиенте
Перем ВыполнятьСценарииАсинхронно;

&НаКлиенте
Перем МассивСценариевДляВыполнения,МассивСтрокДереваДанныеФормы;

&НаКлиенте
Перем ТекИД_СценарияВМассиве;

&НаКлиенте
Перем ТекИД_ШагаВМассиве;

&НаКлиенте
Перем ТекИД_ВыполненногоШагаВМассиве;

&НаКлиенте
Перем СохраненноеСостояниеФормыTestClient;

&НаКлиенте
Перем ВсёЕщёИдётВыполнениеШагов;

&НаКлиенте
Перем МассивИДСтрокиДерева;

&НаКлиенте
Перем МассивРезультатПрохожденияТестовСценария;

&НаКлиенте
Перем ЦветУспешно;
&НаКлиенте
Перем ЦветОжидает;
&НаКлиенте
Перем ЦветНеУспешно;
&НаКлиенте
Перем ЦветЧужойСнипет;

&НаКлиенте
Перем ШагСтрокДляМодуля;

&НаКлиенте
Перем ХостСистема Экспорт;

&НаКлиенте
Перем ИмяФайлаЛогаИнструкцииHTML,ТекущаяФичаИнструкцииHTML;

&НаКлиенте
Перем ИмяФайлаЛогаИнструкцииMarkdown,ТекущаяФичаИнструкцииMarkdown;

&НаКлиенте
Перем СтатусЗапускаСценариев;

&НаКлиенте
Перем ЭтоLinux;

&НаКлиенте
Перем ТаблицаОбработокДляОтладки;

&НаКлиенте
Перем СтрокаШагаСКоторогоНадоВыполнятьСценарий;

&НаКлиенте
Перем СчитываниеМакетаНачСтр Экспорт;
&НаКлиенте
Перем СчитываниеМакетаНачКол Экспорт;
&НаКлиенте
Перем СчитываниеМакетаКолСтр Экспорт;
&НаКлиенте
Перем СчитываниеМакетаКолКол Экспорт;
&НаКлиенте
Перем ПредставлениеВертЧертыВТабДок;



&НаКлиенте
Перем ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий;

&НаКлиенте
Перем МассивPIDОкон1С,ЗначениеПараметровДляСнятияСкриншотов,ТекProcessID;

&НаКлиенте
Перем ИмяФайлаСубтитров,ИнтервалВыполненияШагаПриЗаписиВидео,БылаОшибкаСкриптовСборкиВидео;

&НаКлиенте
Перем СкриншотСделанВСценарии Экспорт;

&НаКлиенте
Перем WshShell;

&НаКлиенте
Перем МассивСнипетовПрерывающихЗаписьСценария,ИДВставкиВВидео,МассивЧастейВидео,КоличествоШаговВДаннойЧастиВидео;

&НаКлиенте
Перем ЭтоЗапускВРежимеКоманднойСтроки,ЭтоЗапускВРежимеБезЗагрукиНастроек;

&НаКлиенте
Перем МассивTTS;

&НаКлиенте
Перем МодульРаботыСВидео;



&НаКлиенте
Процедура СделатьСообщение(Знач Сообщение, ТипСообщения = ""Информация"") Экспорт
	
	ТипСообщения = ?(ТипСообщения = ""Информация"", СтатусСообщения.Обычное, СтатусСообщения.ОченьВажное);
	Сообщить(Строка(ТекущаяДата()) + "" "" + Сообщение, ТипСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура Отладка(Знач Сообщение) Экспорт
	Если Объект.DebugLog Тогда
		СделатьСообщение(Сообщение);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуВызоваSikuli() Экспорт
	Возврат """"""C:\Program Files (x86)\Java\jre6\bin\java.exe"""" -Xms64M -Xmx512M -Dfile.encoding=UTF-8 -Dpython.path=""""C:\Program Files (x86)\Sikuli X\sikuli-script.jar/"""" -jar """"C:\Program Files (x86)\Sikuli X\sikuli-ide.jar"""" -r "";
КонецФункции	

&НаКлиенте
Процедура Sleep(КолСекунд) Экспорт
	
    Попытка
        Если ЭтоLinux Тогда
            Команда = ""ping -i ""+Строка(КолСекунд)+"" 127.0.0.1 -c 2"";
            КомандаСистемы(Команда);
        Иначе
            Команда = ""ping 127.0.0.1 -n ""+СокрЛП(КолСекунд+1); //+1 нужен, т.к. в реальности происходит на один пинг меньше
            ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
        КонецЕсли;	    
    Исключение
        Сообщить(""Sleep:""+ОписаниеОшибки());
    КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьSikuliСкрипт(СтрокаКоманды,ЖдатьОкончания = -1) Экспорт
	Стр = ПолучитьСтрокуВызоваSikuli() + "" "" + СтрокаКоманды;
	Возврат ВыполнитьКомандуОСБезПоказаЧерногоОкна(Стр,ЖдатьОкончания);
КонецФункции	

&НаКлиенте
Функция ВыполнитьКомандуОСБезПоказаЧерногоОкна(Стр,ЖдатьОкончания = -1) Экспорт
	//если ЖдатьОкончания = -1, тогда будет ожидания окончания работы приложения
	ИмяВременногоBAT = ПолучитьИмяВременногоФайла(""bat"");
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоBAT,КодировкаТекста.ANSI,,Истина); 
	ЗТ.ЗаписатьСтроку(Стр); 
	ЗТ.Закрыть();
	
	Если WshShell = Неопределено Тогда
		WshShell	= Новый COMОбъект(""WScript.Shell"");
	КонецЕсли;	 
	Рез			= WshShell.Run(ИмяВременногоBAT,0,ЖдатьОкончания);
	WshShell	= Неопределено;
	
	Возврат Рез;
КонецФункции	

&НаКлиенте
Функция СкопироватьСтруктуру(Оригинал)
	Результат = Новый Структура();
	Для каждого Элем Из Оригинал Цикл
		Результат.Вставить(Элем.Ключ,Элем.Значение);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции	

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРПередВыполнениемШагаСервер(ИмяШага)
	ЗаписьЖурналаРегистрации(""VanessaBehavior.ПередВыполнениемШага"",УровеньЖурналаРегистрации.Информация,,,ИмяШага);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРОшибка(ИмяСобытия,Стр)
	ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,,,Стр);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВЖРПередВыполнениемШага(ИмяШага)
	ЗаписатьЛогВЖРПередВыполнениемШагаСервер(ИмяШага);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРПередВыполнениемСценарияСервер(ИмяСценария)
	ЗаписьЖурналаРегистрации(""VanessaBehavior.ПередВыполнениемСценария"",УровеньЖурналаРегистрации.Информация,,,ИмяСценария);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВЖРПередВыполнениемСценария(ИмяСценария)
	ЗаписатьЛогВЖРПередВыполнениемСценарияСервер(ИмяСценария);
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьЗначение(Парам,ПараметрВызватьИсключение = Истина) Экспорт
	Если ПараметрВызватьИсключение Тогда
		Попытка
			ВызватьИсключение ""Исключение для просмотра значения."";
		Исключение
		
		КонецПопытки;
	КонецЕсли;  
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаСервереБезКонтекста
Функция УзнатьЕстьПоддержкаНемодальныхФорм()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Массив1 = РазложитьСтрокуВМассивПодстрок(СистемнаяИнформация.ВерсияПриложения,""."");
	Массив2 = РазложитьСтрокуВМассивПодстрок(""8.3.3.641"",""."");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество()-1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Версия1БольшеИлиРавно = Ложь;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Версия1БольшеИлиРавно;
КонецФункции

&НаСервере
Функция УзнатьРежимСовместимости()
	Значение = ""Не использовать"";
	
	
	Попытка
		Значение = Строка(Вычислить(""Метаданные.РежимСовместимости""));
	Исключение
		Возврат Значение;
	КонецПопытки;	
	
	Возврат Значение;
	
КонецФункции	


&НаСервере
Функция УзнатьЕстьПоддержкаАсинхронныхВызовов()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Массив1 = РазложитьСтрокуВМассивПодстрок(СистемнаяИнформация.ВерсияПриложения,""."");
	Массив2 = РазложитьСтрокуВМассивПодстрок(""8.3.5.1383"",""."");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество()-1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Версия1БольшеИлиРавно = Ложь;
		КонецЕсли;	 
	КонецЦикла;
	
	Рез = Версия1БольшеИлиРавно И Вычислить(""Метаданные.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент <> Метаданные.СвойстваОбъектов.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент.Использовать"");
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция УзнатьЕстьПоддержкаНемодальныхФормКлиент() Экспорт
	Возврат УзнатьЕстьПоддержкаНемодальныхФорм();
КонецФункции

&НаКлиенте
Процедура ОбновитьКнопкуЗагрузитьФичи()
	Если Объект.текЗначениеОперации = ""ЗагрузитьФичиИзКаталога"" Тогда
		Элементы.ПодменюЗагрузитьФичи.Заголовок = ""Загрузить фичи из каталога"";
	ИначеЕсли Объект.текЗначениеОперации = ""ЗагрузитьОднуФичу"" Тогда
		Элементы.ПодменюЗагрузитьФичи.Заголовок = ""Загрузить одну фичу"";
	ИначеЕсли Объект.текЗначениеОперации = """" Тогда
	Иначе	
		Стр = ""Ошибка! Неизвестное значение параметра текЗначениеОперации = "" + Объект.текЗначениеОперации;
		Сообщить(Стр);	
		ВызватьИсключение Стр;
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТестыЗагрузитьФичиИзКаталога()
	ОчиститьСообщения();
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьВыборФайла"""", ЭтаФорма)"");
		Выполнить(""ДиалогОткрытияФайла.Показать(ОписаниеОповещения)"");
	Иначе	
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Объект.КаталогФич = ДиалогОткрытияФайла.Каталог;
			
			СохранитьНастройкиВХранилище(""КаталогФич"", Объект.КаталогФич);
			
			ЗагрузитьФичи();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФичиИзКаталога(Команда)
	Объект.текЗначениеОперации = ""ЗагрузитьФичиИзКаталога"";
	ОбновитьКнопкуЗагрузитьФичи();
	
	Объект.РежимВыполненияСценарияСВыбранногоШага = Ложь;
	СтрокаШагаСКоторогоНадоВыполнятьСценарий      = Неопределено;
	МассивСостоянияКонтекстовДоВыполненияШага     = Новый Массив;
	
	ЗагрузитьТестыЗагрузитьФичиИзКаталога();
КонецПроцедуры

&НаСервере
Функция ПолучитьПутьКОбработкеСервер()
	Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
		Возврат Объект.КаталогИнструментов;
	КонецЕсли;	 
	
	Объект1 = РеквизитФормыВЗначение(""Объект"");
	ИспользуемоеИмяФайла = НРег(Объект1.ИспользуемоеИмяФайла);
	Если (Лев(ИспользуемоеИмяФайла,6) <> ""e1cib/"") и (Лев(ИспользуемоеИмяФайла,6) <> ""e1cib\"") Тогда
		Возврат ИспользуемоеИмяФайла;
	Иначе
		Возврат """";
	КонецЕсли;	 
КонецФункции

&НаКлиенте
Процедура ВосстановитьНастройкиКлиент()
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;  
	
	//СтрЗапуска = ""StartFeaturePlayer;VBParams=H:\Commons\Temp\VBParams.json"";
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	Если СтрЗапуска <> """" Тогда
		СтруктураПараметров = ПолучитьСтруктуруПараметров(СтрЗапуска);
		StartFeaturePlayer = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""StartFeaturePlayer"");
		Если StartFeaturePlayer = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки = Истина;
			//значит мы в режиме ЗапускВРежимеКоманднойСтроки
			Возврат;
		КонецЕсли;	
		
		NoLoadConfig = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""NoLoadConfig"");
		Если NoLoadConfig = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки    = Истина;
			ЭтоЗапускВРежимеБезЗагрукиНастроек = Истина;
			//значит нам сообщили, что не надо загружать настройки
			Возврат;
		КонецЕсли;	
		
		LibsOnly = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""LibsOnly"");
		Если LibsOnly = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки    = Истина;
			ЭтоЗапускВРежимеБезЗагрукиНастроек = Истина;
			Объект.DebugLog                    = Истина;
			//значит нам сообщили, что не надо загружать настройки, но надо добавить стандартные библиотеки
			
			Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
				Объект.КаталогиБиблиотек.Добавить(Объект.КаталогИнструментов + ""\features\Libraries"");
				Объект.СписокТеговИсключение.Добавить(""IgnoreOnCIMainBuild"");
			КонецЕсли;	 
			
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	
	ВосстановитьНастройки(ЭтоLinux);
	ВосстановитьВсеНастройкиИзХранилища();	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки(ЭтоLinux)
	
	Настройки = ХранилищеОбщихНастроек.Загрузить(""VanessaBehaviorUF"");
	Если ТипЗнч(Настройки) = Тип(""Структура"") Тогда
		
		Настройки.Свойство(""DebugLog"", Объект.DebugLog);
		Настройки.Свойство(""ГенерироватьУФ"",Объект.ГенерироватьУФ);
		Настройки.Свойство(""КаталогФич"", Объект.КаталогФич);
		Настройки.Свойство(""ДелатьОтчетВФорматеАллюр"", Объект.ДелатьОтчетВФорматеАллюр);
		Настройки.Свойство(""КаталогOutputAllure"", Объект.КаталогOutputAllure);
		Настройки.Свойство(""ДелатьОтчетВоВнутреннемФормате"", Объект.ДелатьОтчетВоВнутреннемФормате);
		Настройки.Свойство(""ДелатьОтчетВФорматеxUnit"", Объект.ДелатьОтчетВФорматеxUnit);
		Настройки.Свойство(""КаталогOutputxUnit"", Объект.КаталогOutputxUnit);
		Настройки.Свойство(""текЗначениеОперации"", Объект.текЗначениеОперации);
		Настройки.Свойство(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
		Настройки.Свойство(""СоздаватьИнструкциюHTML"", Объект.СоздаватьИнструкциюHTML);
		Настройки.Свойство(""КаталогOutputИнструкцияHTML"", Объект.КаталогOutputИнструкцияHTML);
		
		Настройки.Свойство(""СоздаватьИнструкциюMarkdown"", Объект.СоздаватьИнструкциюMarkdown);
		Настройки.Свойство(""КаталогOutputИнструкцияMarkdown"", Объект.КаталогOutputИнструкцияMarkdown);
		
		Настройки.Свойство(""СоздаватьИнструкциюВидео"", Объект.СоздаватьИнструкциюВидео);
		Настройки.Свойство(""КаталогOutputИнструкцияВидео"", Объект.КаталогOutputИнструкцияВидео);
		
		Настройки.Свойство(""СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур"", Объект.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
		Настройки.Свойство(""СписокТеговИсключение"", Объект.СписокТеговИсключение);
		Настройки.Свойство(""СписокТеговОтбор"", Объект.СписокТеговОтбор);
		Настройки.Свойство(""ДелатьЛогВыполненияСценариевВЖР"", Объект.ДелатьЛогВыполненияСценариевВЖР);
		Настройки.Свойство(""ПодключитьВнешниеОбработкиДляОтладки"", Объект.ПодключитьВнешниеОбработкиДляОтладки);
		Настройки.Свойство(""СоздаватьОбластиПриГенерацииКода"", Объект.СоздаватьОбластиПриГенерацииКода);
		Настройки.Свойство(""КаталогПроекта"", Объект.КаталогПроекта);
		
		Настройки.Свойство(""ЗапускатьТестКлиентВРежимеОтладки"", Объект.ЗапускатьТестКлиентВРежимеОтладки);
		Настройки.Свойство(""КлючиОтладки"", 						Объект.КлючиОтладки);
		Настройки.Свойство(""АдресОтладчика"", 					Объект.АдресОтладчика);
		Настройки.Свойство(""ПортЗапускаТестКлиента"",			Объект.ПортЗапускаТестКлиента);
		
		Если НЕ Настройки.Свойство(""СоздаватьОбластиПриГенерацииКода"") Тогда
			Объект.СоздаватьОбластиПриГенерацииКода = Истина;
		КонецЕсли;	 
		
		Если Настройки.Свойство(""ВыполнятьШагиАссинхронно"") Тогда
			Настройки.Свойство(""ВыполнятьШагиАссинхронно"", Объект.ВыполнятьШагиАссинхронно);
		КонецЕсли;	
		
		Если Настройки.Свойство(""СохранятьКонтекстыПередВыполнениемШагов"") Тогда
			Настройки.Свойство(""СохранятьКонтекстыПередВыполнениемШагов"", Объект.СохранятьКонтекстыПередВыполнениемШагов);
		КонецЕсли;	
		
		Настройки.Свойство(""ВыводитьТекстМодуляВместоПерегенерацииEPF"", Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF);
		
		Если Настройки.Свойство(""КомандаСделатьСкриншот"") Тогда
			Настройки.Свойство(""КомандаСделатьСкриншот"", Объект.КомандаСделатьСкриншот);
		КонецЕсли;
		Если ПустаяСтрока(Объект.КомандаСделатьСкриншот) Тогда
			Если ЭтоLinux Тогда
				Объект.КомандаСделатьСкриншот = ""import -window root"";
			Иначе
				Объект.КомандаСделатьСкриншот = """"""C:\Program Files (x86)\IrfanView\i_view32.exe"""" /capture=1 /convert="";
			КонецЕсли;	 
		КонецЕсли;	 
		
		Настройки.Свойство(""ДелатьСкриншотПриВозникновенииОшибки"", Объект.ДелатьСкриншотПриВозникновенииОшибки);
		Настройки.Свойство(""КаталогOutputСкриншоты"", Объект.КаталогOutputСкриншоты);
		
		Настройки.Свойство(""ИнтервалВыполненияШагаЗаданныйПользователем"", Объект.ИнтервалВыполненияШагаЗаданныйПользователем);
		
		//настройки записи видео
		Если Настройки.Свойство(""ЗаписьВидеоКомандаНачатьЗаписьВидео"") Тогда
			Настройки.Свойство(""ЗаписьВидеоКомандаНачатьЗаписьВидео"", Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео);
		Иначе
			Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео = """"""C:\Program Files (x86)\VideoLAN\VLC\vlc.exe"""" screen://  -I rc --rc-quiet --rc-host=127.0.0.1:8082 --nommx :screen-mouse-image=""""<screenmouseimage>"""" :screen-fps=<fps> :screen-width=<screenwidth> :screen-height=<screenheight> :screen-top=0 :screen-left=0 :screen-caching=100 :sout=#transcode{vcodec=mp4v,vb=400,fps=<fps>,scale=1,width=<screenwidth>,height=<screenheight>,acodec=none}:duplicate{dst=std{access=file,mux=mp4,dst=<dst>}}"";
		КонецЕсли;	 
		//""C:\Program Files (x86)\VideoLAN\VLC\vlc.exe"" screen://  -I rc --rc-quiet --rc-host=127.0.0.1:8082 --nommx :screen-mouse-image=""<screenmouseimage>"" :screen-fps=<fps> :screen-width=<screenwidth> :screen-height=<screenheight> :screen-top=0 :screen-left=0 :screen-caching=100 :sout=#transcode{vcodec=mp4v,vb=400,fps=<fps>,scale=1,width=<screenwidth>,height=<screenheight>,acodec=none}:duplicate{dst=std{access=file,mux=mp4,dst=<dst>}}
		
		Настройки.Свойство(""ЗаписьВидеоЭкранШирина"", Объект.ЗаписьВидеоЭкранШирина);
		Настройки.Свойство(""ЗаписьВидеоЭкранВысота"", Объект.ЗаписьВидеоЭкранВысота);
		Настройки.Свойство(""ЗаписьВидеоКоличествоКадров"", Объект.ЗаписьВидеоКоличествоКадров);
		Настройки.Свойство(""ЗаписьВидеоФайлКурсораМышки"", Объект.ЗаписьВидеоФайлКурсораМышки);
		Настройки.Свойство(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"", Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм);
		Настройки.Свойство(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"", Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы);
		Настройки.Свойство(""ЗаписьВидеоКаталогДляВременныхФайлов"", Объект.ЗаписьВидеоКаталогДляВременныхФайлов);
		Настройки.Свойство(""ЗаписьВидеоФайлВодянойЗнак"", Объект.ЗаписьВидеоФайлВодянойЗнак);
		Настройки.Свойство(""ЗаписьВидеоКомандаFfmpeg"", Объект.ЗаписьВидеоКомандаFfmpeg);
		Настройки.Свойство(""ЗаписьВидеоКомандаConvert"", Объект.ЗаписьВидеоКомандаConvert);
		Настройки.Свойство(""ЗаписьВидеоКаталогМузыки"", Объект.ЗаписьВидеоКаталогМузыки);
		Настройки.Свойство(""ЗаписьВидеоДелатьНаложениеTTS"", Объект.ЗаписьВидеоДелатьНаложениеTTS);
		Настройки.Свойство(""ЗаписьВидеоПутьКДвижкуTTS"", Объект.ЗаписьВидеоПутьКДвижкуTTS);
		Настройки.Свойство(""ЗаписьВидеоИмяTTS"", Объект.ЗаписьВидеоИмяTTS);
		Настройки.Свойство(""ЗаписьВидеоСловарьЗамен"", Объект.ЗаписьВидеоСловарьЗамен);
		
		
	Иначе	//значит это первый запуск VB
		Объект.ГенерироватьУФ = Истина;
		Объект.ПортЗапускаТестКлиента =  1538;
		Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
			Объект.КаталогиБиблиотек.Добавить(Объект.КаталогИнструментов + ""\features\Libraries"");
			Объект.СписокТеговИсключение.Добавить(""IgnoreOnCIMainBuild"");
		КонецЕсли;	 
		
		Если ЭтоLinux Тогда
			Объект.КомандаСделатьСкриншот = ""import -window root"";
		Иначе
			Объект.КомандаСделатьСкриншот = """"""C:\Program Files (x86)\IrfanView\i_view32.exe"""" /capture=1 /convert="";
		КонецЕсли;	 
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;  
	
	Настройки = Новый Структура;
	Настройки.Вставить(""DebugLog"", Объект.DebugLog);
	//Настройки.Вставить(""GenerateEpf"", Объект.GenerateEpf);
	//Настройки.Вставить(""TestRun"", Объект.TestRun);
	Настройки.Вставить(""ГенерироватьУФ"", Объект.ГенерироватьУФ);
	//Настройки.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	Настройки.Вставить(""КаталогФич"", Объект.КаталогФич);
	
	Настройки.Вставить(""ДелатьОтчетВФорматеАллюр"", Объект.ДелатьОтчетВФорматеАллюр);
	Настройки.Вставить(""КаталогOutputAllure"", Объект.КаталогOutputAllure);
	
	Настройки.Вставить(""ДелатьОтчетВоВнутреннемФормате"", Объект.ДелатьОтчетВоВнутреннемФормате);
	
	Настройки.Вставить(""ДелатьОтчетВФорматеxUnit"", Объект.ДелатьОтчетВФорматеxUnit);
	Настройки.Вставить(""КаталогOutputxUnit"", Объект.КаталогOutputxUnit);
	
	Настройки.Вставить(""текЗначениеОперации"", Объект.текЗначениеОперации);
	Настройки.Вставить(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
	
	Настройки.Вставить(""СоздаватьИнструкциюHTML"", Объект.СоздаватьИнструкциюHTML);
	Настройки.Вставить(""КаталогOutputИнструкцияHTML"", Объект.КаталогOutputИнструкцияHTML);
	
	Настройки.Вставить(""СоздаватьИнструкциюMarkdown"", Объект.СоздаватьИнструкциюMarkdown);
	Настройки.Вставить(""КаталогOutputИнструкцияMarkdown"", Объект.КаталогOutputИнструкцияMarkdown);
	
	Настройки.Вставить(""СоздаватьИнструкциюВидео"", Объект.СоздаватьИнструкциюВидео);
	Настройки.Вставить(""КаталогOutputИнструкцияВидео"", Объект.КаталогOutputИнструкцияВидео);
	
	Настройки.Вставить(""СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур"", Объект.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
	
	Настройки.Вставить(""СписокТеговИсключение"", Объект.СписокТеговИсключение);
	Настройки.Вставить(""СписокТеговОтбор"", Объект.СписокТеговОтбор);
	
	Настройки.Вставить(""ДелатьЛогВыполненияСценариевВЖР"", Объект.ДелатьЛогВыполненияСценариевВЖР);
	Настройки.Вставить(""ПодключитьВнешниеОбработкиДляОтладки"", Объект.ПодключитьВнешниеОбработкиДляОтладки);
	
	Настройки.Вставить(""ВыполнятьШагиАссинхронно"", Объект.ВыполнятьШагиАссинхронно);
	
	Настройки.Вставить(""СохранятьКонтекстыПередВыполнениемШагов"", Объект.СохранятьКонтекстыПередВыполнениемШагов);
	
	Настройки.Вставить(""СоздаватьОбластиПриГенерацииКода"", Объект.СоздаватьОбластиПриГенерацииКода);
	
	Настройки.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	
	Настройки.Вставить(""ВыводитьТекстМодуляВместоПерегенерацииEPF"", Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF);
	
	Настройки.Вставить(""КомандаСделатьСкриншот"", Объект.КомандаСделатьСкриншот);
	
	Настройки.Вставить(""ДелатьСкриншотПриВозникновенииОшибки"", Объект.ДелатьСкриншотПриВозникновенииОшибки);
	Настройки.Вставить(""КаталогOutputСкриншоты"", Объект.КаталогOutputСкриншоты);
	
	Настройки.Вставить(""ИнтервалВыполненияШагаЗаданныйПользователем"", Объект.ИнтервалВыполненияШагаЗаданныйПользователем);
	Настройки.Вставить(""КаталогПроекта"", Объект.КаталогПроекта);
	
	Настройки.Вставить(""ЗапускатьТестКлиентВРежимеОтладки"", Объект.ЗапускатьТестКлиентВРежимеОтладки);
	Настройки.Вставить(""КлючиОтладки"", 						Объект.КлючиОтладки);
	Настройки.Вставить(""АдресОтладчика"", 					Объект.АдресОтладчика);
	Настройки.Вставить(""ПортЗапускаТестКлиента"",			Объект.ПортЗапускаТестКлиента);
	
	//запись видео
	Настройки.Вставить(""ЗаписьВидеоКомандаНачатьЗаписьВидео"", Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео);
	Настройки.Вставить(""ЗаписьВидеоЭкранШирина"", Объект.ЗаписьВидеоЭкранШирина);
	Настройки.Вставить(""ЗаписьВидеоЭкранВысота"", Объект.ЗаписьВидеоЭкранВысота);
	Настройки.Вставить(""ЗаписьВидеоКоличествоКадров"", Объект.ЗаписьВидеоКоличествоКадров);
	Настройки.Вставить(""ЗаписьВидеоФайлКурсораМышки"", Объект.ЗаписьВидеоФайлКурсораМышки);
	Настройки.Вставить(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"", Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм);
	Настройки.Вставить(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"", Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы);
	Настройки.Вставить(""ЗаписьВидеоКаталогДляВременныхФайлов"", Объект.ЗаписьВидеоКаталогДляВременныхФайлов);
	Настройки.Вставить(""ЗаписьВидеоФайлВодянойЗнак"", Объект.ЗаписьВидеоФайлВодянойЗнак);
	Настройки.Вставить(""ЗаписьВидеоКомандаFfmpeg"", Объект.ЗаписьВидеоКомандаFfmpeg);
	Настройки.Вставить(""ЗаписьВидеоКомандаConvert"", Объект.ЗаписьВидеоКомандаConvert);
	Настройки.Вставить(""ЗаписьВидеоКаталогМузыки"", Объект.ЗаписьВидеоКаталогМузыки);
	Настройки.Вставить(""ЗаписьВидеоДелатьНаложениеTTS"", Объект.ЗаписьВидеоДелатьНаложениеTTS);
	Настройки.Вставить(""ЗаписьВидеоПутьКДвижкуTTS"", Объект.ЗаписьВидеоПутьКДвижкуTTS);
	Настройки.Вставить(""ЗаписьВидеоИмяTTS"", Объект.ЗаписьВидеоИмяTTS);
	Настройки.Вставить(""ЗаписьВидеоСловарьЗамен"", Объект.ЗаписьВидеоСловарьЗамен);
	
	ХранилищеОбщихНастроек.Сохранить(""VanessaBehaviorUF"",, Настройки);
КонецПроцедуры

&НаСервере
Функция ПодключитьВнешнююОбработкуСервер(АдресХранилища)
	Возврат ВнешниеОбработки.Подключить(АдресХранилища,,Ложь); 
КонецФункции 

&НаКлиенте
Процедура ОбработкаПослеПомещенияФайла(Результат,АдресХранилища,ВыбранноеИмяФайла,ДополнительныеПараметры) Экспорт
	ИмяОбработки = ПодключитьВнешнююОбработкуСервер(АдресХранилища);
	ДополнительныеПараметры.Вставить(""ИмяОбработки"",ИмяОбработки);
КонецПроцедуры

&НаКлиенте
Функция ПодключитьВнешнююОбработкуКлиент(ИмяФайла) Экспорт
	Попытка
		ДополнительныеПараметры = Новый Структура;
		Если ЕстьПоддержкаНемодальныхФорм Тогда
			Оповещение = Вычислить(""Новый ОписаниеОповещения(""""ОбработкаПослеПомещенияФайла"""", ЭтаФорма, ДополнительныеПараметры)"");
			Выполнить(""НачатьПомещениеФайла(Оповещение,, ИмяФайла, Ложь, УникальныйИдентификатор);"");
			
			Возврат ДополнительныеПараметры.ИмяОбработки;
		Иначе
			АдресХранилища = """";
			ПоместитьФайл(АдресХранилища, ИмяФайла, , Ложь, УникальныйИдентификатор);
			//ПодключитьВнешнююОбработку(АдресХранилища);
			Результат = Неопределено;
			ИмяОбработки = ПодключитьВнешнююОбработкуСервер(АдресХранилища);
			Возврат ИмяОбработки;
		КонецЕсли;
	
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции 

&НаКлиенте
Процедура ПодключитьИнструментПарсерФич()
	ПутьКФайлу = Объект.КаталогИнструментов + ""/vbFeatureReader.epf"";
	Файл = Новый Файл(ПутьКФайлу);
	Если Не Файл.Существует() Тогда
		СделатьСообщение(""Файл "" + ПутьКФайлу + "" не найден!"");
		ВызватьИсключение ""Не найден файл vbFeatureReader.epf!"";
	КонецЕсли;	 
	
	Результат = ПодключитьВнешнююОбработкуКлиент(Файл.ПолноеИмя);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСнипет(Знач ID,Знач СтрокаРеальнойПроцедуры,Знач ИмяФайла,БылиОшибки,ТзнТаблицаИзвестныхStepDefinition)
	
	
	СтрокаРеальнойПроцедуры = СокрЛП(СтрокаРеальнойПроцедуры);
	ID                      = СокрЛП(ID);
	
	//уберем слово ""Экспорт""
	Если Прав(НРег(СтрокаРеальнойПроцедуры),7) = ""экспорт"" Тогда
		СтрокаРеальнойПроцедуры = Лев(СтрокаРеальнойПроцедуры,СтрДлина(СтрокаРеальнойПроцедуры)-7);
		СтрокаРеальнойПроцедуры = СокрЛП(СтрокаРеальнойПроцедуры);
	КонецЕсли;
	
	Если Лев(НРег(СтрокаРеальнойПроцедуры),9) = ""процедура"" Тогда
		СтрокаРеальнойПроцедуры = СокрЛП(Сред(СтрокаРеальнойПроцедуры,10));
	КонецЕсли;
	
	Поз = Найти(ID,""("");
	СтрПараметры = Сред(ID,Поз+1);
	СтрПараметры = Лев(СтрПараметры,СтрДлина(СтрПараметры)-1);
	
	МассивПром = РазложитьСтрокуВМассивПодстрок(СтрПараметры, "","");
	МассивПараметров = Новый Массив;
	Для Каждого Элем Из МассивПром Цикл
		СтруктураПарам = Новый Структура;
		Тип = ""Строка"";
		Если Найти(НРег(Элем),""число"") > 0 Тогда
			Тип = ""Число"";
		КонецЕсли;
		Если Найти(НРег(Элем),""дата"") > 0 Тогда
			Тип = ""Дата"";
		КонецЕсли;
		СтруктураПарам.Вставить(""Тип"",Тип);
		МассивПараметров.Добавить(СтруктураПарам);
	КонецЦикла;
	
	ПромСтр = ТзнТаблицаИзвестныхStepDefinition.Найти(ID,""ID"");
	Если ПромСтр <> Неопределено Тогда
		Если НРег(ПромСтр.ИмяФайла) = НРег(ИмяФайла) Тогда //значит этот снипет из того же файла
			Возврат;
		КонецЕсли;	
	КонецЕсли;	 
	Если ПромСтр <> Неопределено Тогда
		БылиОшибки = Истина;
		Сообщить(""Ошибка в файле "" + ИмяФайла + "", снипет "" + ID + "" уже был в "" + ПромСтр.ИмяФайла);
		Возврат;
	КонецЕсли;
	
	СтрТаблицаИзвестныхStepDefinition                         = ТзнТаблицаИзвестныхStepDefinition.Добавить();
	СтрТаблицаИзвестныхStepDefinition.ID                      = ID;
	СтрТаблицаИзвестныхStepDefinition.СтрокаРеальнойПроцедуры = СтрокаРеальнойПроцедуры;
	СтрТаблицаИзвестныхStepDefinition.ИмяФайла                = ИмяФайла;
	СтрТаблицаИзвестныхStepDefinition.Параметры               = МассивПараметров;
	СтрТаблицаИзвестныхStepDefinition.СтрокаДляПоиска         = НРег(Лев(ID,Найти(ID,""("")-1));
	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСнипетыСервер(МассивСнипетовИзОбработки,ИмяФайла,БылиОшибки)
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	
	Для каждого Снипет Из МассивСнипетовИзОбработки Цикл
		ДобавитьСнипет(Снипет.Снипет,Снипет.ИмяПроцедуры,ИмяФайла,БылиОшибки,ТзнТаблицаИзвестныхStepDefinition);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition,""ТаблицаИзвестныхStepDefinition"");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьИзТаблицаИзвестныхStepDefinitionДанныеПоФайлуСервер(ИмяФайла)
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	
	Отбор = Новый Структура;
	Отбор.Вставить(""ИмяФайла"",ИмяФайла);
	МассивСтрок = ТзнТаблицаИзвестныхStepDefinition.НайтиСтроки(Отбор);
	
	Для каждого СтрокаТаблицы Из МассивСтрок Цикл
		ТзнТаблицаИзвестныхStepDefinition.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition,""ТаблицаИзвестныхStepDefinition"");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьУжеСуществующиеСнипетыИзОбработок(Знач КаталогФич,ДополнительныеПараметры = Неопределено)
	Файл = Новый Файл(КаталогФич);
	
	БылиОшибки = Ложь;
	НачальныйКаталог = КаталогФич;
	КаталогПоиска    = НачальныйКаталог;
	
	Файл = Новый Файл(НачальныйКаталог);
	Если НРег(Файл.Расширение) = "".feature"" Тогда
		КаталогПоиска = Файл.Путь;
	КонецЕсли;	 
	
	Отладка(""Ищу снипеты в каталоге "" + КаталогПоиска);
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,КаталогФич,""НайденныеФайлы""); //это файлы по данной библиотеке
		Если МассивФайлов = Неопределено Тогда
			МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""ПоискEPF"",""НайденныеФайлы"");
		КонецЕсли;	 
	Иначе	
		МассивФайлов = НайтиФайлы(КаталогПоиска,""*.epf"",Истина);
	КонецЕсли;	 
	
	Для Каждого Файл Из МассивФайлов Цикл
	
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			
			ВерсияФайла = Файл.ПолучитьВремяИзменения();
			ИДВерсииEPF = МассивВерсийEPFИмяФайла.Найти(Файл.ПолноеИмя);
			Если ИДВерсииEPF = Неопределено Тогда
				МассивВерсийEPFИмяФайла.Добавить(Файл.ПолноеИмя);
				МассивВерсийEPFВерсия.Добавить(ВерсияФайла);
			Иначе	
				Если МассивВерсийEPFВерсия[ИДВерсииEPF] <> ВерсияФайла Тогда
					//значит файл изменился
					//обновляем версию и удаляем старые снипеты
					МассивВерсийEPFВерсия[ИДВерсииEPF] = ВерсияФайла;
					
					УдалитьИзТаблицаИзвестныхStepDefinitionДанныеПоФайлуСервер(Файл.ПолноеИмя);
					
					ИДМассивИменКонтекстовОбработок = МассивИменКонтекстовОбработок.Найти(Файл.ПолноеИмя);
					МассивИменКонтекстовОбработок.Удалить(ИДМассивИменКонтекстовОбработок);
					ТаблицаКонтекстовОбработок.Удалить(ИДМассивИменКонтекстовОбработок);
					
					Отладка(""Загрузил новую версию: "" + Файл.ПолноеИмя);
					
				Иначе
					//значит уже актуальная версия файла загружена
					//Сообщить(""!!!!!!!!!!!!!!!!!!! "" + Файл.ПолноеИмя);
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		
		Попытка
			ИмяОбработки = ПодключитьВнешнююОбработкуКлиент(Файл.ПолноеИмя);
			ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"");
			Если ФормаОбработки = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
		Исключение
			Отладка(""Не смог получить список шагов в обработке: "" + Файл.ПолноеИмя);
			Отладка(""ПолучитьУжеСуществующиеСнипетыИзОбработок:"" + ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
		Попытка
			МассивСнипетовИзОбработки = ФормаОбработки.ПолучитьСписокТестов(ЭтаФорма);
		Исключение
			Сообщить(""Не смог загрузить снипеты из "" + Файл.ПолноеИмя);
			Сообщить(""ПолучитьУжеСуществующиеСнипетыИзОбработок:""+ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
		
		
		СтрТаблицаКонтекстовОбработок = Новый Структура;
		СтрТаблицаКонтекстовОбработок.Вставить(""ИмяФайла"",Файл.ПолноеИмя);
		СтрТаблицаКонтекстовОбработок.Вставить(""Обработка"",ФормаОбработки);
		
		ТаблицаКонтекстовОбработок.Добавить(СтрТаблицаКонтекстовОбработок);
		МассивИменКонтекстовОбработок.Добавить(Файл.ПолноеИмя);
		
		ДобавитьСнипетыСервер(МассивСнипетовИзОбработки,Файл.ПолноеИмя,БылиОшибки);
		
	КонецЦикла;
	
	Если БылиОшибки Тогда
		Сообщить(""Были ошибки в ПросканироватьИсходникиИНайтиВсеStepDefinition."");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОбходКаталогов(ПутьКаталога,МассивРезультатОбходаКаталогов,Уровень,ДополнительныеПараметры,ТекРодитель,КолЭлементовДобавлено)
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ФайлПутьКаталога = Новый Файл(ПутьКаталога);
		Если ФайлПутьКаталога.Расширение = "".feature"" Тогда
			НайденныеФайлы = Новый Массив;//вернём одну фичу
			НайденныеФайлы.Добавить(ФайлПутьКаталога);
			ТекРодитель = НайденныеФайлы[0].Путь;
		Иначе	
			НайденныеФайлы = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""ПоискFeature"",""НайденныеФайлы"");
			Если ТекРодитель = Неопределено Тогда
				Если НайденныеФайлы.Количество() > 0 Тогда
					ТекРодитель = НайденныеФайлы[0].Путь;
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЕсли;	 
		
	Иначе	
		ФайлПутьКаталога = Новый Файл(ПутьКаталога);
		Если ФайлПутьКаталога.ЭтоКаталог() Тогда
			НайденныеФайлы = НайтиФайлы(ПутьКаталога,""*"");
		Иначе
			НайденныеФайлы = Новый Массив;//вернём одну фичу
			НайденныеФайлы.Добавить(ФайлПутьКаталога);
		КонецЕсли;	 
	КонецЕсли;	 
		
	Для каждого ф из НайденныеФайлы цикл
		Если ЕстьПоддержкаАсинхронныхВызовов Тогда
			Если ф.Путь <> ТекРодитель Тогда
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;  
		
		Если Не ЕстьПоддержкаАсинхронныхВызовов Тогда
			ЭтоКаталог = ф.ЭтоКаталог();
		Иначе
			ЭтоКаталог = Ложь;
			Если ф.Расширение = """" Тогда
				ЭтоКаталог = Истина;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если ЭтоКаталог тогда //это каталог
			СтруткураФайла = Новый Структура;
			СтруткураФайла.Вставить(""Уровень"",Уровень);
			СтруткураФайла.Вставить(""Каталог"",Истина);
			СтруткураФайла.Вставить(""Фича"",Ложь);
			СтруткураФайла.Вставить(""Имя"",ф.Имя);
			СтруткураФайла.Вставить(""ПолныйПуть"",ф.ПолноеИмя);
			МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
			ТекИД = МассивРезультатОбходаКаталогов.Количество()-1;
			
			ТекКолЭлементовДобавлено = 0;
			Уровень = Уровень + 1;
			ОбходКаталогов(ДополнитьСлешВПуть(ПутьКаталога)+ф.Имя,МассивРезультатОбходаКаталогов,Уровень,ДополнительныеПараметры,ДополнитьСлешВПуть(ф.ПолноеИмя), ТекКолЭлементовДобавлено);
			Уровень = Уровень - 1;
			
			Если ТекКолЭлементовДобавлено = 0 Тогда
				МассивРезультатОбходаКаталогов.Удалить(ТекИД);
			КонецЕсли;  
			КолЭлементовДобавлено = КолЭлементовДобавлено + ТекКолЭлементовДобавлено;
			
		ИначеЕсли НРег(ф.Расширение) = "".feature"" Тогда
			
			ДвоичныеДанные = Новый ДвоичныеДанные(ф.ПолноеИмя);
			СтруткураФайла = ПолучитьСтруткураФайлаФичи(Уровень,ф.ИмяБезРасширения,ф.ПолноеИмя,ДвоичныеДанные);
			
			МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
			КолЭлементовДобавлено = КолЭлементовДобавлено + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруткураФайлаФичи(Уровень,ИмяБезРасширения,ПолноеИмя,ДвоичныеДанные)
	СтруткураФайла = Новый Структура;
	СтруткураФайла.Вставить(""Уровень"",Уровень);
	СтруткураФайла.Вставить(""Каталог"",Ложь);
	СтруткураФайла.Вставить(""Фича"",Истина);
	СтруткураФайла.Вставить(""Имя"",ИмяБезРасширения);
	СтруткураФайла.Вставить(""ПолныйПуть"",ПолноеИмя);
	СтруткураФайла.Вставить(""ДвоичныеДанные"",ДвоичныеДанные);
	
	Возврат СтруткураФайла;
КонецФункции	

&НаСервере
Процедура УдалитьПустыеКаталогиИзДерева(Дерево)
	КолСтрок = Дерево.Строки.Количество();
	Для Ккк = 0 По КолСтрок-1 Цикл
		Строка = Дерево.Строки[КолСтрок-1 - Ккк];
		Если Строка.Каталог Тогда
			Если Строка.Строки.Количество() = 0 Тогда
				Дерево.Строки.Удалить(Строка);
			Иначе	
				УдалитьПустыеКаталогиИзДерева(Строка);
			КонецЕсли;  
		КонецЕсли;  
	КонецЦикла;
КонецПроцедуры


&НаСервере
Функция ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(ИсходныйМассив)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""ИмяСценария"");
	Тзн.Колонки.Добавить(""ИмяФайла"");
	Тзн.Колонки.Добавить(""ТаблицаШагов"");
	Тзн.Колонки.Добавить(""ДвоичныеДанные"");
	Для каждого Элем Из ИсходныйМассив Цикл
		СтрТзн = Тзн.Добавить();
		
		СтрТзн.ИмяСценария    = Элем.ИмяСценария;
		СтрТзн.ИмяФайла       = Элем.ИмяФайла;
		СтрТзн.ТаблицаШагов   = Элем.ТаблицаШагов;
		СтрТзн.ДвоичныеДанные = Элем.ДвоичныеДанные;
	КонецЦикла;
	
	Возврат Тзн;
КонецФункции	

&НаСервере
Процедура УдалитьПустыеКаталоги(МассивКаталоговДляПроверкиНаПустоту)
	Массив = Новый Массив;
	
	Для каждого ВеткаСтроки Из МассивКаталоговДляПроверкиНаПустоту Цикл
		Если ВеткаСтроки.Количество() = 0 Тогда
			ВеткаРодитель = ВеткаСтроки.Родитель.Родитель;//так определяется родитель на один уровень вверх, когда в переменной лежат строки дерева
			Если ВеткаРодитель = Неопределено Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Массив.Найти(ВеткаРодитель) = Неопределено Тогда
				Массив.Добавить(ВеткаРодитель.Строки);
			КонецЕсли;	 
			
			ВеткаРодитель.Строки.Удалить(ВеткаСтроки.Родитель);
		КонецЕсли;	 
	КонецЦикла;
	
	Если Массив.Количество() > 0 Тогда
		УдалитьПустыеКаталоги(Массив);
	КонецЕсли;	 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиДереваФичамиСервер(Дерево,FeatureReader,ТзнТаблицаИзвестныхStepDefinition,СтруктураПараметров)
	
	
	МассивСтрокДляУдаления = Новый Массив;
	Для каждого Строка Из Дерево.Строки Цикл
		Если Строка.Фича Тогда
			СтруктураПараметров.Вставить(""УдалитьСтрокуФичиИзДерева"",Ложь);
			
			//Сообщить(""ЗаполнитьСтрокиДереваФичамиСервер. "" + Строка.ПолныйПуть);
			
			
			FeatureReader.ЗагрузитьФичу(Строка.ПолныйПуть,Строка.Строки,ТзнТаблицаИзвестныхStepDefinition,СтруктураПараметров);
			
			Если СтруктураПараметров.УдалитьСтрокуФичиИзДерева Тогда
				СтуктураРодительПотомок = Новый Структура;
				СтуктураРодительПотомок.Вставить(""СтрокиГдеНаходитсяФича"",Дерево.Строки);
				СтуктураРодительПотомок.Вставить(""СтрокаФичи"",Строка);
				МассивСтрокДляУдаления.Добавить(СтуктураРодительПотомок);
			КонецЕсли;	 
		Иначе	
			ЗаполнитьСтрокиДереваФичамиСервер(Строка,FeatureReader,ТзнТаблицаИзвестныхStepDefinition,СтруктураПараметров);
		КонецЕсли;  
	КонецЦикла;
	
	
	МассивКаталоговДляПроверкиНаПустоту = СтруктураПараметров.МассивКаталоговДляПроверкиНаПустоту;
	Для каждого Элем Из МассивСтрокДляУдаления Цикл
		Элем.СтрокиГдеНаходитсяФича.Удалить(Элем.СтрокаФичи);
		
		Если МассивКаталоговДляПроверкиНаПустоту.Найти(Элем.СтрокиГдеНаходитсяФича) = Неопределено Тогда
			МассивКаталоговДляПроверкиНаПустоту.Добавить(Элем.СтрокиГдеНаходитсяФича);
		КонецЕсли;	 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоЗначенийПоМассивуСервер(МассивРезультатОбходаКаталогов,ДвДанныеvbFeatureReader,СтруктураПараметров)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	Дерево.Строки.Очистить();
	ТекДерево = Дерево;
	ТекУровень = 0;
	
	Для каждого Элем Из МассивРезультатОбходаКаталогов Цикл
		Если Элем.Уровень > ТекУровень Тогда
			ТекУровень = Элем.Уровень;
			НовСтр     = ТекДерево.Строки.Добавить();
			ТекДерево  = НовСтр;
		ИначеЕсли Элем.Уровень < ТекУровень Тогда
			Разн = ТекУровень - Элем.Уровень;
			Для Ккк = 1 По Разн Цикл
				НовСтр = НовСтр.Родитель;
			КонецЦикла;
			НовСтр     = НовСтр.Родитель.Строки.Добавить();
			ТекУровень = Элем.Уровень;
			ТекДерево  = НовСтр;
		Иначе	
			НовСтр     = ТекДерево.Родитель.Строки.Добавить();
			ТекДерево  = НовСтр;
		КонецЕсли;  
		
		Если Элем.Каталог Тогда
			//НовСтр            = ТекСтроки.Строки.Добавить();
			НовСтр.Каталог    = Истина;
			НовСтр.ПолныйПуть = Элем.ПолныйПуть;
			НовСтр.Имя        = Элем.Имя;
		ИначеЕсли Элем.Фича Тогда
			//НовСтр            = ТекСтроки.Строки.Добавить();
			НовСтр.Фича        = Истина;
			НовСтр.ТипКартинки = 1;
			НовСтр.ПолныйПуть  = Элем.ПолныйПуть;
			НовСтр.Имя         = Элем.Имя;
		КонецЕсли;  
		
	КонецЦикла;
	
	УдалитьПустыеКаталогиИзДерева(ОбъектСервер.ДеревоТестов);
	
	Дерево.Строки.Сортировать(""ПолныйПуть"", Истина);
	
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	
	Если Не СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		ТаблицаУжеСуществующихСценариевСервер = ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ);
		СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариев"",ТаблицаУжеСуществующихСценариевСервер);
	КонецЕсли;	 
	
	
	МассивКаталоговДляПроверкиНаПустоту = Новый Массив;
	СтруктураПараметров.Вставить(""МассивКаталоговДляПроверкиНаПустоту"",МассивКаталоговДляПроверкиНаПустоту);
	
	
	
	
	ЗаполнитьСтрокиДереваФичамиСервер(Дерево,FeatureReader,ТзнТаблицаИзвестныхStepDefinition,СтруктураПараметров);
	
	
	
	
	УдалитьПустыеКаталоги(МассивКаталоговДляПроверкиНаПустоту);
	СтруктураПараметров.МассивКаталоговДляПроверкиНаПустоту = Неопределено;
	СтруктураПараметров.ТаблицаУжеСуществующихСценариев = Неопределено;
	Если СтруктураПараметров.Свойство(""КешФич"") Тогда
		СтруктураПараметров.КешФич = Неопределено;
	КонецЕсли;	 
	
	
	УдалитьФайлы(ВременноеИмяФайла);
	
	ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition,""ТаблицаИзвестныхStepDefinition"");
	ЗначениеВРеквизитФормы(ОбъектСервер,""Объект"");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПутьКFeatureReader()
	ПутьКФайлу = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""vbFeatureReader.epf"";
	
	Если Не ФайлСуществуетКомандаСистемы(ПутьКФайлу, ""ПолучитьПутьКFeatureReader"") Тогда
		ВызватьИсключение ""Файл <vbFeatureReader.epf> не найден в каталоге инструментов <"" + СокрЛП(Объект.КаталогИнструментов) + "">"";
	КонецЕсли;	 
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДерево(Каталог,ДополнительныеПараметры,СтруктураПараметров)
	Файл = Новый Файл(Каталог);
	МассивРезультатОбходаКаталогов = Новый Массив;
	
	СтруткураФайла = Новый Структура;
	СтруткураФайла.Вставить(""Каталог"",Истина);
	СтруткураФайла.Вставить(""Имя"",Файл.Имя);
	СтруткураФайла.Вставить(""ПолныйПуть"",Каталог);
	СтруткураФайла.Вставить(""Уровень"",1);
	
	МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
	
	Уровень = 2;
	ТекРодитель = Неопределено;
	КолЭлементовДобавлено = 0;
	ОбходКаталогов(Каталог,МассивРезультатОбходаКаталогов,Уровень,ДополнительныеПараметры,ТекРодитель,КолЭлементовДобавлено);    
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	
	СтруктураПараметров.Вставить(""МассивРезультатОбходаКаталогов"",МассивРезультатОбходаКаталогов);
	ЗаполнитьДеревоЗначенийПоМассивуСервер(МассивРезультатОбходаКаталогов,ДвДанныеvbFeatureReader,СтруктураПараметров);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьДеревоФич(СтруктураПараметров)
	КаталогИнструментов     = СтруктураПараметров.КаталогИнструментов;
	КаталогФич              = СтруктураПараметров.КаталогФич;
	МассивСообщений         = СтруктураПараметров.МассивСообщений;
	DebugLog                = СтруктураПараметров.DebugLog;
	КаталогиБиблиотек       = СтруктураПараметров.КаталогиБиблиотек;
	ДополнительныеПараметры = СтруктураПараметров.ДополнительныеПараметры;
	
	СтруктураПараметров.ДополнительныеПараметры = Неопределено;//они не могут быть сериализованы в поздних версиях платформы
	
	ПутьКФичам = Новый Файл(КаталогФич);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""КаталогФич"",""Существует"") Тогда
			Возврат;
		КонецЕсли;	 
	Иначе	
		Если Не ПутьКФичам.Существует() Тогда
			МассивСообщений.Добавить(""Не найден путь "" + КаталогФич);
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ТаблицаКонтекстовОбработок = Новый Массив;
		ТаблицаИзвестныхStepDefinition.Очистить();
		МассивИменКонтекстовОбработок.Очистить();
	КонецЕсли;	
	
	Путь = ПутьКФичам.ПолноеИмя;
	СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"",Истина);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""КаталогФич"",""ЭтоКаталог"") Тогда //это файл
			Путь = ПутьКФичам.Путь;
			СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"",Ложь);
		КонецЕсли;	 
	Иначе	
		Если ПутьКФичам.ЭтоФайл() Тогда
			Путь = ПутьКФичам.Путь;
			СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"",Ложь);
		КонецЕсли;	 
	КонецЕсли;	 
	
	ПолучитьУжеСуществующиеСнипетыИзОбработок(Путь, ДополнительныеПараметры);
	Для каждого Элем Из КаталогиБиблиотек Цикл
		ПолучитьУжеСуществующиеСнипетыИзОбработок(Элем.Значение, ДополнительныеПараметры);
	КонецЦикла;
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ТаблицаУжеСуществующихСценариев = Новый Массив();
	КонецЕсли; 
	
	МассивОбработанныхФайлов    = Новый Массив;
	ПолучитьУжеСуществующиеСценарииИзФич(Путь,ДополнительныеПараметры,МассивОбработанныхФайлов);
	Для каждого Элем Из КаталогиБиблиотек Цикл
		ПолучитьУжеСуществующиеСценарииИзФич(Элем.Значение,ДополнительныеПараметры,МассивОбработанныхФайлов);
	КонецЦикла;
	СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариевУФ"",ТаблицаУжеСуществующихСценариев);
	
	ЗаполнитьДерево(ПутьКФичам.ПолноеИмя,ДополнительныеПараметры,СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивДляПоискаДублейФайлов(МассивФайлов)
	Массив = Новый Массив;
	
	Для каждого Файл Из МассивФайлов Цикл
		Массив.Добавить(Файл.ПолноеИмя);
	КонецЦикла;
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Процедура ПолучитьУжеСуществующиеСценарииИзФич(Знач КаталогФич,ДополнительныеПараметры = Неопределено,МассивУжеОбработанныхаФайлов)
	Файл = Новый Файл(КаталогФич);
	
	НачальныйКаталог = КаталогФич;
	КаталогПоиска    = НачальныйКаталог;
	
	Файл = Новый Файл(НачальныйКаталог);
	Если НРег(Файл.Расширение) = "".feature"" Тогда
		КаталогПоиска = Файл.Путь;
	КонецЕсли;	 
	
	Отладка(""Ищу сценарии в каталоге "" + КаталогПоиска);
	
	//Сообщить(""КаталогПоиска=""+КаталогПоиска);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,КаталогФич,""НайденныеФайлы""); //это файлы по данной библиотеке
		Если МассивФайлов = Неопределено Тогда
			МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""ПоискFeature"",""НайденныеФайлы"");
		КонецЕсли;	 
		
		Ном = 0;
		Для каждого Библ Из Объект.КаталогиБиблиотек Цикл
			Ном = Ном + 1;
			
			МассивДляПоискаДублейФайлов = ПолучитьМассивДляПоискаДублейФайлов(МассивФайлов);
			
			МассивФайловБиблиотека = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""БиблиотекаФич""+Ном,""НайденныеФайлы"");
			Для каждого Элем Из МассивФайловБиблиотека Цикл
				Если МассивДляПоискаДублейФайлов.Найти(Элем.ПолноеИмя) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;	 
				
				МассивФайлов.Добавить(Элем);
			КонецЦикла;
		КонецЦикла;
		
	Иначе	
		МассивФайлов = НайтиФайлы(КаталогПоиска,""*.feature"",Истина);
	КонецЕсли;	 
	
	Для Каждого Файл Из МассивФайлов Цикл
		Если НРег(Файл.Расширение) <> "".feature"" Тогда
			Продолжить;
		КонецЕсли;	 
		
		ИмяФайла = НРег(Файл.ПолноеИмя);
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(Файл.ПолноеИмя,""UTF-8"");
		
		Если МассивУжеОбработанныхаФайлов.Найти(ИмяФайла) <> Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		МассивУжеОбработанныхаФайлов.Добавить(ИмяФайла);
		
		
		
		
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			ВерсияФайла = Файл.ПолучитьВремяИзменения();
			
			
			ИДВерсииФайла = МассивВерсийFeatureИмяФайла.Найти(ИмяФайла);
			Если ИДВерсииФайла = Неопределено Тогда
				МассивВерсийFeatureИмяФайла.Добавить(ИмяФайла);
				МассивВерсийFeatureВерсия.Добавить(ВерсияФайла);
			Иначе	
				Если МассивВерсийFeatureВерсия[ИДВерсииФайла] <> ВерсияФайла Тогда
					//значит файл изменился
					//обновляем версию и удаляем старые снипеты
					МассивВерсийFeatureВерсия[ИДВерсииФайла] = ВерсияФайла;
					
					
					МассивИД = Новый Массив;
					Ном = -1;
					Для каждого Элем Из ТаблицаУжеСуществующихСценариев Цикл
						Ном = Ном + 1;
						Если Элем.ИмяФайла = ИмяФайла Тогда
							МассивИД.Добавить(Ном);
						КонецЕсли; 
						
					КонецЦикла;
					
					Для Ккк = 0 По МассивИД.Количество()-1 Цикл
						ИД = МассивИД[МассивИД.Количество()-1 - Ккк];
						ТаблицаУжеСуществующихСценариев.Удалить(ИД);
					КонецЦикла;
					
					Отладка(""Загрузил новую версию: "" + Файл.ПолноеИмя);
				Иначе
					//значит уже актуальная версия файла загружена
					//Сообщить(""!!!!!!!!!!!!!!!!!!! "" + Файл.ПолноеИмя);
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		
		
		
		
		НашлиТегExportScenarios = Ложь;
		ДобавлятьШаги = Ложь;
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			Стр = СокрЛП(Стр);
			СтрНРег = НРег(Стр);
			
			Если Стр = """" Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если СтрНРег = ""@exportscenarios"" Тогда
				НашлиТегExportScenarios = Истина;
			КонецЕсли;	 
			
			
			Если Лев(СтрНРег,1) = ""@"" Тогда
				Продолжить;
			КонецЕсли;	 
			Если Лев(СтрНРег,1) = ""#"" Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если НашлиТегExportScenarios Тогда
				Если Лев(СтрНРег,9) = ""сценарий:"" Тогда
					ДобавлятьШаги = Истина;
					ИмяСценария = СокрЛП(Сред(Стр,10));
					ТаблицаШагов = Новый Массив;
					ТаблицаУжеСуществующихСценариев.Добавить(ПолучитьСтруктуруДляСценария((ИмяСценария),ИмяФайла,ТаблицаШагов));
					Продолжить;
				ИначеЕсли Лев(СтрНРег,19) = ""структура сценария:"" Тогда
					ДобавлятьШаги = Ложь;
					Продолжить;
				КонецЕсли;	
				
				Если ДобавлятьШаги Тогда
					ТаблицаШагов.Добавить(Стр);
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЦикла;	
		
		Текст.Закрыть();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруДляСценария(ИмяСценария,ИмяФайла,ТаблицаШагов)
	Структура = Новый Структура;
	Структура.Вставить(""ИмяСценария"",ИмяСценария);
	Структура.Вставить(""ИмяФайла"",ИмяФайла);
	Структура.Вставить(""ТаблицаШагов"",ТаблицаШагов);
	Структура.Вставить(""ДвоичныеДанные"",Новый ДвоичныеДанные(ИмяФайла));
	
	Возврат Структура;
КонецФункции	

&НаКлиенте
Функция ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ИмяПараметра, ЗначениеПараметра)
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	Для каждого Элем Из МассивДействий Цикл
		Если Элем.ИмяПараметра = ИмяПараметра Тогда
			Возврат Элем[ЗначениеПараметра];
		КонецЕсли;	 
	КонецЦикла;
КонецФункции	

&НаКлиенте
//Объединяем относительные пути файловой системы в один
// при передаче Путь = ../test/file.txt и ПутьОтносительно=c:\work\ возращаем c:\test\file.txt
// при передаче Путь = ./test/file.txt и ПутьОтносительно=c:\work\ возращаем c:\work\test\file.txt
// если в начале нет точки, считаем этот путь полным. 
Функция ПолучитьПолныйПутьОтносительноКаталогаОбработки(Знач Путь, Знач ПутьОтносительно)
	Перем Результат;
	Результат = Путь;
	Если Лев(СокрЛП(Путь), 1) = ""."" Тогда 
		ФайлОбработки = Новый Файл(ПутьОтносительно);
		КаталогОбработки = ДополнитьСлешВПуть(?(ФайлОбработки.ЭтоКаталог(), ФайлОбработки.ПолноеИмя, ФайлОбработки.Путь));
		ФайлПути = Новый Файл(КаталогОбработки+Путь);
		
		Результат = ФайлПути.ПолноеИмя;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПроверитьСуществованиеКаталогаИнструментов(ИмяФайла, ДополнительныеПараметры = Неопределено, ПутьКОбработке)
	Перем ПутьФайла;
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Возврат ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""КаталогИнструментов"",""Существует"");
	Иначе	
		ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(ИмяФайла);
		ФайлПроверкаСуществования = Новый Файл(ПутьФайла);
		Если НЕ ФайлПроверкаСуществования.Существует() Тогда
			Сообщить(""Не найден каталог инструментов: "" + ИмяФайла);
			Возврат Ложь;
		КонецЕсли;	   
		
	КонецЕсли;	 
	Возврат Истина;
КонецФункции	

&НаКлиенте
Функция ПроверитьСуществованиеКаталогаБиблиотек(ДополнительныеПараметры = Неопределено, ПутьКОбработке)
	Перем ПутьФайла;
	
	БылиОшибки = Ложь;
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Ном = 0;
		Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
			Ном = Ном + 1;
			Если НЕ ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогиБиблиотек""+Ном, ""Существует"") Тогда
				БылиОшибки = Истина;
			КонецЕсли;	  
		КонецЦикла;	
	Иначе	
		Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
			ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
			ФайлПроверкаСуществования = Новый Файл(ПутьФайла);
			Если НЕ ФайлПроверкаСуществования.Существует() Тогда
				Сообщить(""Не найден каталог библиотеки: "" + Элем.Значение);
				БылиОшибки = Истина;
			КонецЕсли;	   
		КонецЦикла;
		
	КонецЕсли;	 
	
	Возврат Не БылиОшибки;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьИДСтрокиДереваСервер(МассивИменКонтекстовОбработок,ДопПараметры)
	
	ДеревоФорма = Объект.ДеревоТестов;
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	МассивСтрокДереваДанныеФормы = Новый Массив;
	ЗаполнитьИДСтрокиВДереве(ОбъектСервер.ДеревоТестов,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры);
	ЗначениеВРеквизитФормы(ОбъектСервер,""Объект"");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДействиеВМассивАсинхроныхСобытий(Массив,Путь,ИмяПараметра,ТипПараметра)
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить(""ИмяФайла"",Путь);
	СтруктураФайла.Вставить(""ИмяПараметра"",ИмяПараметра);
	СтруктураФайла.Вставить(""ТипПараметра"",ТипПараметра);
	
	Массив.Добавить(СтруктураФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСканированиеКаталогов(Массив)
	Перем ПутьФайла, ПутьКОбработке;

	//FIXME: необходимо вынести в реквизит формы.
	ПутьКОбработке = ПолучитьПутьКОбработкеСервер();
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив,"""",""ПоискEPF"",""СканированиеКаталогаПоискEPF"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив,"""",""ПоискFeature"",""СканированиеКаталогаПоискFeature"");
	Ном = 0;
	Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
		Ном = Ном + 1;
		ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив,"""",ПутьФайла,""СканированиеКаталогаПоискEPF"");
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив,"""",""БиблиотекаФич"" + Ном,""СканированиеКаталогаПоискFeature"");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМассивСостоянийФайлов(Массив)
	Перем ПутьФайла, ПутьКОбработке;
	
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогИнструментов),""КаталогИнструментов"",""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогИнструментов)) + ""vbFeatureReader.epf"",""vbFeatureReader"",""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure),""КаталогOutputAllure"",""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputxUnit),""КаталогOutputxUnit"",""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML),""КаталогOutputИнструкцияHTML"",""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогФич),""КаталогФич"",""РаботаСФайлом"");
	
	//FIXME: необходимо вынести в реквизит формы.
	//ПутьКОбработке = ПолучитьПутьКОбработкеСервер();

	Ном = 0;
	Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
		Ном = Ном + 1;
		ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПутьФайла,""КаталогиБиблиотек""+Ном,""РаботаСФайлом"");
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры)
	ДополнительныеПараметры.ТекИдМассива = ДополнительныеПараметры.ТекИдМассива + 1;
	ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПроверкуЭтоКаталог(ЭтоКаталог,ДополнительныеПараметры) Экспорт
	
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""ЭтоКаталог"",ЭтоКаталог);
	
	Отладка(""ОбработчикНачатьПроверкуЭтоКаталог. "" + СтруктураФайла.ИмяПараметра + "": "" + СтруктураФайла.ИмяФайла + "". ЭтоКаталог=""+ЭтоКаталог);
	ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПроверкуСуществования(Существует,ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""Существует"",Существует);
	
	Отладка(""ОбработчикНачатьПроверкуСуществования. "" + СтруктураФайла.ИмяПараметра + "": "" + СтруктураФайла.ИмяФайла + "". Существует=""+Существует);
	
	Если Существует Тогда
		Файл = Новый Файл(СтруктураФайла.ИмяФайла);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПроверкуЭтоКаталог"""",ЭтаФорма,ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПроверкуЭтоКаталог(ОписаниеОповещения)"");
	Иначе
		ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПоискФайлов(НайденныеФайлы,ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""НайденныеФайлы"",НайденныеФайлы);
	
	ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДополнительныеПараметры);
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	Если ТекИдМассива > (МассивДействий.Количество()-1) Тогда
		Если ДополнительныеПараметры.НадоЗагрузитьФичи Тогда
			ЗагрузитьФичиПродолжение(ДополнительныеПараметры);
		КонецЕсли;	 
		Если ДополнительныеПараметры.НадоГенерироватьEPF Тогда
			СоздатьШаблоныОбработокПродолжение(ДополнительныеПараметры);
		КонецЕсли;	 
		Возврат;
	КонецЕсли;	 
	
	СтруктураФайла = МассивДействий[ТекИдМассива];
	Если СтруктураФайла.ТипПараметра = ""РаботаСФайлом"" Тогда
		Файл = Новый Файл(СтруктураФайла.ИмяФайла);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПроверкуСуществования"""",ЭтаФорма,ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПроверкуСуществования(ОписаниеОповещения)"");
	ИначеЕсли	Найти(СтруктураФайла.ТипПараметра,""СканированиеКаталогаПоиск"") > 0 Тогда
		Если НЕ ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""КаталогФич"",""Существует"") Тогда
			ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
			Возврат;
		КонецЕсли;	 
		
		Если (СтруктураФайла.ИмяПараметра = ""ПоискEPF"") или (СтруктураФайла.ИмяПараметра = ""ПоискFeature"") или (Лев(СтруктураФайла.ИмяПараметра,13) = ""БиблиотекаФич"") Тогда
			//значит мы ищем родные epf для фич
			ПутьКФичам = Новый Файл(Объект.КаталогФич);
			Путь = ПутьКФичам.ПолноеИмя;
			Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""КаталогФич"",""ЭтоКаталог"") Тогда //это файл
				Путь = ПутьКФичам.Путь;
			КонецЕсли;	 
			
			
			Если Лев(СтруктураФайла.ИмяПараметра,13) = ""БиблиотекаФич"" Тогда
				Ном = СтрЗаменить(СтруктураФайла.ИмяПараметра,""БиблиотекаФич"","""");
				Ном = СтрЗаменить(Ном,Символы.НПП,"""");
				Ном = Число(Ном);
				Путь = Объект.КаталогиБиблиотек[Ном-1].Значение;
			КонецЕсли;	 
			
		Иначе
			Путь = СтруктураФайла.ИмяПараметра;
		КонецЕсли;	 
		
		Маска = ""*."" + НРег(СтрЗаменить(СтруктураФайла.ТипПараметра,""СканированиеКаталогаПоиск"",""""));
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПоискФайлов"""",Этаформа,ДополнительныеПараметры)"");
		
		Если СтруктураФайла.ТипПараметра = ""СканированиеКаталогаПоискFeature"" Тогда
			Маска = ""*"";
		КонецЕсли;	 
		Выполнить(""НачатьПоискФайлов(ОписаниеОповещения,Путь,Маска,Истина)""); 
	Иначе
		Сообщить(""Неивестный ТипПараметра в ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы: "" + СтруктураФайла.ТипПараметра);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФичиПродолжение(ДополнительныеПараметры = Неопределено)
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;

	КаталогИнструментов = Объект.КаталогИнструментов;
	КаталогФич          = Объект.КаталогФич;
	DebugLog            = Объект.DebugLog;
	КаталогиБиблиотек   = Объект.КаталогиБиблиотек.Скопировать();
	ПутьКОбработке		= ПолучитьПутьКОбработкеСервер();
	
	Для каждого ЭлементБиблиотеки Из КаталогиБиблиотек  Цикл
		ЭлементБиблиотеки.Значение = ПреобразоватьПутьСТочкамиКНормальномуПути(ЭлементБиблиотеки.Значение);
	КонецЦикла; 
	
	Если НЕ ПроверитьСуществованиеКаталогаБиблиотек(ДополнительныеПараметры, ПутьКОбработке) Тогда
		Возврат;
	КонецЕсли;	 
	
	Если НЕ ПроверитьСуществованиеКаталогаИнструментов(КаталогИнструментов, ДополнительныеПараметры, ПутьКОбработке) Тогда
		СделатьСообщение(""Не заполнен служебный параметр КаталогИнструментов!"");
		Возврат;
	КонецЕсли;	 
	
	ПарсерФич = """";
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""КаталогИнструментов"",КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"",КаталогФич);
	СтруктураПараметров.Вставить(""ПутьКОбработке"", ПутьКОбработке);
	
	МассивСообщений = Новый Массив;
	СтруктураПараметров.Вставить(""МассивСообщений"",МассивСообщений);
	СтруктураПараметров.Вставить(""DebugLog"",DebugLog);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"",КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"",ДополнительныеПараметры);
	
	СтруктураПараметров.Вставить(""СписокТеговИсключение"",Объект.СписокТеговИсключение);
	СтруктураПараметров.Вставить(""СписокТеговОтбор"",Объект.СписокТеговОтбор);
	
	
	Попытка
		ЗаполнитьДеревоФич(СтруктураПараметров);
	Исключение
		Сообщить(""Ошибка при постсроении дерева."");
		Сообщить(""ЗагрузитьФичиПродолжение:"" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Для каждого Элем Из МассивСообщений Цикл
		Сообщить(Элем);
	КонецЦикла;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""РежимВыполненияСценарияСВыбранногоШага"",Объект.РежимВыполненияСценарияСВыбранногоШага);
	Если Объект.РежимВыполненияСценарияСВыбранногоШага Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарий"",СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
	КонецЕсли;	 
	ЗаполнитьИДСтрокиДереваСервер(МассивИменКонтекстовОбработок,ДопПараметры);
	
	ПодключитьОбработчикОжидания(""РазвернутьДерево"", 0.5, Истина);
	//РазвернутьДерево();
	//Отладка(""Кол строк фич "" +  Объект.ДеревоТестов.ПолучитьЭлементы().Количество());
	
	Если Объект.ПодключитьВнешниеОбработкиДляОтладки Тогда
		ПодключитьВнешниеОбработкиДляОтладки();
	КонецЕсли; 
	
	СделатьСообщение(""Фичи загружены."");
	Если Объект.НадоВыполнитьСценарииПослеЗагрузкиФич Тогда
		ВыполнитьСценарии();
	ИначеЕсли Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз Тогда
		Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Ложь;
		ВыполнитьСценарии();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФичи() Экспорт
	
	МассивДействий = Новый Массив;
	ДобавитьМассивСостоянийФайлов(МассивДействий);
	ДобавитьСканированиеКаталогов(МассивДействий);
	
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ТекИдМассива"",0);
	ДопПараметры.Вставить(""МассивДействий"",МассивДействий);
	ДопПараметры.Вставить(""НадоЗагрузитьФичи"",Истина);
	ДопПараметры.Вставить(""НадоГенерироватьEPF"",Ложь);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	Иначе
		ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
		ЗагрузитьФичиПродолжение();
	КонецЕсли;	 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВерсиюОбработкиСервер(ТолькоЦифры = Ложь)
	Объект1 = РеквизитФормыВЗначение(""Объект"");
	Возврат Объект1.ПолучитьВерсиюОбработки(Ложь,ТолькоЦифры);
КонецФункции

&НаСервере
Процедура ЗадатьУсловноеОформление();
	//УО = УсловноеОформление.Элементы.Добавить();
	//УО.Оформление.УстановитьЗначениеПараметра(""ЦветФона"",WebЦвета.Красный);  
	//ЭУ = УО.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	//ЭУ.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(""Объект.ДеревоТестов.Имя""); 
	//ЭУ.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеРавно;
	//ЭУ.ПравоеЗначение  = ""4"";
	//ОП = УО.Поля.Элементы.Добавить();
	//ОП.Поле = Новый ПолеКомпоновкиДанных(""Объект.ДеревоТестов.Имя""); 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКаталогИнструментовЕслиОнПустой()
	КаталогИнструментов = Объект.КаталогИнструментов;
	
	
	Если СокрЛП(КаталогИнструментов) = """" Тогда
		
		ИспользуемоеИмяФайла = ПолучитьПутьКОбработкеСервер();
		Если (Лев(ИспользуемоеИмяФайла,6) <> ""e1cib/"") и (Лев(ИспользуемоеИмяФайла,6) <> ""e1cib\"") Тогда
			Файл = Новый Файл(ИспользуемоеИмяФайла);
			КаталогИнструментов = Файл.Путь;
			Если Прав(КаталогИнструментов,1) =  ""\"" Тогда
				КаталогИнструментов = Лев(КаталогИнструментов,СтрДлина(КаталогИнструментов)-1);
			ИначеЕсли Прав(КаталогИнструментов,1) =  ""/"" Тогда
				КаталогИнструментов = Лев(КаталогИнструментов,СтрДлина(КаталогИнструментов)-1);
			КонецЕсли;	 
		Иначе	
			//попытаемся восстановить из настроек. Это нужно, когда Vanessa-Behavior вызвали программно, а затем сразу открыли интерактивно. В этом случае 1С подгружает версию из кеша от первой загрузки на сервере, и Объект().ИспользуемоеИмяФайла возвращает адрес в хранилище, а не имя исходного файла.
			Настройки = ХранилищеОбщихНастроек.Загрузить(""VanessaBehaviorUF"");
			
			Если ТипЗнч(Настройки) = Тип(""Структура"") Тогда
				Настройки.Свойство(""КаталогИнструментов"", КаталогИнструментов);
			КонецЕсли;	
		
		КонецЕсли;	
		
	КонецЕсли;	 
	
	Объект.КаталогИнструментов = КаталогИнструментов;
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьКонтекстноеМеню()
	Пункт1=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт1.Заголовок=НСтр(""ru='Выполнить выделенный сценарий';en='Invoke only selected scenarion'"");
	Пункт1.ИмяКоманды=""ВыполнитьВыделенныйСценарий"";
	
	Пункт2=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт2.Заголовок=НСтр(""ru='Открыть feature файл в редакторе';en='Open feature file in editor'"");
	Пункт2.ИмяКоманды=""ОткрытьФичаФайл"";
	
	Пункт3=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт3.Заголовок=НСтр(""ru='Выполнять сценарий с этого шага;en='Run scenario from that step'"");
	Пункт3.ИмяКоманды=""УстановитьПометкуВыполнятьСценарийСЭтогоШага"";
	
	Пункт4=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт4.Заголовок=НСтр(""ru='Выполнять сценарии с начала';en='Run scenario from first step'"");
	Пункт4.ИмяКоманды=""СнятьПометкуВыполнятьСценарийСЭтогоШага"";
	
	Пункт5=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюСвернутьДоФич"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт5.Заголовок=НСтр(""ru='Свернуть до фич';en='Switch to features'"");
	Пункт5.ИмяКоманды=""СвернутьДеревоДоФич"";
	
	Пункт6=Элементы.Добавить(""ДеревоТестовКонтекстноеМенюСвернутьДоСценариев"", Тип(""КнопкаФормы""), Элементы.ДеревоТестов.КонтекстноеМеню);
	Пункт6.Заголовок=НСтр(""ru='Свернуть до сценариев';en='Switch to scenarios'"");
	Пункт6.ИмяКоманды=""СвернутьДеревоДоСценариев"";
	
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметров(Стр)
	Результат = Новый Структура;
	
	Массив = РазложитьСтрокуВМассивПодстрок(Стр,"";"");
	Для каждого Элем Из Массив Цикл
		Поз = Найти(Элем,""="");
		Если Поз > 0 Тогда
			Ключ     = Лев(Элем,Поз-1);
			Значение = Сред(Элем,Поз+1);
			Попытка
				Результат.Вставить(Ключ,Значение);
			Исключение
				Сообщить(""Не смог получить значение из строки запуска: "" + Ключ);
			КонецПопытки;
		Иначе
			Если НЕ ПустаяСтрока(Элем) Тогда 
				Попытка
					Результат.Вставить(Элем,Истина);
				Исключение
					Сообщить(""Не смог получить значение из строки запуска: "" + Элем);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Результат;
КонецФункции	

&НаКлиенте
Функция ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров, ИмяПараметра)
	Если СтруктураПараметров.Свойство(ИмяПараметра) Тогда
		Возврат СтруктураПараметров[ИмяПараметра];
	ИначеЕсли СтруктураПараметров.Свойство(Врег(ИмяПараметра)) Тогда 
		Возврат СтруктураПараметров[ВРег(ИмяПараметра)];
	Иначе	
		Возврат Неопределено;
	КонецЕсли;	 
КонецФункции	

&НаКлиенте 
Функция ПрочитатьСтруктуруИзJSONФайлаКлиент(VBParams)
	
	ПараметрыУФ            = Новый Структура;
	VBParamsДвоичныеДанные = Новый ДвоичныеДанные(VBParams);
	ПараметрыУФ.Вставить(""VBParamsДвоичныеДанные"",VBParamsДвоичныеДанные);
	
	Рез = ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции

&НаСервере 
Функция ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,ПараметрыУФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
		
	Рез = ОбъектСервер.ПрочитатьСтруктуруИзJSONФайла(VBParams,ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции	

&НаКлиенте
Процедура ОчиститьСодержимоеКаталога(Знач ИмяКаталога,ТипФайлов = ""*.*"")
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяКаталога, ""ОчиститьСодержимоеКаталога"") Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Найти(Прав(ИмяКаталога,1), ""\/"") > 0 Тогда
		ИмяКаталога = Лев(ИмяКаталога,СтрДлина(ИмяКаталога)-1);
	КонецЕсли;	 
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		УдалитьКаталогКомандаСистемы(ИмяКаталога);
		СоздатьКаталогКомандаСистемы(ИмяКаталога);
	Иначе	
		МассивФайлов = НайтиФайлы(ИмяКаталога,ТипФайлов,Ложь);
		Для каждого Файл Из МассивФайлов Цикл
			//Если Файл.Существует() Тогда
			Попытка
				УдалитьФайлыКомандаСистемы(Файл.ПолноеИмя);
			Исключение
				СделатьСообщение(""Не смог удалить файл!!! "" + Файл.ПолноеИмя);
			КонецПопытки;
			//КонецЕсли;	 
		КонецЦикла;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьСтруктуруПараметровЗапуска()
	Рез = Новый Структура;
	Рез.Вставить(""StartFeaturePlayer"", Ложь);
	Рез.Вставить(""КаталогФич"", """");
	Рез.Вставить(""КаталогиБиблиотек"", Новый Массив);
	Рез.Вставить(""СписокТеговИсключение"", Новый Массив);
	Рез.Вставить(""СписокТеговОтбор"", Новый Массив);
	Рез.Вставить(""ДелатьСообщенияТранслитом"", Ложь);
	Рез.Вставить(""СоздаватьИнструкциюHTML"", Ложь);
	Рез.Вставить(""СоздаватьИнструкциюMarkdown"", Ложь);
	Рез.Вставить(""СоздаватьИнструкциюВидео"", Ложь);
	Рез.Вставить(""ДелатьЛогВыполненияСценариевВЖР"", Истина);
	Рез.Вставить(""ЗакрытьTestClientПослеЗапускаСценариев"", Ложь);
	Рез.Вставить(""КаталогOutputИнструкцияHTML"", """");
	Рез.Вставить(""КаталогOutputИнструкцияMarkdown"", """");
	Рез.Вставить(""КаталогOutputИнструкцияВидео"", """");
	Рез.Вставить(""ДелатьОтчетВоВнутреннемФормате"", Истина);
	Рез.Вставить(""ДелатьОтчетВФорматеАллюр"", Истина);
	Рез.Вставить(""КаталогOutputAllure"", """");
	Рез.Вставить(""КаталогOutputAllureБазовый"", """");
	Рез.Вставить(""ДелатьОтчетВФорматеxUnit"", Ложь);
	Рез.Вставить(""КаталогOutputxUnit"", """");
	Рез.Вставить(""КаталогOutputxUnitБазовый"", """");
	Рез.Вставить(""ДобавлятьКИмениСценарияУловияВыгрузки"", Ложь);
	Рез.Вставить(""СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки"", Ложь);
	Рез.Вставить(""ВыгружатьСтатусВыполненияСценариевВФайл"", Ложь);
	Рез.Вставить(""ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев"", """");
	Рез.Вставить(""ВыполнитьСценарии"", Ложь);
	Рез.Вставить(""ЗавершитьРаботуСистемы"", Ложь);
	Рез.Вставить(""ИмяСборки"", """");
	Рез.Вставить(""ДелатьСкриншотПриВозникновенииОшибки"", Ложь);
	Рез.Вставить(""КомандаСделатьСкриншот"", """");
	Рез.Вставить(""КаталогOutputСкриншоты"", """");
	Рез.Вставить(""ЗапускатьТестКлиентВРежимеОтладки"", Ложь);
	Рез.Вставить(""КлючиОтладки"", """");
	Рез.Вставить(""АдресОтладчика"", """");
	Рез.Вставить(""ПортЗапускаТестКлиента"", """");
	Рез.Вставить(""ВыполнятьШагиАссинхронно"", Истина);
	
	Рез.Вставить(""ЗаписьВидеоКомандаНачатьЗаписьВидео"", """");
	Рез.Вставить(""ЗаписьВидеоФайлКурсораМышки"", """");
	Рез.Вставить(""ЗаписьВидеоКаталогДляВременныхФайлов"", """");
	Рез.Вставить(""ЗаписьВидеоФайлВодянойЗнак"", """");
	Рез.Вставить(""ЗаписьВидеоКомандаFfmpeg"", """");
	Рез.Вставить(""ЗаписьВидеоКомандаConvert"", """");
	Рез.Вставить(""ЗаписьВидеоКаталогМузыки"", """");
	Рез.Вставить(""ЗаписьВидеоДелатьНаложениеTTS"", Ложь);
	Рез.Вставить(""ЗаписьВидеоПутьКДвижкуTTS"", """");
	Рез.Вставить(""ЗаписьВидеоИмяTTS"", """");
	Рез.Вставить(""ЗаписьВидеоСловарьЗамен"", """");
	Рез.Вставить(""ЗаписьВидеоЭкранШирина"", """");
	Рез.Вставить(""ЗаписьВидеоЭкранВысота"", """");
	Рез.Вставить(""ЗаписьВидеоКоличествоКадров"", """");
	Рез.Вставить(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"", Ложь);
	Рез.Вставить(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"", Ложь);
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция СоздатьКоллекциюКомандЗапуска()
	Рез = СоздатьСтруктуруПараметровЗапуска();
	Рез.Вставить(""StartFeaturePlayer"", Новый Структура(""Р,А"", ""StartFeaturePlayer"",""startfeatureplayer""));
	Рез.Вставить(""КаталогФич"", Новый Структура(""Р,А"", ""КаталогФич"",""featurepath""));
	Рез.Вставить(""КаталогиБиблиотек"", Новый Структура(""Р,А"", ""КаталогиБиблиотек"",""librarycatalogs""));
	Рез.Вставить(""СписокТеговИсключение"", Новый Структура(""Р,А"", ""СписокТеговИсключение"",""ignoretags""));
	Рез.Вставить(""СписокТеговОтбор"", Новый Структура(""Р,А"", ""СписокТеговОтбор"",""filtertags""));
	Рез.Вставить(""ДелатьСообщенияТранслитом"", Новый Структура(""Р,А"", ""ДелатьСообщенияТранслитом"",""translatemassage""));
	Рез.Вставить(""СоздаватьИнструкциюHTML"", Новый Структура(""Р,А"", ""СоздаватьИнструкциюHTML"",""htmlcreate""));
	Рез.Вставить(""СоздаватьИнструкциюMarkdown"", Новый Структура(""Р,А"", ""СоздаватьИнструкциюMarkdown"",""markdowncreate""));
	Рез.Вставить(""СоздаватьИнструкциюВидео"", Новый Структура(""Р,А"", ""СоздаватьИнструкциюВидео"",""videcreate""));
	Рез.Вставить(""ДелатьЛогВыполненияСценариевВЖР"", Новый Структура(""Р,А"", ""ДелатьЛогВыполненияСценариевВЖР"",""logtogr""));
	Рез.Вставить(""ЗакрытьTestClientПослеЗапускаСценариев"", Новый Структура(""Р,А"", ""ЗакрытьTestClientПослеЗапускаСценариев"",""closetestclient""));
	Рез.Вставить(""КаталогOutputИнструкцияHTML"", Новый Структура(""Р,А"", ""КаталогOutputИнструкцияHTML"",""htmlpath""));
	Рез.Вставить(""КаталогOutputИнструкцияMarkdown"", Новый Структура(""Р,А"", ""КаталогOutputИнструкцияMarkdown"",""markdownpath""));
	Рез.Вставить(""КаталогOutputИнструкцияВидео"", Новый Структура(""Р,А"", ""КаталогOutputИнструкцияВидео"",""videopath""));
	
	Рез.Вставить(""ДелатьОтчетВоВнутреннемФормате"", Новый Структура(""Р,А"", ""ДелатьОтчетВоВнутреннемФормате"",""simplereport""));	 
	
	Рез.Вставить(""ДелатьОтчетВФорматеАллюр"", Новый Структура(""Р,А"", ""ДелатьОтчетВФорматеАллюр"",""allurecreatereport""));	 
	Рез.Вставить(""КаталогOutputAllure"", Новый Структура(""Р,А"", ""КаталогOutputAllure"",""allurepath""));	
	Рез.Вставить(""КаталогOutputAllureБазовый"", Новый Структура(""Р,А"", ""КаталогOutputAllureБазовый"",""allurepathbase""));
	
	Рез.Вставить(""ДелатьОтчетВФорматеxUnit"", Новый Структура(""Р,А"", ""ДелатьОтчетВФорматеxUnit"",""xunitcreatereport""));	 
	Рез.Вставить(""КаталогOutputxUnit"", Новый Структура(""Р,А"", ""КаталогOutputxUnit"",""xunitpath""));	
	Рез.Вставить(""КаталогOutputxUnitБазовый"", Новый Структура(""Р,А"", ""КаталогOutputxUnitБазовый"",""xunitpathbase""));
	
	Рез.Вставить(""ДобавлятьКИмениСценарияУловияВыгрузки"", Новый Структура(""Р,А"", ""ДобавлятьКИмениСценарияУловияВыгрузки"",""addtofeaturefilter""));
	Рез.Вставить(""СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки"", Новый Структура(""Р,А"", ""СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки"",""createsubfolderforbuild""));
	Рез.Вставить(""ВыгружатьСтатусВыполненияСценариевВФайл"", Новый Структура(""Р,А"", ""ВыгружатьСтатусВыполненияСценариевВФайл"",""createlogs""));
	Рез.Вставить(""ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев"", Новый Структура(""Р,А"", ""ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев"",""logpath""));
	Рез.Вставить(""ВыполнитьСценарии"", Новый Структура(""Р,А"", ""ВыполнитьСценарии"",""vanessarun""));
	Рез.Вставить(""ЗавершитьРаботуСистемы"", Новый Структура(""Р,А"", ""ЗавершитьРаботуСистемы"",""vanessashutdown""));
	Рез.Вставить(""ИмяСборки"", Новый Структура(""Р,А"", ""ИмяСборки"",""buildname""));
	
	Рез.Вставить(""ДелатьСкриншотПриВозникновенииОшибки"", Новый Структура(""Р,А"", ""ДелатьСкриншотПриВозникновенииОшибки"",""onerrorscreenshot""));
	Рез.Вставить(""КомандаСделатьСкриншот"", Новый Структура(""Р,А"", ""КомандаСделатьСкриншот"",""commandscreenshot""));
	Рез.Вставить(""КаталогOutputСкриншоты"", Новый Структура(""Р,А"", ""КаталогOutputСкриншоты"",""outputscreenshot""));
	
	Рез.Вставить(""ЗапускатьТестКлиентВРежимеОтладки"", 	Новый Структура(""Р,А"", ""ЗапускатьТестКлиентВРежимеОтладки"",""testclientdebug""));
	Рез.Вставить(""КлючиОтладки"", 						Новый Структура(""Р,А"", ""КлючиОтладки"",""testclientdebugkeys""));
	Рез.Вставить(""АдресОтладчика"", 						Новый Структура(""Р,А"", ""АдресОтладчика"",""testclientdebugaddress""));	
	Рез.Вставить(""ПортЗапускаТестКлиента"",				Новый Структура(""Р,А"", ""ПортЗапускаТестКлиента"",""testclientport""));
	Рез.Вставить(""ВыполнятьШагиАссинхронно"",				Новый Структура(""Р,А"", ""ВыполнятьШагиАссинхронно"",""makestepsasync""));
	
	Рез.Вставить(""ЗаписьВидеоКомандаНачатьЗаписьВидео"", Новый Структура(""Р,А"", ""ЗаписьВидеоКомандаНачатьЗаписьВидео"",""comandrecvideo""));
	Рез.Вставить(""ЗаписьВидеоФайлКурсораМышки"", Новый Структура(""Р,А"", ""ЗаписьВидеоФайлКурсораМышки"",""mousecurfile""));
	Рез.Вставить(""ЗаписьВидеоКаталогДляВременныхФайлов"", Новый Структура(""Р,А"", ""ЗаписьВидеоКаталогДляВременныхФайлов"",""tempfolderforvideo""));
	Рез.Вставить(""ЗаписьВидеоФайлВодянойЗнак"", Новый Структура(""Р,А"", ""ЗаписьВидеоФайлВодянойЗнак"",""watermarkfile""));
	Рез.Вставить(""ЗаписьВидеоКомандаFfmpeg"", Новый Структура(""Р,А"", ""ЗаписьВидеоКомандаFfmpeg"",""ffmpegcomand""));
	Рез.Вставить(""ЗаписьВидеоКомандаConvert"", Новый Структура(""Р,А"", ""ЗаписьВидеоКомандаConvert"",""convertcomand""));
	Рез.Вставить(""ЗаписьВидеоКаталогМузыки"", Новый Структура(""Р,А"", ""ЗаписьВидеоКаталогМузыки"",""musicpath""));
	Рез.Вставить(""ЗаписьВидеоДелатьНаложениеTTS"", Новый Структура(""Р,А"", ""ЗаписьВидеоДелатьНаложениеTTS"",""dotts""));
	Рез.Вставить(""ЗаписьВидеоПутьКДвижкуTTS"", Новый Структура(""Р,А"", ""ЗаписьВидеоПутьКДвижкуTTS"",""audioenginetts""));
	Рез.Вставить(""ЗаписьВидеоИмяTTS"", Новый Структура(""Р,А"", ""ЗаписьВидеоИмяTTS"",""ttsvoice""));
	Рез.Вставить(""ЗаписьВидеоСловарьЗамен"", Новый Структура(""Р,А"", ""ЗаписьВидеоСловарьЗамен"",""changewordslib""));
	Рез.Вставить(""ЗаписьВидеоЭкранШирина"", Новый Структура(""Р,А"", ""ЗаписьВидеоЭкранШирина"",""screenwidth""));
	Рез.Вставить(""ЗаписьВидеоЭкранВысота"", Новый Структура(""Р,А"", ""ЗаписьВидеоЭкранВысота"",""screenheight""));
	Рез.Вставить(""ЗаписьВидеоКоличествоКадров"", Новый Структура(""Р,А"", ""ЗаписьВидеоКоличествоКадров"",""fps""));
	Рез.Вставить(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"", Новый Структура(""Р,А"", ""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"",""showframe""));
	Рез.Вставить(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"", Новый Структура(""Р,А"", ""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"",""movemouse""));
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция НайтиКоманду(КоллекцияКоманды, КомандаЗапускаНРег)
	Для каждого КлючЗначение Из КоллекцияКоманды Цикл
		Если НРег(КлючЗначение.Значение) = НРег(КомандаЗапускаНРег) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ПрочитатьПеременныеСреды() 
	СоответствееПеременныхПути = Новый Соответствие;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Попытка
        Если ЭтоLinux Тогда 
            КомандаСистемы(""sh -c 'env > ""+ИмяВременногоФайла + ""'"");
        Иначе 
            КомандаСистемыРаботаСФайлами(""set > """""" + ИмяВременногоФайла + """""""");
        КонецЕсли;
    Исключение
        Сообщить(""ПрочитатьПеременныеСреды:""+ОписаниеОшибки());
    КонецПопытки;
	
	Попытка 
		Чтение = Новый ЧтениеТекста(ИмяВременногоФайла);
		Стр = Чтение.ПрочитатьСтроку();
		Пока Стр <> Неопределено Цикл 
			//Найдем ключ и значение
			Индекс = Найти(Стр, ""="");
			Если Индекс > 0 Тогда 
				Ключ = Нрег(Лев(Стр, Индекс-1));
				Если ВРег(Лев(Ключ, 8))=""VANESSA_"" Тогда 
					Ключ = Сред(Ключ, 9);
					Значение = Сред(Стр, Индекс + 1);
					СоответствееПеременныхПути.Вставить(Ключ, Значение);
				КонецЕсли;
			КонецЕсли;
			Стр = Чтение.ПрочитатьСтроку();
		КонецЦикла;
	Исключение 
	КонецПопытки;
	
	КоллекцияКоммандЗапуска = СоздатьКоллекциюКомандЗапуска();
	СтруктураПараметров = Новый Структура;
	Для каждого ЭлементСтруктуры из КоллекцияКоммандЗапуска Цикл 
		Для каждого ЭлементПеременных из СоответствееПеременныхПути Цикл 
			Если НайтиКоманду(ЭлементСтруктуры.Значение, ЭлементПеременных.Ключ) Тогда 
				СтруктураПараметров.Вставить(ЭлементСтруктуры.Ключ, ЭлементПеременных.Значение);
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Функция ОбъединитьПараметрыСУчетомПриоритета(ПараметрыЭталон, ПараметрыПриоритет, Параметры)
	СтруктутраПараметров = Новый Структура;
	Для каждого ключЗначение из ПараметрыЭталон Цикл 
		Значение = Неопределено;
		Если ТипЗнч(ПараметрыПриоритет) = Тип(""Соответствие"") Тогда 
			Если ПараметрыПриоритет.Получить(ключЗначение.Ключ) <> Неопределено Тогда
				Значение = ПараметрыПриоритет.Получить(ключЗначение.Ключ);
			КонецЕсли;
		ИначеЕсли ТипЗнч(ПараметрыПриоритет) = Тип(""Структура"") Тогда 
			ПараметрыПриоритет.Свойство(ключЗначение.Ключ, Значение);
		КонецЕсли;
		
		Если Значение = Неопределено Тогда 
			Если ТипЗнч(Параметры) = Тип(""Соответствие"") Тогда 
				Если Параметры.Получить(ключЗначение.Ключ) <> Неопределено Тогда
					Значение = Параметры.Получить(ключЗначение.Ключ);
				КонецЕсли;
			ИначеЕсли ТипЗнч(Параметры) = Тип(""Структура"") Тогда 
				Параметры.Свойство(ключЗначение.Ключ, Значение);
			КонецЕсли;			
		КонецЕсли;    
		
		ключЗначениеЗначение = Неопределено;
		Если Значение <> Неопределено Тогда 
			Если ТипЗнч(ключЗначение.Значение) = Тип(""Булево"") Тогда 
				Если НРег(Значение) = ""истина"" Тогда 
					ключЗначениеЗначение = Истина;
				ИначеЕсли НРег(Значение) = ""ложь"" Тогда 
					ключЗначениеЗначение = Ложь;
				ИначеЕсли Значение = ""1"" Тогда 
					ключЗначениеЗначение = Истина;
				ИначеЕсли Значение = ""0"" Тогда
					ключЗначениеЗначение = Ложь;
				КонецЕсли;
			ИначеЕсли ТипЗнч(ключЗначение.Значение) = Тип(""Строка"") Тогда  
				ключЗначениеЗначение = Строка(Значение);
			ИначеЕсли ТипЗнч(ключЗначение.Значение) = Тип(""Массив"") Тогда
				МассивПараметров = Новый Массив;
				Если ТипЗнч(Значение) = Тип(""Строка"") Тогда 
					МассивПараметров = РазложитьСтрокуВМассивПодстрок(Значение, "","");
				ИначеЕсли ТипЗнч(Значение) = Тип(""Массив"") Тогда
					МассивПараметров = Значение;
				КонецЕсли;
				ключЗначениеЗначение = МассивПараметров;
			КонецЕсли;
		КонецЕсли;
		СтруктутраПараметров.Вставить(ключЗначение.Ключ, ?(ключЗначениеЗначение = Неопределено, ключЗначение.Значение, ключЗначениеЗначение));
	КонецЦикла;
				                
	Возврат СтруктутраПараметров;
	
КонецФункции

&НаКлиенте
Функция ПреобразоватьПутьСТочкамиКНормальномуПути(Знач ОригСтр="""") Экспорт
	
	Если ПустаяСтрока(ОригСтр) Тогда
		Возврат ОригСтр;
	КонецЕсли; 
	
	Если Найти(ОригСтр, ""$workspaceRoot"") > 0 Тогда 
		ОригСтр = СтрЗаменить(ОригСтр, ""$workspaceRoot"", ДополнитьСлешВПуть(Объект.КаталогПроекта));
	КонецЕсли;
		
	Если Найти(ОригСтр, ""$instrumentsRoot"") > 0 И НЕ ПустаяСтрока(Объект.КаталогИнструментов) Тогда
		ОригСтр = СтрЗаменить(ОригСтр, ""$instrumentsRoot"", ДополнитьСлешВПуть(Объект.КаталогИнструментов));
	КонецЕсли;	
	
	ФайлПути = Новый Файл(ОригСтр);
	Если Лев(ОригСтр, 1) = ""."" Тогда
		//Для совместимости со старым кодом оставим пока КаталогИнструментов, правильней было-бы использовать КаталогПроекта
		ФайлПути = Новый Файл(ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ОригСтр);
	КонецЕсли;
	
	Возврат ФайлПути.ПолноеИмя;
	
КонецФункции	

&НаКлиенте
Процедура ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров)
	МассивКлючей = Новый Массив;
	
	Для каждого ПараметрСборки Из СтруктураПараметров Цикл
		
		Если Лев(ПараметрСборки.Значение,1) = ""."" Тогда
			МассивКлючей.Добавить(ПараметрСборки.Ключ);
		ИначеЕсли Найти(ПараметрСборки.Значение, ""$workspaceRoot"") > 0 ИЛИ Найти(ПараметрСборки.Значение, ""$instrumentsRoot"") > 0 Тогда 
			МассивКлючей.Добавить(ПараметрСборки.Ключ);
		КонецЕсли;	 
	КонецЦикла;
	
	Для каждого Ключ Из МассивКлючей Цикл
		Было  = СтруктураПараметров[Ключ];
		Стало = ПреобразоватьПутьСТочкамиКНормальномуПути(СтруктураПараметров[Ключ]);
		
		СтруктураПараметров.Вставить(Ключ, Стало);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗапускВРежимеКоманднойСтроки()
	
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;	 
	
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	//СтрЗапуска = ""StartFeaturePlayer;VBParams=C:\Commons\Rep\vanessa-behavoir\tools\JSON\VBParams836UF.json"";
	Если СтрЗапуска = """" Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(СтрЗапуска);
	ПараметрыЭталон = СоздатьСтруктуруПараметровЗапуска();
	ПеременныеСреды = ПрочитатьПеременныеСреды();
	
	КаталогПроекта = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров, ""workspaceRoot"");
	КаталогПроекта = ?(КаталогПроекта = Неопределено, ПолучитьЗначениеПереданногоПараметра(ПеременныеСреды, ""workspaceRoot""), КаталогПроекта);
	
	Если НЕ ПустаяСтрока(КаталогПроекта) Тогда
		Объект.КаталогПроекта = КаталогПроекта;
	КонецЕсли; 
	
	ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров);
	ПутьКОбработке = ПолучитьПутьКОбработкеСервер();
	
	StartFeaturePlayer = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""StartFeaturePlayer"") = Истина Или ПолучитьЗначениеПереданногоПараметра(ПеременныеСреды, ""StartFeaturePlayer"") = Истина;
	Если StartFeaturePlayer = Истина Тогда
		Объект.ЗапускИзКоманднойСтроки = Истина;
		Объект.СохранятьКонтекстыПередВыполнениемШагов = Ложь;
		
		VBParams = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,""VBParams"");
		Если VBParams = Неопределено Тогда
			СделатьСообщение(""Не найден путь к файлу JSON. Параметр: VBParams."");
			ПараметрыФайла = СоздатьСтруктуруПараметровЗапуска();
		Иначе 
			ПараметрыФайла = ПрочитатьСтруктуруИзJSONФайлаКлиент(VBParams);
			Если ПараметрыФайла = Неопределено Тогда
				СделатьСообщение(""Ошибка чтения структуры JSON пропускаем чтение"");
			КонецЕсли; 
		КонецЕсли;	 
		
		СтрутктураJSON = ОбъединитьПараметрыСУчетомПриоритета(ПараметрыЭталон, ПеременныеСреды, ПараметрыФайла);
		
		Если СтрутктураJSON = Неопределено Тогда
			СделатьСообщение(""Ошибка чтения структуры JSON."");
			Возврат;
		КонецЕсли;
		
		//ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтрутктураJSON);
		ПромСтр = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""КаталогФич""));
		Если ПромСтр = Неопределено Тогда
			СделатьСообщение(""В параметрах JSON не найден каталог Фич!"");
			Возврат;
		КонецЕсли;	 
		
		Объект.КаталогФич = ПромСтр;
		
		Объект.КаталогиБиблиотек.Очистить();
		ЗначКаталогиБиблиотек = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогиБиблиотек"");
		Если ТипЗнч(ЗначКаталогиБиблиотек) = Тип(""Массив"") Тогда			
			Объект.КаталогиБиблиотек.ЗагрузитьЗначения(ЗначКаталогиБиблиотек);
		КонецЕсли;  
		
		Объект.СписокТеговИсключение.Очистить();
		ЗначСписокТеговИсключение = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""СписокТеговИсключение"");
		Если ТипЗнч(ЗначСписокТеговИсключение) = Тип(""Массив"") Тогда
			Объект.СписокТеговИсключение.ЗагрузитьЗначения(ЗначСписокТеговИсключение);
		КонецЕсли;  
		
		Объект.СписокТеговОтбор.Очистить();
		ЗначСписокТеговОтбор = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""СписокТеговОтбор"");
		Если ТипЗнч(ЗначСписокТеговОтбор) = Тип(""Массив"") Тогда
			Объект.СписокТеговОтбор.ЗагрузитьЗначения(ЗначСписокТеговОтбор);
		КонецЕсли;  
		
		ЗнДелатьСообщенияТранслитом = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""ДелатьСообщенияТранслитом"");
		Если ЗнДелатьСообщенияТранслитом = Истина Тогда
			Объект.ДелатьСообщенияТранслитом = Истина;
		КонецЕсли;	 
		
		ЗнСоздаватьИнструкциюHTML = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""СоздаватьИнструкциюHTML"");
		Если ЗнСоздаватьИнструкциюHTML = Истина Тогда
			Объект.СоздаватьИнструкциюHTML = Истина;
		КонецЕсли;	 
		
		ЗнСоздаватьИнструкциюMarkdown = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""СоздаватьИнструкциюMarkdown"");
		Если ЗнСоздаватьИнструкциюMarkdown = Истина Тогда
			Объект.СоздаватьИнструкциюMarkdown = Истина;
		КонецЕсли;	 
		
		ЗнСоздаватьИнструкциюВидео = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""СоздаватьИнструкциюВидео"");
		Если ЗнСоздаватьИнструкциюВидео = Истина Тогда
			Объект.СоздаватьИнструкциюВидео = Истина;
		КонецЕсли;	 
		
		ЗнДелатьЛогВыполненияСценариевВЖР = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ДелатьЛогВыполненияСценариевВЖР"");
		Если ЗнДелатьЛогВыполненияСценариевВЖР = Истина Тогда
			Объект.ДелатьЛогВыполненияСценариевВЖР = Истина;
		КонецЕсли;	  		
		
		ЗнЗапускатьТестКлиентВРежимеОтладки = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗапускатьТестКлиентВРежимеОтладки"");
		Если ЗнЗапускатьТестКлиентВРежимеОтладки = Истина Тогда
			Объект.ЗапускатьТестКлиентВРежимеОтладки = Истина;
		КонецЕсли;
		
		//по скриншотам - начало
		ЗнДелатьСкриншотПриВозникновенииОшибки = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ДелатьСкриншотПриВозникновенииОшибки"");
		Если ЗнДелатьСкриншотПриВозникновенииОшибки = Истина Тогда
			Объект.ДелатьСкриншотПриВозникновенииОшибки = Истина;
		КонецЕсли;	 
		
		ЗнКомандаСделатьСкриншот = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КомандаСделатьСкриншот"");
		Если ЗначениеЗаполнено(ЗнКомандаСделатьСкриншот) Тогда
			Объект.КомандаСделатьСкриншот = ЗнКомандаСделатьСкриншот;
		КонецЕсли;	 
		
		Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			ЗнКаталогOutputСкриншоты = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputСкриншоты"");
			Объект.КаталогOutputСкриншоты = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputСкриншоты);
		КонецЕсли;	 
		//по скриншотам - окончание
		
		//по записи видео - начало
		Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео                     = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКомандаНачатьЗаписьВидео"");
		Объект.ЗаписьВидеоФайлКурсораМышки                             = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоФайлКурсораМышки""));
		Объект.ЗаписьВидеоКаталогДляВременныхФайлов                    = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКаталогДляВременныхФайлов""));
		Объект.ЗаписьВидеоФайлВодянойЗнак                              = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоФайлВодянойЗнак""));
		Объект.ЗаписьВидеоКомандаFfmpeg                                = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКомандаFfmpeg"");
		Объект.ЗаписьВидеоКомандаConvert                               = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКомандаConvert"");
		Объект.ЗаписьВидеоКаталогМузыки                                = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКаталогМузыки""));
		Объект.ЗаписьВидеоДелатьНаложениеTTS                           = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоДелатьНаложениеTTS"");
		Объект.ЗаписьВидеоПутьКДвижкуTTS                               = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоПутьКДвижкуTTS"");
		Объект.ЗаписьВидеоИмяTTS                                       = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоИмяTTS"");
		Объект.ЗаписьВидеоСловарьЗамен                                 = ПреобразоватьПутьСТочкамиКНормальномуПути(ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоСловарьЗамен""));
		Объект.ЗаписьВидеоЭкранШирина                                  = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоЭкранШирина"");
		Объект.ЗаписьВидеоЭкранВысота                                  = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоЭкранВысота"");
		Объект.ЗаписьВидеоКоличествоКадров                             = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоКоличествоКадров"");
		Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм             = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"");
		Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"");
		//по записи видео - окончание
		Объект.ИмяТекущейСборки = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ИмяСборки"");
		ЗнЗакрытьTestClientПослеЗапускаСценариев = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗакрытьTestClientПослеЗапускаСценариев"");
		Если ЗнЗакрытьTestClientПослеЗапускаСценариев = Истина Тогда
			Объект.ЗакрытьTestClientПослеЗапускаСценариев = Истина;
		КонецЕсли;	 
		
		Если Объект.СоздаватьИнструкциюHTML Тогда
			ЗнКаталогOutputИнструкцияHTML = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputИнструкцияHTML"");
			Объект.КаталогOutputИнструкцияHTML = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputИнструкцияHTML);
		КонецЕсли;	 
		
		Если Объект.СоздаватьИнструкциюMarkdown Тогда
			ЗнКаталогOutputИнструкцияMarkdown = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputИнструкцияMarkdown"");
			Объект.КаталогOutputИнструкцияMarkdown = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputИнструкцияMarkdown);
		КонецЕсли;	 
		
		Если Объект.СоздаватьИнструкциюВидео Тогда
			ЗнКаталогOutputИнструкцияВидео = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputИнструкцияВидео"");
			Объект.КаталогOutputИнструкцияВидео = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputИнструкцияВидео);
		КонецЕсли;
		
		Если Объект.ЗапускатьТестКлиентВРежимеОтладки Тогда
			Объект.КлючиОтладки 	= ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КлючиОтладки"");
			Объект.АдресОтладчика 	= ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""АдресОтладчика"");
		КонецЕсли;
		
		
		//для отчета xUnit
		ЗнДелатьОтчетВФорматеxUnit = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ДелатьОтчетВФорматеxUnit"");
		Если ЗнДелатьОтчетВФорматеxUnit = Истина Тогда
			ОпределилиКаталогxUnit = Ложь;
			ЗнКаталогOutputxUnit = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputxUnit"");
			Если ЗначениеЗаполнено(ЗнКаталогOutputxUnit) Тогда
				Файл = Новый Файл(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputxUnit));
				Если Не ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя, ""ЗнКаталогOutputxUnit"") Тогда
					Стр = ""В параметрах JSON передан несуществующий каталог для отчета КаталогOutputxUnit!"";
					СделатьСообщение(Стр);
					ЗаписатьЛогВЖРОшибка(""VanessaBehavior.ЗапускВРежимеКоманднойСтроки"", Стр);
					Возврат;
				КонецЕсли;	 
				Объект.КаталогOutputxUnit      = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputxUnit);
				Объект.ДелатьОтчетВФорматеxUnit = Истина;
				ОпределилиКаталогxUnit         = Истина;
			КонецЕсли;	 
			
			ЗнДобавлятьКИмениСценарияУловияВыгрузки = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ДобавлятьКИмениСценарияУловияВыгрузки"");
			Если ЗнДобавлятьКИмениСценарияУловияВыгрузки = Истина Тогда
				Объект.ДобавлятьКИмениСценарияУловияВыгрузки = Истина;
			КонецЕсли;	 
			
			ЗнВыгружатьСтатусВыполненияСценариевВФайл = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ВыгружатьСтатусВыполненияСценариевВФайл"");
			Если ЗнВыгружатьСтатусВыполненияСценариевВФайл = Истина Тогда
				Объект.ВыгружатьСтатусВыполненияСценариевВФайл = Истина;
			КонецЕсли;	 
			
			ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев"");
			Если ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев <> Неопределено Тогда
				Объект.ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
			КонецЕсли;	 
			
			ЗнКаталогOutputxUnitБазовый = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputxUnitБазовый"");
			Если ЗначениеЗаполнено(ЗнКаталогOutputxUnitБазовый) Тогда
				Файл = Новый Файл(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputxUnitБазовый));
				Если Не ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя, ""ЗнКаталогOutputxUnitБазовый"") Тогда
					СоздатьКаталогКомандаСистемы(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputxUnitБазовый));
				КонецЕсли;	 
				
				СисИнфо = Новый СистемнаяИнформация; 
				ВерсияПриложения = СисИнфо.ВерсияПриложения;
				ЗнКаталогOutputxUnitБазовый = ПреобразоватьПутьСТочкамиКНормальномуПути(ДополнитьСлешВПуть(ЗнКаталогOutputxUnitБазовый) + ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ИмяСборки""));
				ОчиститьСодержимоеКаталога(ЗнКаталогOutputxUnitБазовый);
				ФайлПроверкаСуществования = Новый Файл(ЗнКаталогOutputxUnitБазовый);
				Если НЕ ФайлСуществуетКомандаСистемы(ФайлПроверкаСуществования.ПолноеИмя, ""ЗнКаталогOutputxUnitБазовый"") Тогда
					СоздатьКаталогКомандаСистемы(ЗнКаталогOutputxUnitБазовый);
					
					ФайлПроверкаСуществования = Новый Файл(ЗнКаталогOutputxUnitБазовый);
					Если НЕ ФайлСуществуетКомандаСистемы(ФайлПроверкаСуществования.ПолноеИмя) Тогда
						СделатьСообщение(""Не смог создать каталог для отчета xUnit: "" + ЗнКаталогOutputxUnitБазовый);
						Возврат;
					КонецЕсли;	 
				КонецЕсли;	 
				
				Объект.КаталогOutputxUnit      = ЗнКаталогOutputxUnitБазовый;
				Объект.ДелатьОтчетВФорматеxUnit = Истина;
				ОпределилиКаталогxUnit         = Истина;
			КонецЕсли;	 
			
			Если НЕ ОпределилиКаталогxUnit Тогда
				СделатьСообщение(""Не смог из переданных параметров JSON определить каталог отчета xUnit!"");
				Возврат;
			КонецЕсли;	 
		КонецЕсли;
		//для отчета Allure
		ЗнДелатьОтчетВФорматеАллюр = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON, ""ДелатьОтчетВФорматеАллюр"");
		Если ЗнДелатьОтчетВФорматеАллюр = Истина Тогда
			ОпределилиКаталогAllure = Ложь;
			ЗнКаталогOutputAllure = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputAllure"");
			Если ЗначениеЗаполнено(ЗнКаталогOutputAllure) Тогда
                УдалитьКаталогКомандаСистемы(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputAllure));
				Файл = Новый Файл(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputAllure));
				Если Не ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя, ""КаталогOutputAllure"") Тогда
					СоздатьКаталогКомандаСистемы(Файл.ПолноеИмя);
				КонецЕсли;	 
				Объект.КаталогOutputAllure      = ЗнКаталогOutputAllure;
				Объект.ДелатьОтчетВФорматеАллюр = Истина;
				ОпределилиКаталогAllure         = Истина;
			КонецЕсли;	 
			
			ЗнДобавлятьКИмениСценарияУловияВыгрузки = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ДобавлятьКИмениСценарияУловияВыгрузки"");
			Если ЗнДобавлятьКИмениСценарияУловияВыгрузки = Истина Тогда
				Объект.ДобавлятьКИмениСценарияУловияВыгрузки = Истина;
			КонецЕсли;	 
			
			ЗнВыгружатьСтатусВыполненияСценариевВФайл = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ВыгружатьСтатусВыполненияСценариевВФайл"");
			Если ЗнВыгружатьСтатусВыполненияСценариевВФайл = Истина Тогда
				Объект.ВыгружатьСтатусВыполненияСценариевВФайл = Истина;
			КонецЕсли;	 
			
			ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев"");
			Если ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев <> Неопределено Тогда
				Объект.ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = ЗнПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев;
			КонецЕсли;	 
			
			ЗнКаталогOutputAllureБазовый = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""КаталогOutputAllureБазовый"");
			Если ЗначениеЗаполнено(ЗнКаталогOutputAllureБазовый) Тогда
				Файл = Новый Файл(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputAllureБазовый));
				Если Не ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя, ""ЗнКаталогOutputAllureБазовый1"") Тогда		
					СоздатьКаталогКомандаСистемы(Файл.ПолноеИмя);
				КонецЕсли;	 
				
				СисИнфо = Новый СистемнаяИнформация; 
				ВерсияПриложения = СисИнфо.ВерсияПриложения;
				
				Если ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки"") = Истина Тогда
					ЗнКаталогOutputAllureБазовый = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(ЗнКаталогOutputAllureБазовый)) + ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ИмяСборки"");					
					Файл = Новый Файл(ЗнКаталогOutputAllureБазовый);
				КонецЕсли;	 
				
				ОчиститьСодержимоеКаталога(Файл.ПолноеИмя);
				ФайлПроверкаСуществования = Новый Файл(Файл.ПолноеИмя);
				Если НЕ ФайлСуществуетКомандаСистемы(ФайлПроверкаСуществования.ПолноеИмя, ""ЗнКаталогOutputAllureБазовый2"") Тогда
					СоздатьКаталогКомандаСистемы(ФайлПроверкаСуществования.ПолноеИмя);
					ФайлПроверкаСуществования = Новый Файл(ФайлПроверкаСуществования.ПолноеИмя);
					Если НЕ ФайлСуществуетКомандаСистемы(ФайлПроверкаСуществования.ПолноеИмя, ""ЗнКаталогOutputAllureБазовый3"") Тогда
						СделатьСообщение(""Не смог создать каталог для отчета Allure: "" + ЗнКаталогOutputAllureБазовый);
						Возврат;
					КонецЕсли;	 
				КонецЕсли;	 
				
				Объект.КаталогOutputAllure      = ЗнКаталогOutputAllureБазовый;
				Объект.ДелатьОтчетВФорматеАллюр = Истина;
				ОпределилиКаталогAllure         = Истина;
			КонецЕсли;	 
			
			Если НЕ ОпределилиКаталогAllure Тогда
				СделатьСообщение(""Не смог из переданных параметров JSON определить каталог отчета Allure!"");
				Возврат;
			КонецЕсли;	 
		КонецЕсли;	                               
		
		
		ВыполнятьШагиАссинхронноЗн = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ВыполнятьШагиАссинхронно"");
		Если ВыполнятьШагиАссинхронноЗн <> Неопределено Тогда
			Объект.ВыполнятьШагиАссинхронно = ВыполнятьШагиАссинхронноЗн;
		КонецЕсли;	 
		
		
		ВыполнитьСценарии = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ВыполнитьСценарии"");
		Если ВыполнитьСценарии = Истина Тогда
			ЗнЗавершитьРаботуСистемы = ПолучитьЗначениеПереданногоПараметра(СтрутктураJSON,""ЗавершитьРаботуСистемы"");
			Если ЗнЗавершитьРаботуСистемы = Истина Тогда
				Объект.НадоЗавершитьРаботуСистемыПослеВыполненияВсехСценариев = Истина;
			КонецЕсли;	 
			
			Если ЕстьПоддержкаАсинхронныхВызовов Тогда
				Объект.НадоВыполнитьСценарииПослеЗагрузкиФич = Истина;
				ЗагрузитьФичи();
			Иначе	
				ЗагрузитьФичи();
				ВыполнитьСценарии();
			КонецЕсли;	 
		КонецЕсли;	 
		
	КонецЕсли;	 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьКонстантаВКонфигурацииСервер(ИмяКонстанты)
	Зн = Метаданные.Константы.Найти(ИмяКонстанты);
	Если Зн = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Возврат Истина;
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьЗначениеКонстантыСервер(ИмяКонстанты)
	Возврат Константы[ИмяКонстанты].Получить();
КонецФункции	

&НаКлиенте
Процедура УстановитьВидимостьФлагаПроверкаРаботыVanessaBehaviorВРежимеTestClient()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ПроверкаРаботыVanessaBehaviorВРежимеTestClient.Видимость = ЕстьКонстантаВКонфигурации;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтраницыСлужебная()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ГруппаСлужебная.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьКолонокДереваВСлужебномРежиме()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ГруппаСлужебная.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;
	ЭтаФорма.Элементы.ДеревоТестовСтатус.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСлужебныхЭлементов()
	УстановитьВидимостьФлагаПроверкаРаботыVanessaBehaviorВРежимеTestClient();
	УстановитьВидимостьСтраницыСлужебная();
	УстановитьВидимостьКолонокДереваВСлужебномРежиме();
КонецПроцедуры

&НаКлиенте
Процедура МаксимизироватьФорму()
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;	 
	
	WSHShell = Новый COMОбъект(""WScript.Shell"");
    WSHShell.SendKeys(""%"");
    WSHShell.SendKeys(""{LEFT}{LEFT}{ENTER}"");  	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормы()
	//Если Не ЭтоLinux Тогда
	//	МаксимизироватьФорму();
	//КонецЕсли;	 
	
	
	ЗапускВРежимеКоманднойСтроки();
	Если НЕ Объект.ЗапускИзКоманднойСтроки Тогда
		Если СокрЛП(Объект.КаталогФич) <> """" Тогда
			ЗагрузитьФичи();
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьСлужебныхЭлементов();
	
	УстановитьКраткийЗаголовокПриложения(""Vanessa-behavior"");
	
	ЭтоLinux = Ложь;
	СисИнфо = Новый СистемнаяИнформация;
	Если Найти(Строка(СисИнфо.ТипПлатформы), ""Linux"")>0 Тогда 
		ЭтоLinux = Истина;
	КонецЕсли;

	Объект.ВыполнятьШагиАссинхронно = Истина;
	Объект.СохранятьКонтекстыПередВыполнениемШагов = Истина;
	
	ОбъектКонтекстСохраняемый = Новый Структура;
	
	ЗаполнитьКонтекстноеМеню();
	ЗаполнитьКаталогИнструментовЕслиОнПустой();
	
	МассивСнипетовПрерывающихЗаписьСценария = ПолучитьМассивСнипетовПрерывающихЗаписьСценария();
	ВосстановитьНастройкиКлиент();
	
	Если Не ПодключитьУжеЗапущенныйTestClient() Тогда
		СвободныйПорт = ПроверитьПортНаЗанятость(Объект.ПортЗапускаТестКлиента);
		Если СвободныйПорт <> Объект.ПортЗапускаТестКлиента Тогда
			СделатьСообщение(""Порт "" + Объект.ПортЗапускаТестКлиента + "" занят, порт подключения изменен на "" + СвободныйПорт);
			Объект.ПортЗапускаТестКлиента = СвободныйПорт;
			СохранитьНастройкиВХранилище(""ПортЗапускаТестКлиента"", Объект.ПортЗапускаТестКлиента);
		КонецЕсли;
	Иначе
		СделатьСообщение(""TestClient подключен на "" + Объект.ПортЗапускаТестКлиента + "" порту."");
	КонецЕсли;
	
	Объект.ИнтервалВыполненияШага = Объект.ИнтервалВыполненияШагаЗаданныйПользователем;
	Если Объект.ИнтервалВыполненияШага = 0 Тогда
		Объект.ИнтервалВыполненияШага = 0.1;
		Объект.ИнтервалВыполненияШагаЗаданныйПользователем = 0.1;
	КонецЕсли;	 
	
	КаталогФич          = Объект.КаталогФич;
	КаталогИнструментов = Объект.КаталогИнструментов;
	
	ОбновитьКнопкуЗагрузитьФичи();
	ЭтаФорма.Заголовок = ПолучитьВерсиюОбработкиСервер();
	
	Объект.КаталогиБиблиотек.ТипЗначения     = Новый ОписаниеТипов(""Строка"");
	Объект.СписокТеговИсключение.ТипЗначения = Новый ОписаниеТипов(""Строка"");
	Объект.СписокТеговОтбор.ТипЗначения      = Новый ОписаниеТипов(""Строка"");

	ЭтаФорма.ТекущийЭлемент = Элементы.ДеревоТестов;
	
	ПодключитьВнешниеБиблиотекиVB();
	
	ПодключитьОбработчикОжидания(""ПослеОткрытияФормы"",0.1,Истина);
	
КонецПроцедуры



&НаКлиенте
Процедура ПодключитьВнешниеБиблиотекиVB()
	
	Если ПустаяСтрока(Объект.КаталогИнструментов) Тогда
		Объект.КаталогИнструментов = ПолучитьПутьКОбработкеСервер();
	КонецЕсли;
	
	ИмяФайла = Объект.КаталогИнструментов + ""\lib\Video\РаботаСВидео.epf"";
	Если СокрЛП(Объект.КаталогИнструментов) = """" Тогда
		ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
		Если ЕстьКонстантаВКонфигурации Тогда
			ПутьКVanessaBehavior     = ПолучитьЗначениеКонстантыСервер(""ПутьКVanessaBehavior"");
			ФайлПутьКVanessaBehavior = Новый Файл(ПутьКVanessaBehavior);
			ИмяФайла                 = ФайлПутьКVanessaBehavior.Путь + ""lib\Video\РаботаСВидео.epf"";
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		Сообщить(""Файл "" + ИмяФайла + "" не существует!"");
		Возврат;
	КонецЕсли;	
	
	ИмяОбработки       = ПодключитьВнешнююОбработкуКлиент(ИмяФайла);
	МодульРаботыСВидео = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"");
	Если НЕ ЭтоЗапускВРежимеБезЗагрукиНастроек Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Если Лев(СистемнаяИнформация.ВерсияПриложения, 5) < ""8.3.8"" Тогда
			СохранитьНастройки();
		КонецЕсли;
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОднуФичу(Команда)
	Объект.текЗначениеОперации = ""ЗагрузитьОднуФичу"";
	ОбновитьКнопкуЗагрузитьФичи();
	
	Объект.РежимВыполненияСценарияСВыбранногоШага = Ложь;
	СтрокаШагаСКоторогоНадоВыполнятьСценарий      = Неопределено;
	МассивСостоянияКонтекстовДоВыполненияШага     = Новый Массив;
	
	ЗагрузитьТестыЗагрузитьОднуФичу();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ВыбранныеФайлы,ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Объект.КаталогФич = ВыбранныеФайлы[0];
	
	СохранитьНастройкиВХранилище(""КаталогФич"", Объект.КаталогФич);
	
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТестыЗагрузитьОднуФичу()
	ОчиститьСообщения();
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = ""Выберите feature файл"";
	ДиалогОткрытияФайла.Фильтр = ""Фича файл (*.feature)|*.feature"";
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьВыборФайла"""", ЭтаФорма)"");
		Выполнить(""ДиалогОткрытияФайла.Показать(ОписаниеОповещения)"");
	Иначе	
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Объект.КаталогФич = ДиалогОткрытияФайла.ПолноеИмяФайла;
			
			СохранитьНастройкиВХранилище(""КаталогФич"", Объект.КаталогФич);
		Иначе
			Возврат;
		КонецЕсли;
		ЗагрузитьФичи();
	КонецЕсли;  
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЕстьПоддержкаНемодальныхФорм    = УзнатьЕстьПоддержкаНемодальныхФорм();
	ЕстьПоддержкаАсинхронныхВызовов = УзнатьЕстьПоддержкаАсинхронныхВызовов();
	
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	СтатусыРезультатаТестирования = ОбъектНаСервере.СтатусыРезультатаТестирования;
	
КонецПроцедуры

&НаКлиенте
Процедура Перезагрузить(Команда)
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура СделатьПараметрыКорректными()
	Если Найти(Прав(Объект.КаталогИнструментов,1), ""\/"") > 0 Тогда
		Объект.КаталогИнструментов = Лев(Объект.КаталогИнструментов,СтрДлина(Объект.КаталогИнструментов)-1);
	КонецЕсли; 
	Если Найти(Прав(Объект.КаталогOutputИнструкцияHTML,1), ""\/"") > 0 Тогда
		Объект.КаталогOutputИнструкцияHTML = Лев(Объект.КаталогOutputИнструкцияHTML,СтрДлина(Объект.КаталогOutputИнструкцияHTML)-1);
	КонецЕсли; 
	Если Найти(Прав(Объект.КаталогOutputИнструкцияHTML,1), ""\/"") > 0 Тогда
		Объект.КаталогOutputИнструкцияMarkdown = Лев(Объект.КаталогOutputИнструкцияMarkdown,СтрДлина(Объект.КаталогOutputИнструкцияMarkdown)-1);
	КонецЕсли; 
	Если Найти(Прав(Объект.КаталогOutputСкриншоты,1), ""\/"") > 0 Тогда
		Объект.КаталогOutputСкриншоты = Лев(Объект.КаталогOutputСкриншоты,СтрДлина(Объект.КаталогOutputСкриншоты)-1);
	КонецЕсли; 
	Если Найти(Прав(Объект.КаталогOutputИнструкцияВидео,1), ""\/"") > 0 Тогда
		Объект.КаталогOutputИнструкцияВидео = Лев(Объект.КаталогOutputИнструкцияВидео,СтрДлина(Объект.КаталогOutputИнструкцияВидео)-1);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетов(Дерево)
	Для каждого СтрСтроки Из Дерево.Строки Цикл
		СтрСтроки.Статус     = """";
		Если СтрСтроки.Шаг = Истина Тогда
			СтрСтроки.ТипКартинки = 3;
		КонецЕсли;	 
		
		ОчиститьПоляВДеревеДляПостроенияОтчетов(СтрСтроки);
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетовСервер()
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	ОчиститьПоляВДеревеДляПостроенияОтчетов(Дерево);
	
	ЗначениеВРеквизитФормы(ОбъектСервер,""Объект"");
КонецПроцедуры

&НаСервере
Функция ЭтоСценарий_SceanrioOutline(СтрокаДерева)
	Для каждого СтрСтроки Из СтрокаДерева.Строки Цикл
		Если СтрСтроки.Примеры = Истина Тогда
			Возврат Истина;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ДобавитьШагиДляВыполненияСценария(Шаги,ДеревоСтроки,СтрокаДерева,СтрокаСценария,ЭтоШагКонтекста)
	Для каждого СтрСтроки Из ДеревоСтроки Цикл
		Если СтрСтроки.Шаг = Истина Тогда
			СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрокаДерева,ЭтоШагКонтекста);
			Шаги.Добавить(СтруктураШага);
		ИначеЕсли СтрСтроки.ШагСценарий = Истина Тогда
			ДобавитьШагиДляВыполненияСценария(Шаги,СтрСтроки.Строки,СтрокаДерева,СтрокаСценария,ЭтоШагКонтекста)
		ИначеЕсли СтрСтроки.Область = Истина Тогда
			ДобавитьШагиДляВыполненияСценария(Шаги,СтрСтроки.Строки,СтрокаДерева,СтрокаСценария,ЭтоШагКонтекста)
		КонецЕсли;	 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарийАутлайн(СтрокаДерева,МассивСценариевДляВыполнения,ТекПример = Неопределено,ДопПараметры)
	//получим сами именнованные параметры
	
	ИменаПараметров = Неопределено;
	СтрокаПримеров  = Неопределено;
	Для каждого СтрСтроки Из СтрокаДерева.Строки Цикл
		Если СтрСтроки.Примеры = Истина Тогда
			ИменаПараметров = СтрСтроки.ИменованныеПараметры;
			СтрокаПримеров = СтрСтроки;
		КонецЕсли; 
	КонецЦикла;
	
	Если ИменаПараметров = Неопределено Тогда
		СтрОшибки = ""Не смог найти у сценария "" + СтрокаДерева.Имя + "" имена изменяемых параметров!"";
		Сообщить(СтрОшибки);
		ВызватьИсключение СтрОшибки;
	КонецЕсли; 
	
	
	Ном = 0;
	Для каждого СтрСтрокаПримеров Из СтрокаПримеров.Строки Цикл
		Ном = Ном + 1;
		Если Ном = 1 Тогда
			//в первой строке лежат имена параметров
			Продолжить;
		КонецЕсли; 
		
		Если ТекПример <> Неопределено Тогда
			Если СтрСтрокаПримеров <> ТекПример Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли; 
		
		СтруктураПараметровСценария = Новый Структура;
		СтруктураПараметровСценария.Вставить(""Имя"",СтрокаДерева.Имя + "" (Пример №"" + (Ном-1) + "")"");
		СтруктураПараметровСценария.Вставить(""СтрокаДерева"",СтрСтрокаПримеров.ИДСтроки);
		СтруктураПараметровСценария.Вставить(""ИмяФичи"",ДопПараметры.ИмяФичи);
		СтруктураПараметровСценария.Вставить(""ПолныйПутьКФиче"",ДопПараметры.ПолныйПутьКФиче);
		
		
		Шаги = Новый Массив;
		
		Если СтрокаДерева.Родитель.Строки[0].ЭтоКонтекст = Истина Тогда //значит надо добавить шаги контекста к нашим шагам
			ДобавитьШагиДляВыполненияСценария(Шаги,СтрокаДерева.Родитель.Строки[0].Строки,СтрокаДерева,СтрСтрокаПримеров,Истина);
			//Для каждого СтрСтроки Из СтрокаДерева.Родитель.Строки[0].Строки Цикл
			//	СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрСтрокаПримеров);
			//	Шаги.Добавить(СтруктураШага);
			//КонецЦикла;
		КонецЕсли;	 
		
		
		ДобавитьШагиДляВыполненияСценария(Шаги,СтрСтрокаПримеров.Строки,СтрокаДерева,СтрСтроки.Родитель,Ложь);
		//Для каждого СтрСтроки Из СтрСтрокаПримеров.Строки Цикл
		//	СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрСтроки.Родитель);
		//	Шаги.Добавить(СтруктураШага);
		//КонецЦикла;
		
		
		
		
		Если ДопПараметры.РежимВыполненияСценарияСВыбранногоШага Тогда
			МассивДляУдаления = Новый Массив;
			Ном = -1;
			Для каждого Шаг Из Шаги Цикл
				Ном = Ном + 1;
				Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарий Тогда
					Прервать;
				КонецЕсли;	 
				
				МассивДляУдаления.Добавить(Ном);
			КонецЦикла;
			
			
			Для Ккк = 0 По МассивДляУдаления.Количество()-1 Цикл
				ИД = МассивДляУдаления.Количество()-1 - Ккк;
				Ном = МассивДляУдаления[ИД];
				Шаги.Удалить(Ном);
			КонецЦикла;
		КонецЕсли;	 
		
		
		
		СтруктураПараметровСценария.Вставить(""Шаги"",Шаги);
		МассивСценариевДляВыполнения.Добавить(СтруктураПараметровСценария);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрокаСценария,ЭтоШагКонтекста)
	СтруктураШага = Новый Структура;
	СтруктураШага.Вставить(""Имя"",СтрСтроки.Имя);
	СтруктураШага.Вставить(""ЗначенияПараметров"",СтрСтроки.ЗначенияПараметров);
	СтруктураШага.Вставить(""АдресСнипета"",СтрСтроки.АдресСнипета);
	СтруктураШага.Вставить(""СтрокаРеальнойПроцедуры"",СтрСтроки.СтрокаРеальнойПроцедуры);
	СтруктураШага.Вставить(""Снипет"",СтрСтроки.Снипет);
	СтруктураШага.Вставить(""ИмяСценария"",СтрокаДерева.Имя);
	СтруктураШага.Вставить(""СтрокаСценария"",СтрокаСценария.ИДСтроки);
	СтруктураШага.Вставить(""СтрокаШага"",СтрСтроки.ИДСтроки);
	СтруктураШага.Вставить(""ШагСчитаетсяУпавшим"",Ложь);
	СтруктураШага.Вставить(""ЭтоШагКонтекста"",ЭтоШагКонтекста);
	СтруктураШага.Вставить(""ШагСПараметрамиВТаблице"",СтрСтроки.ШагСПараметрамиВТаблице);
	СтруктураШага.Вставить(""ПараметрыТаблицы"",Неопределено);
	СтруктураШага.Вставить(""МасштабироватьВВидео"",Истина);
	СтруктураШага.Вставить(""ТекстИнструкция"","""");
	
	Если СтрСтроки.ШагСПараметрамиВТаблице = Истина Тогда
		ПараметрыТаблицы = Новый Массив;
		Для каждого ПодчиненнаяСтрока Из СтрСтроки.Строки Цикл
			ПараметрыТаблицы.Добавить(ПодчиненнаяСтрока.Имя);
		КонецЦикла;
		СтруктураШага.Вставить(""ПараметрыТаблицы"",ПараметрыТаблицы);
	КонецЕсли;	 
	
	Возврат СтруктураШага;
КонецФункции

&НаСервере
Процедура ДобавитьОбычныйСценарий(СтрокаДерева,МассивСценариевДляВыполнения,ДопПараметры)
	Если СтрокаДерева.ЭтоКонтекст = Истина Тогда
		Возврат;
	КонецЕсли;	 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""Имя"",СтрокаДерева.Имя);
	СтруктураПараметров.Вставить(""СтрокаДерева"",СтрокаДерева.ИдСтроки);
	СтруктураПараметров.Вставить(""ИмяФичи"",ДопПараметры.ИмяФичи);
	СтруктураПараметров.Вставить(""ПолныйПутьКФиче"",ДопПараметры.ПолныйПутьКФиче);
	
	Шаги = Новый Массив;
	
	
	Если СтрокаДерева.Родитель.Строки[0].ЭтоКонтекст = Истина Тогда //значит надо добавить шаги контекста к нашим шагам
		ДобавитьШагиДляВыполненияСценария(Шаги,СтрокаДерева.Родитель.Строки[0].Строки,СтрокаДерева,СтрокаДерева,Истина);
		//Для каждого СтрСтроки Из СтрокаДерева.Родитель.Строки[0].Строки Цикл
		//	СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрокаДерева);
		//	Шаги.Добавить(СтруктураШага);
		//КонецЦикла;
	КонецЕсли;	 
	
	ДобавитьШагиДляВыполненияСценария(Шаги,СтрокаДерева.Строки,СтрокаДерева,СтрокаДерева,Ложь);
	//Для каждого СтрСтроки Из СтрокаДерева.Строки Цикл
	//	СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки,СтрокаДерева,СтрокаДерева);
	//	Шаги.Добавить(СтруктураШага);
	//КонецЦикла;
	
	Если ДопПараметры.РежимВыполненияСценарияСВыбранногоШага Тогда
		МассивДляУдаления = Новый Массив;
		Ном = -1;
		Для каждого Шаг Из Шаги Цикл
			Ном = Ном + 1;
			Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарий Тогда
				Прервать;
			КонецЕсли;	 
			
			МассивДляУдаления.Добавить(Ном);
		КонецЦикла;
		
		
		Для Ккк = 0 По МассивДляУдаления.Количество()-1 Цикл
			ИД = МассивДляУдаления.Количество()-1 - Ккк;
			Ном = МассивДляУдаления[ИД];
			Шаги.Удалить(Ном);
		КонецЦикла;
	КонецЕсли;	 
	
	
	СтруктураПараметров.Вставить(""Шаги"",Шаги);
	МассивСценариевДляВыполнения.Добавить(СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарийВМассивСценариевДляВыполнения(СтрокаДерева,МассивСценариевДляВыполнения,ДопПараметры)
	
	ЭтоСценариоАутлайн = ЭтоСценарий_SceanrioOutline(СтрокаДерева);
	Если ЭтоСценариоАутлайн Тогда
		//СделатьСообщение(""Запуск СценариоАутлайн пока не реализован. "" + СтрокаДерева.Имя);
		ДобавитьСценарийАутлайн(СтрокаДерева,МассивСценариевДляВыполнения,,ДопПараметры);
		Возврат;
	КонецЕсли;	 
	
	ДобавитьОбычныйСценарий(СтрокаДерева,МассивСценариевДляВыполнения,ДопПараметры);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(ДеревоСтроки,МассивСценариевДляВыполнения,ТекИДСценария,ДопПараметры)
	Если ТипЗнч(ДеревоСтроки) = Тип(""СтрокаДереваЗначений"") Тогда
		Если ДеревоСтроки.Фича = Истина Тогда
			ДопПараметры.Вставить(""ИмяФичи"",ДеревоСтроки.Имя);
			ДопПараметры.Вставить(""ПолныйПутьКФиче"",ДеревоСтроки.ПолныйПуть);
		КонецЕсли;	
		
		Если ДеревоСтроки.Сценарий = Истина Тогда
			ДобавитьСценарийВМассивСценариевДляВыполнения(ДеревоСтроки,МассивСценариевДляВыполнения,ДопПараметры);
		ИначеЕсли ДеревоСтроки.Пример = Истина Тогда
			ДобавитьСценарийАутлайн(ДеревоСтроки.Родитель.Родитель,МассивСценариевДляВыполнения,ДеревоСтроки,ДопПараметры)
		КонецЕсли; 
	Иначе	
		Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
			Если СтрДеревоСтроки.Фича = Истина Тогда
				ДопПараметры.Вставить(""ИмяФичи"",СтрДеревоСтроки.Имя);
				ДопПараметры.Вставить(""ПолныйПутьКФиче"",СтрДеревоСтроки.ПолныйПуть);
			КонецЕсли;	
			
			Если СтрДеревоСтроки.Сценарий = Истина Тогда
				Если ТекИДСценария <> Неопределено Тогда
					Если СтрДеревоСтроки.ИдСтроки = ТекИДСценария Тогда
						ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки,МассивСценариевДляВыполнения,ДопПараметры);
					КонецЕсли;	 
				Иначе	
					ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки,МассивСценариевДляВыполнения,ДопПараметры);
				КонецЕсли;	 
			Иначе	
				ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(СтрДеревоСтроки.Строки,МассивСценариевДляВыполнения,ТекИДСценария,ДопПараметры);
			КонецЕсли;	 
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПроставитьИДРекурсивно(ДеревоСтроки,ИД,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры,ЕстьСвояEPFУФичи = Неопределено)
	ЭтоLinux = Ложь;
	СисИнфо = Новый СистемнаяИнформация;
	Если Найти(Строка(СисИнфо.ТипПлатформы), ""Linux"")>0 Тогда 
		ЭтоLinux = Истина;
	КонецЕсли;
	
	Для каждого СтрокаДерева Из ДеревоСтроки Цикл
		
		Если СтрокаДерева.Фича = Истина Тогда
			ФайлФичи = Новый Файл(СтрокаДерева.ПолныйПуть);
			ФайлEPF  = ФайлФичи.Путь + ""step_definitions"" +?(ЭтоLinux, ""/"", ""\"") + ФайлФичи.ИмяБезРасширения + "".epf"";
			СтрТзнТаблицаИзвестныхStepDefinition = МассивИменКонтекстовОбработок.Найти(ФайлEPF);
			ЕстьСвояEPFУФичи = Истина;
			Если СтрТзнТаблицаИзвестныхStepDefinition = Неопределено Тогда
				ЕстьСвояEPFУФичи = Ложь;
			КонецЕсли;  
		КонецЕсли;  
		СтрокаДерева.ФичаИмеетСвоюEPF = ЕстьСвояEPFУФичи;
		
		СтрокаДерева.ИДСтроки = ИД;
		Если ДопПараметры.РежимВыполненияСценарияСВыбранногоШага Тогда
			Если СтрокаДерева.ИДСтроки = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарий Тогда
				СтрокаДерева.ВыполнятьСценарийСЭтогоШага = Истина;
			КонецЕсли;	 
		КонецЕсли;	 
		МассивСтрокДереваДанныеФормы.Добавить();//просто добавим пустой элемент
		ИД = ИД + 1;
		ПроставитьИДРекурсивно(СтрокаДерева.Строки,ИД,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры,ЕстьСвояEPFУФичи);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИДСтрокиВДереве(Дерево,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры)
	Ид = 0;
	ПроставитьИДРекурсивно(Дерево.Строки,ИД,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивСценариевДляВыполненияСервер(МассивСценариевДляВыполнения,МассивСтрокДереваДанныеФормы,ТекИДСценария,МассивИменКонтекстовОбработок,ДопПараметры)
	ДеревоФорма = Объект.ДеревоТестов;
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	ЗаполнитьИДСтрокиВДереве(ОбъектСервер.ДеревоТестов,МассивСтрокДереваДанныеФормы,МассивИменКонтекстовОбработок,ТзнТаблицаИзвестныхStepDefinition,ДопПараметры);
	
	ТекСценарий = Неопределено;
	Если ТекСценарий = Неопределено Тогда
		ТекСценарий = ОбъектСервер.ДеревоТестов.Строки;
	КонецЕсли; 
	
	ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(ТекСценарий,МассивСценариевДляВыполнения,ТекИДСценария,ДопПараметры);
	
	ЗначениеВРеквизитФормы(ОбъектСервер,""Объект"");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтатусСценария(ИД)
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ИД].СтрокаДерева;
	СтрокаСценария   = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
	
	Если СокрЛП(СтрокаСценария.Статус) <> """" Тогда
		Возврат;
	КонецЕсли;	 
	
	РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
	РезультатПрохожденияТестовШагов = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
	
	СценарийВыполнен = Истина;
	СтрокиСценария = СтрокаСценария.ПолучитьЭлементы();
	Для каждого СтрШаг Из РезультатПрохожденияТестовШагов Цикл
		Если СтрШаг.Статус <> ""Success"" Тогда
			СценарийВыполнен = Ложь;
			Статус = СтрШаг.Статус;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Если СценарийВыполнен Тогда
		СтрокаСценария.Статус = ""Success"";
	Иначе	
		СтрокаСценария.Статус = Статус;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеКонтекстаОбработки(Результат,АдресХранилища,ВыбранноеИмяФайла,ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьКДатеСтроку(Знач Стр) 
	НачСтр = Стр;
	//Зн = Дата(Стр);
	Год   = 0;
	Месяц = 0;
	День  = 0;
	
	Поз  = Найти(Стр,""."");
	День = Число(Лев(Стр,Поз-1));
	Стр = Сред(Стр,Поз+1);
	
	Поз   = Найти(Стр,""."");
	Месяц = Число(Лев(Стр,Поз-1));
	Стр   = Сред(Стр,Поз+1);
	
	Год   = Число(Стр);
	Если СтрДлина(Стр) = 2 Тогда
		Если Год < 100 Тогда
			Год = Год + 2000;
		КонецЕсли;
	КонецЕсли;	 
	
	Зн = Дата(Год,Месяц,День);
	
	
	Зн = Формат(Зн,""ДФ=yyyyMMdd; ДП=00010101"");
	Зн = ""'"" + Зн + ""'"";
	
	Возврат Зн;
КонецФункции

&НаКлиенте
Процедура ВызватьМетод(Обработка, Знач ИмяПроцедуры, МассивАргументов)
	Поз = Найти(ИмяПроцедуры,""("");
	Если Поз > 0 Тогда
		ИмяПроцедуры = Лев(ИмяПроцедуры,Поз-1);
	КонецЕсли;	 
	
	Команда = ""Обработка."" + ИмяПроцедуры + ""("";
	
	АргументТаблица = Неопределено;
	
	Если МассивАргументов <> Неопределено Тогда
		Для Ккк = 0 По МассивАргументов.Количество()-1 Цикл
			Элем = МассивАргументов[Ккк];
			Если ТипЗнч(Элем) = Тип(""Массив"") Тогда
				АргументТаблица = Элем;
				Команда = Команда + ""АргументТаблица"";
			Иначе	
				Команда = Команда + Элем;
			КонецЕсли;	 
			
			Если Ккк < МассивАргументов.Количество()-1 Тогда
				Команда = Команда + "","";
			КонецЕсли;	 
		КонецЦикла;
	КонецЕсли;	 
	
	Команда = Команда + "")"";
	
	Отладка(""Выполняю: "" + Команда);
	Выполнить(Команда);
КонецПроцедуры

&НаКлиенте
Функция СформироватьОписаниеОшибки(Знач Стр,ИмяФайла,ИмяПроцедуры) Экспорт
	Стр = СтрЗаменить(Стр,Символы.ПС,"""");
	Стр = СтрЗаменить(Стр,Символы.ВК,"""");
	
	СисИнфо            = Новый СистемнаяИнформация; 
	ВерсияПриложения   = СисИнфо.ВерсияПриложения;
	РежимСовместимости = УзнатьРежимСовместимости();
	
	Стр = Стр + ""; ИмяФайла=""+ИмяФайла + "", ИмяПроцедуры=""+ИмяПроцедуры + "", версия VB="" + ПолучитьВерсиюОбработкиСервер() + "", версия платформы="" + ВерсияПриложения + "", режим совместимости=""+РежимСовместимости;
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция ПолучитьРезультатПрохожденияТестовСценария(ИДСтроки)
	ИД = МассивИДСтрокиДерева.Найти(ИДСтроки);
	Если ИД = Неопределено  Тогда
		Сообщить(""Неизвестная ошибка в ПолучитьРезультатПрохожденияТестовСценария!"");
		Возврат Неопределено;
	КонецЕсли;	 
	
	Возврат МассивРезультатПрохожденияТестовСценария[ИД]; 
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьТранзакциюСервер()
	Пока ТранзакцияАктивна() Цикл
		ОтменитьТранзакцию();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДействияПослеЗавершенияСценария(СтрокаСценария,БылаОшибка = Ложь,ОписаниеОшибки = Неопределено)
	ВызватьМетодСценарияЕслиОнЕсть(СтрокаСценария, ""ПередОкончаниемСценария"",,БылаОшибка,ОписаниеОшибки);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаличиеИнструментаДляСозданияСкриншотов()
	Если НЕ Объект.СоздаватьИнструкциюHTML и НЕ Объект.ДелатьСкриншотПриВозникновенииОшибки и НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат Истина;
	КонецЕсли;  
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		Если СокрЛП(Объект.КаталогOutputИнструкцияHTML) = """" Тогда
			Сообщить(""КаталогOutputИнструкцияHTML не задан!"");
			Возврат Ложь;
		КонецЕсли;  
	КонецЕсли;	 
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		Если СокрЛП(Объект.КаталогOutputИнструкцияMarkdown) = """" Тогда
			Сообщить(""КаталогOutputИнструкцияMarkdown не задан!"");
			Возврат Ложь;
		КонецЕсли;  
	КонецЕсли;	 
	Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Если СокрЛП(Объект.КаталогOutputСкриншоты) = """" Тогда
			Сообщить(""КаталогOutputСкриншоты не задан!"");
			Возврат Ложь;
		КонецЕсли;  
	КонецЕсли;	 
	Если ЭтоLinux Тогда 
		Возврат Истина;
	Иначе 
		ВременныйФайл = ПолучитьИмяВременногоФайла(""png"");
		СделатьСкриншот(ВременныйФайл);
		Если НЕ ФайлСуществуетКомандаСистемы(ВременныйФайл, ""ПроверитьНаличиеИнструментаДляСозданияСкриншотов"") Тогда
			Сообщить(""НЕ найден инструмент по созданию скриншотов."");
			Возврат Ложь;
		КонецЕсли;	 
		
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СделатьСкриншот(ИмяФайла) Экспорт
	//Команда = ""nircmd savescreenshot "" + ИмяФайла;
	//ЗапуститьПриложение(Команда);
	
	Команда = Объект.КомандаСделатьСкриншот + """""""" + ИмяФайла + """""""";
    Попытка
        Если ЭтоLinux Тогда 
            //Команда = ""import -window root "" + ИмяФайла;
            КомандаСистемы(Команда);
        Иначе 
            //Команда = """"""C:\Program Files (x86)\IrfanView\i_view32.exe"""" /capture=1 /convert="""""" + ИмяФайла + """""""";
            Если ЕстьПоддержкаАсинхронныхВызовов Тогда
                ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
            Иначе	
                ЗапуститьПриложение(Команда,,Истина);
            КонецЕсли;	 
            
        КонецЕсли;    
    Исключение
        Сообщить(""Ошибка создания скрнишота:""+ОписаниеОшибки() + "" комманда:""+Команда);
    КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьИмяФайлаДляСкриншота(Каталог) Экспорт
	Возврат ДополнитьСлешВПуть(Каталог) + ""ScreenShot_"" + СтрЗаменить(ТекущаяУниверсальнаяДатаВМиллисекундах(),Символы.НПП,"""") + "".png"";
КонецФункции	

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииHTMLВыполненияШага(СтруткураШага = Неопределено) Экспорт
	Перем КаталогOutputИнструкцияHTML;
	
	Если СкриншотСделанВСценарии Тогда
		Возврат;
	КонецЕсли;	 
	
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;  
	
	КаталогOutputИнструкцияHTML = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	Если СтруткураШага = Неопределено Тогда
		ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
		Шаги                           = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		СтруткураШага                  = Шаги[ТекИД_ШагаВМассиве];
	КонецЕсли;	 
	
	ИмяФайлаСкриншота = СоздатьИмяФайлаДляСкриншота(КаталогOutputИнструкцияHTML);
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML,КодировкаТекста.UTF8,,Истина);
	ТД.ЗаписатьСтроку(""НачалоШага"");
	СтрокаШага = СтруткураШага.Имя;
	Если СтруткураШага.ШагСПараметрамиВТаблице = Истина Тогда
		Для каждого СтрПараметрыТаблицы Из СтруткураШага.ПараметрыТаблицы Цикл
			СтрокаШага = СтрокаШага + ""\n"" + СтрПараметрыТаблицы;
		КонецЦикла;
	КонецЕсли;	 
	
	ТД.ЗаписатьСтроку(""ИмяШага="" + СтрокаШага);
	ТД.ЗаписатьСтроку(""Скриншот="" + ИмяФайлаСкриншота);
	ТД.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииMarkdownВыполненияШага(СтруткураШага = Неопределено) Экспорт
	
	Если СкриншотСделанВСценарии Тогда
		Возврат;
	КонецЕсли;	 
	
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;  
	
	Если СтруткураШага = Неопределено Тогда
		ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
		Шаги                           = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		СтруткураШага                  = Шаги[ТекИД_ШагаВМассиве];
	КонецЕсли;	 
	
	
	
	
	ИмяФайлаСкриншота = СоздатьИмяФайлаДляСкриншота(Объект.КаталогOutputИнструкцияMarkdown);
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown,КодировкаТекста.UTF8, ,Истина);
	//ТД.Прочитать(ИмяФайлаЛогаИнструкцииMarkdown,КодировкаТекста.UTF8);
	
	ТД.ЗаписатьСтроку(""НачалоШага"");
	
	СтрокаШага = СтруткураШага.Имя;
	Если СтруткураШага.ШагСПараметрамиВТаблице = Истина Тогда
		Для каждого СтрПараметрыТаблицы Из СтруткураШага.ПараметрыТаблицы Цикл
			СтрокаШага = СтрокаШага + ""\n"" + СтрПараметрыТаблицы;
		КонецЦикла;
	КонецЕсли;	 
	
	ТД.ЗаписатьСтроку(""ИмяШага="" + СтрокаШага);
	ТД.ЗаписатьСтроку(""Скриншот="" + ИмяФайлаСкриншота);
	ТД.Закрыть();
	
	//ТД.Записать(ИмяФайлаЛогаИнструкцииMarkdown,КодировкаТекста.UTF8);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначениеДляПередачиВМетод(Значение,Тип)
	Если Тип = ""Строка"" Тогда
		Возврат """""""" + СтрЗаменить(Значение,"""""""","""""""""""") + """""""";
	ИначеЕсли Тип = ""Число"" Тогда
		Возврат Значение;
	ИначеЕсли Тип = ""Дата"" Тогда
		Возврат ПреобразоватьКДатеСтроку(Значение);
	Иначе
		ВызватьИсключение ""Неизвестный Тип: "" + Тип + "" в ПолучитьЗначениеДляПередачиВМетод"";
	КонецЕсли;	 
КонецФункции

&НаСервере
Функция ПолучитьЗначениеДляПередачиВМетодСервер(Значение,Тип)
	Если Тип = ""Строка"" Тогда
		Возврат """""""" + СтрЗаменить(Значение,"""""""","""""""""""") + """""""";
	ИначеЕсли Тип = ""Число"" Тогда
		Возврат Значение;
	ИначеЕсли Тип = ""Дата"" Тогда
		Возврат ПреобразоватьКДатеСтрокуСервер(Значение);
	Иначе
		ВызватьИсключение ""Неизвестный Тип: "" + Тип + "" в ПолучитьЗначениеДляПередачиВМетод"";
	КонецЕсли;	 
КонецФункции

&НаСервере
Функция ПреобразоватьКДатеСтрокуСервер(Знач Стр) 
	НачСтр = Стр;
	//Зн = Дата(Стр);
	Год   = 0;
	Месяц = 0;
	День  = 0;
	
	Поз  = Найти(Стр,""."");
	День = Число(Лев(Стр,Поз-1));
	Стр = Сред(Стр,Поз+1);
	
	Поз   = Найти(Стр,""."");
	Месяц = Число(Лев(Стр,Поз-1));
	Стр   = Сред(Стр,Поз+1);
	
	Год   = Число(Стр);
	Если СтрДлина(Стр) = 2 Тогда
		Если Год < 100 Тогда
			Год = Год + 2000;
		КонецЕсли;
	КонецЕсли;	 
	
	Зн = Дата(Год,Месяц,День);
	
	Зн = Формат(Зн,""ДФ=yyyyMMdd; ДП=00010101"");
	Зн = ""'"" + Зн + ""'"";
	
	Возврат Зн;
КонецФункции


&НаКлиенте
Процедура ЗапомнитьСостоянияКонтекстовДоВыполненияШага(Контекст,КонтекстСохраняемый,ИдСтроки)
	СостоянияКонтекстовДоВыполненияШага = Новый Структура;
	СостоянияКонтекстовДоВыполненияШага.Вставить(""Контекст"",СкопироватьСтруктуру(Контекст));
	СостоянияКонтекстовДоВыполненияШага.Вставить(""КонтекстСохраняемый"",СкопироватьСтруктуру(КонтекстСохраняемый));
	СостоянияКонтекстовДоВыполненияШага.Вставить(""ИдСтроки"",ИдСтроки);
	
	Ном = -1;
	Для каждого Элем Из МассивСостоянияКонтекстовДоВыполненияШага Цикл
		Ном = Ном + 1;
		Если Элем.ИдСтроки = ИдСтроки Тогда
			МассивСостоянияКонтекстовДоВыполненияШага.Удалить(Ном);
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	МассивСостоянияКонтекстовДоВыполненияШага.Добавить(СостоянияКонтекстовДоВыполненияШага);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСостоянияКонтекстовПоИдСтроки(ИдСтроки)
	Для каждого Элем Из МассивСостоянияКонтекстовДоВыполненияШага Цикл
		Если Элем.ИдСтроки = ИдСтроки Тогда
			Возврат Элем;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции	

&НаКлиенте
Процедура ВыполнитьШаг()
	Если ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий Тогда
		Возврат;
	КонецЕсли; 
	
	ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
	
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	ТекШаг = Шаги[ТекИД_ШагаВМассиве];
	
	
	
	
	ИДСтрокиШага                       = ТекШаг.СтрокаШага;
	ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
	РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
	
	СтрокаШага     = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
	СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
	
	
	
	//Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаШага.ПолучитьИдентификатор();
	
	РезультатПрохожденияШага = Новый Структура;
	РезультатПрохожденияШага.Вставить(""Имя"",СтрокаШага.Имя);
	РезультатПрохожденияШага.Вставить(""ВремяНачала"",ТекущаяУниверсальнаяДатаВМиллисекундах());
	
	
	АдресСнипета = ТекШаг.АдресСнипета;
	Если СокрЛП(АдресСнипета) = """" Тогда
		ОстановитьЗаписьВидеоОдногоШага();
		
		СтрокаШага.Статус = ""Pending"";
		СтрокаШага.ТипКартинки = 6;
		СтрокаСценария.Статус         = СтрокаШага.Статус;
		ОписаниеОшибки = ""Пустой адрес снипета у шага: "" + ТекШаг.Имя;
		
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		РезультатПрохожденияШага.Вставить(""Статус"",СтрокаШага.Статус);
		
		СделатьСообщение(ОписаниеОшибки);
		
		РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ДействияПослеЗавершенияСценария(СтрокаСценария,БылаОшибка,ОписаниеОшибки);
		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;		
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		КонецЕсли;
		
		
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(СтрокаШага,СтрокаСценария,РезультатПрохожденияТестовСценария);
		Иначе	
			//выполняем следующий сценарий
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;	 
		
		
		Возврат;
	КонецЕсли;	 
	
	
	//ТаблицаКонтекстовОбработок
	ИД = МассивИменКонтекстовОбработок.Найти(АдресСнипета);
	ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
	КонтекстОтладки = ТаблицаОбработокДляОтладки.Получить(ТекШаг.СтрокаРеальнойПроцедуры);
	Если КонтекстОтладки <> Неопределено Тогда 
		ОбработкаТеста = КонтекстОтладки.Обработка;
	КонецЕсли;
	
	ИмяПроцедуры     = ТекШаг.СтрокаРеальнойПроцедуры;
	СписокАргументов = ТекШаг.ЗначенияПараметров;
	
	
	МассивПараметров = ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов);
	
	Если СтрокаШага.ШагСПараметрамиВТаблице = Истина Тогда
		ПарамТаблица = Новый Массив;
		
		ПодчиненныеСтроки = СтрокаШага.ПолучитьЭлементы();
		Для каждого СтрокиТаблицы Из ПодчиненныеСтроки Цикл
			СтрокаПарамТаблица = Новый Структура;
			
			НомерКолонки = 0;
			Для каждого Колонка Из СтрокиТаблицы.ПараметрыТаблицы Цикл
				НомерКолонки       = НомерКолонки + 1;
				СтруктураПараметра = Колонка.Значение;
				Значение           = ПолучитьЗначениеДляПередачиВМетод(СтруктураПараметра.Значение,СтруктураПараметра.Тип);
				Значение           = Вычислить(Значение);
			
				СтрокаПарамТаблица.Вставить(""Кол"" + НомерКолонки,Значение);
			КонецЦикла;
			
			ПарамТаблица.Добавить(СтрокаПарамТаблица);
		КонецЦикла;
		МассивПараметров.Добавить(ПарамТаблица);
	КонецЕсли;	 
	
	СтрОшибка       = Неопределено;
	ШагВыполнен     = Ложь;
	ШагНеРеализован = Ложь;
	Попытка
		
		Если Объект.РежимВыполненияСценарияСВыбранногоШага = Истина Тогда
			СохраненнаяСтруктура = ПолучитьСостоянияКонтекстовПоИдСтроки(СтрокаШага.ИдСтроки);
			Если СтрокаШага.ВыполнятьСценарийСЭтогоШага = Истина Тогда 
				Если СохраненнаяСтруктура <> Неопределено Тогда
					ОбъектКонтекст            = СкопироватьСтруктуру(СохраненнаяСтруктура.Контекст);
					ОбъектКонтекстСохраняемый = СкопироватьСтруктуру(СохраненнаяСтруктура.КонтекстСохраняемый);
				Иначе	
					ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст,ОбъектКонтекстСохраняемый,СтрокаШага.ИдСтроки);
				КонецЕсли;	 
			Иначе	
				//значит в этот раз запустить с этого шага не получится, надо запомнить контекст для последующих запусков
				ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст,ОбъектКонтекстСохраняемый,СтрокаШага.ИдСтроки);
			КонецЕсли;	 
		ИначеЕсли Объект.СохранятьКонтекстыПередВыполнениемШагов Тогда
			ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст,ОбъектКонтекстСохраняемый,СтрокаШага.ИдСтроки);
		КонецЕсли;	 
		
		
		ОбработкаТеста.Контекст            = ОбъектКонтекст;
		ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
		
		Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
			ЗаписатьЛогВЖРПередВыполнениемШага(ТекШаг.Имя);
		КонецЕсли;	 
		
		
		СкриншотСделанВСценарии = Ложь;
		
		ВсёЕщёИдётВыполнениеШагов = ВсёЕщёИдётВыполнениеШагов + 1;
		ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
		ВсёЕщёИдётВыполнениеШагов = ВсёЕщёИдётВыполнениеШагов - 1;
		
		ОбъектКонтекст            = ОбработкаТеста.Контекст;
		ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
		
		ШагВыполнен = Истина;
		
		Если НЕ ТекШаг.ЭтоШагКонтекста Тогда
			ДобавитьВЛогИнструкцииHTMLВыполненияШага(ТекШаг);
			ДобавитьВЛогИнструкцииMarkdownВыполненияШага(ТекШаг);
			Если Не ЭтоПрерывающйВидеоШаг(ТекШаг) Тогда
				КоличествоШаговВДаннойЧастиВидео = КоличествоШаговВДаннойЧастиВидео + 1;
			КонецЕсли;	 
		КонецЕсли;	 
		
	Исключение
		Отладка(""ОписаниеОшибки()=""+ОписаниеОшибки());
		ОписаниеОшибкиСтр = ОписаниеОшибки();
		Если Найти(ОписаниеОшибкиСтр,""}: Не реализовано."") > 0 Тогда //тогда это Pending
			СделатьСообщение(""Шаг ("" + ТекШаг.Имя + "") не реализован."");
			СтрОшибка = ""Не реализовано."";
			ШагНеРеализован = Истина;
		Иначе
			//значит возникла ошибка
			СделатьСообщение(""Шаг ("" + ТекШаг.Имя + "") не выполнен."");
			СтрОшибка = СформироватьОписаниеОшибки(ОписаниеОшибки(),АдресСнипета,ИмяПроцедуры);
			СделатьСообщение(СтрОшибка);
		КонецЕсли;
		
		
	КонецПопытки;
	
	
	
	
	//ПромСтрока = Неопределено;
	//НайтиСтрокуДереваПоИдСтроки(СтрокаШага.ИдСтроки,Объект.ДеревоТестов.ПолучитьЭлементы(),ПромСтрока);
	//СтрокаШага = ПромСтрока;
	
	РезультатПрохожденияШага.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
	Если ШагВыполнен Тогда
		Если Не Объект.ОстановитьВыполнениеШагов Тогда
			СтрокаШага.Статус = ""Success"";
			СтрокаШага.ТипКартинки = 4;
			РезультатПрохожденияШага.Вставить(""Статус"",СтрокаШага.Статус);
		КонецЕсли;	 
		РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
		
		
		
		ПерейтиКВыполнениюСледующегоШага();
	Иначе	
		ЗапомнитьСтрокиДереваДанныеФормы();
		СтрокаШага     = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
		СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
		
		Если ШагНеРеализован Тогда
			СтрокаШага.Статус = ""Pending"";
			СтрокаШага.ТипКартинки = 6;
		Иначе
			СтатусЗапускаСценариев = Ложь;		
			СтрокаШага.Статус      = ""Failed"";
			СтрокаШага.ТипКартинки = 5;
		КонецЕсли; 
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"",СтрОшибка);
		РезультатПрохожденияШага.Вставить(""Статус"",СтрокаШага.Статус);
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",СтрОшибка);
		
		СтрокаСценария.Статус         = СтрокаШага.Статус;
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ДействияПослеЗавершенияСценария(СтрокаСценария,БылаОшибка,ОписаниеОшибки);
		РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);

		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;		
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		КонецЕсли;
		
		ДобавитьШагиВРезультатПрохожденияТестовШаговКоторыеНеВыполнялись(Шаги,ТекИД_ШагаВМассиве,РезультатПрохожденияТестовШагов);
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если СтрокаСценария.Статус = ""Failed"" и Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(СтрокаШага,СтрокаСценария,РезультатПрохожденияТестовСценария);
		Иначе	
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;	 
		
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапретитьВыполнениеШагов() Экспорт
	Объект.ОстановитьВыполнениеШагов = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущемуШагуФлагЧтоОнДолженСчитатьсяУпавшим()
	Если ТекИД_ШагаВМассиве = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если (МассивСценариевДляВыполнения.Количество()-1) < ТекИД_СценарияВМассиве Тогда
		Возврат;
	КонецЕсли;	 
	
	
	Если ТекИД_ШагаВМассиве >= 0 Тогда
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		ТекШаг.Вставить(""ШагСчитаетсяУпавшим"",Истина);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВыполнениеШагов(ШагУпал = Ложь) Экспорт
	Объект.ОстановитьВыполнениеШагов = Ложь;
	
	Если ШагУпал Тогда
		УстановитьТекущемуШагуФлагЧтоОнДолженСчитатьсяУпавшим();
	КонецЕсли;	 
	
	Если ВсёЕщёИдётВыполнениеШагов  > 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	Если МассивСценариевДляВыполнения <> Неопределено Тогда
		Если (МассивСценариевДляВыполнения.Количество()-1) < ТекИД_СценарияВМассиве Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли; 
	
	
	ПерейтиКВыполнениюСледующегоШага(Истина,Истина);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТранзакцияАктивнаСервер()
	Возврат ТранзакцияАктивна();
КонецФункции	




//работа с видео - начало

&НаКлиенте
Функция ЗагрузитьФайлВМассив(ИмяФайла)
	Массив = Новый Массив;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Массив.Добавить(Стр);
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Функция ПолучитьПараметрыЗаписиВидео()
	ПараметрыВидео = Новый Структура;
	ПараметрыВидео.Вставить(""КаталогOutputИнструкцияВидео"",Объект.КаталогOutputИнструкцияВидео);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаНачатьЗаписьВидео"",Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео);
	ПараметрыВидео.Вставить(""ЗаписьВидеоФайлКурсораМышки"",Объект.ЗаписьВидеоФайлКурсораМышки);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКаталогДляВременныхФайлов"",Объект.ЗаписьВидеоКаталогДляВременныхФайлов);
	ПараметрыВидео.Вставить(""ЗаписьВидеоФайлВодянойЗнак"",Объект.ЗаписьВидеоФайлВодянойЗнак);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаFfmpeg"",Объект.ЗаписьВидеоКомандаFfmpeg);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаConvert"",Объект.ЗаписьВидеоКомандаConvert);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКаталогМузыки"",Объект.ЗаписьВидеоКаталогМузыки);
	ПараметрыВидео.Вставить(""ЗаписьВидеоДелатьНаложениеTTS"",Объект.ЗаписьВидеоДелатьНаложениеTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПутьКДвижкуTTS"",Объект.ЗаписьВидеоПутьКДвижкуTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоИмяTTS"",Объект.ЗаписьВидеоИмяTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоСловарьЗамен"",Объект.ЗаписьВидеоСловарьЗамен);
	ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранШирина"",Объект.ЗаписьВидеоЭкранШирина);
	ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранВысота"",Объект.ЗаписьВидеоЭкранВысота);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"",Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"",Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы);
	
	
	ПараметрыВидео.Вставить(""ЗаписьВидеоКоличествоКадров"",Объект.ЗаписьВидеоКоличествоКадров);
	ПараметрыВидео.Вставить(""DebugLog"",Объект.DebugLog);
	ПараметрыВидео.Вставить(""Ванесса"",ЭтаФорма);
	ПараметрыВидео.Вставить(""КаталогИнструментов"",Объект.КаталогИнструментов);
	ПараметрыВидео.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"",ЕстьПоддержкаАсинхронныхВызовов);
	
	ПараметрыВидео.Вставить(""ЭтоИнициализация"",Ложь);
	
	
	
	//уменьшим разрешение экрана, если оно указано больше чем реальное
	ИнформацияЭкранаКлиента = Вычислить(""ПолучитьИнформациюЭкрановКлиента()[0]"");
	Ширина = ИнформацияЭкранаКлиента.Ширина;
	Высота = ИнформацияЭкранаКлиента.Высота;
	Если (Ширина % 2) = 1 Тогда //нечетное
		Ширина = Ширина - 1;
	КонецЕсли;	 
	Если (Высота % 2) = 1 Тогда //нечетное
		Высота = Высота - 1;
	КонецЕсли;	 
	
	Если Ширина < Объект.ЗаписьВидеоЭкранШирина Тогда
		ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранШирина"",Ширина);
	КонецЕсли;	 
	Если Высота < Объект.ЗаписьВидеоЭкранВысота Тогда
		ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранВысота"",Высота);
	КонецЕсли;	 
	
	
	Возврат ПараметрыВидео;
КонецФункции	

&НаКлиенте
Процедура ЗавершитьЗаписьВидео()
	Если НЕ Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""МассивСценариевДляВыполнения"",МассивСценариевДляВыполнения);
	ПараметрыВидео.Вставить(""МассивСтрокДереваДанныеФормы"",МассивСтрокДереваДанныеФормы);
	
	Если СтатусЗапускаСценариев Тогда //если были упавшие шаги, то делать видео не надо
		МодульРаботыСВидео.ЗавершитьЗаписьВидео(ПараметрыВидео);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьЗаписьВидеоОдногоШага()
	Если Не Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	МодульРаботыСВидео.ОстановитьЗаписьВидеоОдногоШага(ПараметрыВидео);
	Объект.ИдетЗаписьВидео = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьВидеоОдногоШага(ТекИД_СценарияВМассиве,ТекИД_ШагаВМассиве,ТекШаг)
	Если Не Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""ТекИД_СценарияВМассиве"",ТекИД_СценарияВМассиве);
	ПараметрыВидео.Вставить(""ТекИД_ШагаВМассиве"",ТекИД_ШагаВМассиве);
	ПараметрыВидео.Вставить(""ТекШаг"",ТекШаг);
	
	МодульРаботыСВидео.НачатьЗаписьВидеоОдногоШага(ПараметрыВидео);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодготовкуКЗаписиВидео()
	
	//проверим разрешение экрана
	
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""ЭтоИнициализация"",Истина);
	МодульРаботыСВидео.Инициализация(ПараметрыВидео);
	
	ПараметрыВидео.Вставить(""МассивСценариевДляВыполнения"",МассивСценариевДляВыполнения);
	//МодульРаботыСВидео.СоздатьФайлыTTS(ПараметрыВидео);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтотШагНеНадоМасштабироватьВВидео() Экспорт
	Если ТекИД_СценарияВМассиве >= 0 Тогда
		Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ТекШаг.Вставить(""МасштабироватьВВидео"",Ложь);
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстИнструкции(Стр) Экспорт
	Если ТекИД_СценарияВМассиве >= 0 Тогда
		Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ТекШаг.Вставить(""ТекстИнструкция"",Стр);
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

//работа с видео - окончание


&НаКлиенте
Функция ЭтоПрерывающйВидеоШаг(ТекШаг) Экспорт
	Поз = Найти(ТекШаг.Снипет,""("");
	Стр = НРег(Лев(ТекШаг.Снипет,Поз-1));
	
	Если МассивСнипетовПрерывающихЗаписьСценария.Найти(Стр) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	 
КонецФункции	

&НаКлиенте
Процедура ПерейтиКВыполнениюСледующегоСценария()
	
	ОстановитьЗаписьВидеоОдногоШага();
	
	ТекИД_СценарияВМассиве = ТекИД_СценарияВМассиве + 1;
	ПодключитьОбработчикОжидания(""ВыполнинтьСценарийАссинхронноТаймер"",Объект.ИнтервалВыполненияШага,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВыполнениюСледующегоШага(ВыполнитьШагЧерезТаймер = Неопределено,НадоОбновитьСтатусШага = Ложь)
	Если Объект.ОстановитьВыполнениеШагов Тогда
		Возврат;
	КонецЕсли;	 
	
	Если ТекИД_СценарияВМассиве = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если (ТекИД_СценарияВМассиве <> Неопределено) и (ТекИД_СценарияВМассиве >= 0) и (ТекИД_ШагаВМассиве >= 0) и (ТекИД_СценарияВМассиве <= (МассивСценариевДляВыполнения.Количество()-1) ) Тогда
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		
		Если ТекШаг.ШагСчитаетсяУпавшим Тогда
			СтатусЗапускаСценариев = Ложь;
			
			ИДСтрокиШага                       = ТекШаг.СтрокаШага;
			ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
			РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
			РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
			
			СтрокаШага     = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
			СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
			СтрокаШага.Статус      = ""Failed"";
			СтрокаШага.ТипКартинки = 5;
			СтрокаСценария.Статус  = СтрокаШага.Статус;
			АдресСнипета           = ТекШаг.АдресСнипета;
			ИмяПроцедуры           = ТекШаг.СтрокаРеальнойПроцедуры;
			
			СделатьСообщение(""Шаг ("" + ТекШаг.Имя + "") не выполнен."");
			ОписаниеОшибки = СформироватьОписаниеОшибки(ОписаниеОшибки(),АдресСнипета,ИмяПроцедуры);
			СделатьСообщение(ОписаниеОшибки);
			
			РезультатПрохожденияШага = РезультатПрохожденияТестовШагов[РезультатПрохожденияТестовШагов.Количество()-1];
			
			
			РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
			РезультатПрохожденияШага.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
			РезультатПрохожденияШага.Вставить(""Статус"",СтрокаШага.Статус);
			
			СделатьСообщение(ОписаниеОшибки);
			
			РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
			
			БылаОшибка     = Ложь;
			ОписаниеОшибки = """";
			ДействияПослеЗавершенияСценария(СтрокаСценария,БылаОшибка,ОписаниеОшибки);
			
			СтрокаСценария.Статус = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
			ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
			
			
			Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
				СделатьСкриншотВозникновенияОшибки(СтрокаШага,СтрокаСценария,РезультатПрохожденияТестовСценария);
			Иначе	
				ПерейтиКВыполнениюСледующегоСценария();
			КонецЕсли;	 

			
			
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	Если НадоОбновитьСтатусШага Тогда
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			
			Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ИДСтрокиШага                       = ТекШаг.СтрокаШага;
			ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
			РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
			РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
			
			СтрокаШага     = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
			СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
			
			
			
			СтрокаШага.Статус = ""Success"";
			СтрокаШага.ТипКартинки = 4;
			
			
			РезультатПрохожденияШага = РезультатПрохожденияТестовШагов[РезультатПрохожденияТестовШагов.Количество()-1];
			РезультатПрохожденияШага.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияШага.Вставить(""Статус"",СтрокаШага.Статус);
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если ТекИД_ШагаВМассиве = -1 Тогда
		ТекИД_ШагаВМассиве = ТекИД_ШагаВМассиве + 1;
	ИначеЕсли 	ТекИД_ШагаВМассиве = ТекИД_ВыполненногоШагаВМассиве Тогда // это надо т.к. в определенных случаях таймер, подключающий следующий шаг может не сработать
		ТекИД_ШагаВМассиве = ТекИД_ШагаВМассиве + 1;
	КонецЕсли;	 
	
		
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	Если (Шаги.Количество()-1) < ТекИД_ШагаВМассиве Тогда
		//значит все шаги выполнены, запускаем следующий сценарий
		//МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева.ВремяОкончания = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
		ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
		СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ДействияПослеЗавершенияСценария(СтрокаСценария,БылаОшибка,ОписаниеОшибки);
		
		РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;		
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		КонецЕсли;
		
		Если СтрокаСценария.Статус = ""Failed"" и Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(""ПередОкончаниемСценария"",СтрокаСценария,РезультатПрохожденияТестовСценария);
		Иначе	
			
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;	 
		
		
		Возврат;
	КонецЕсли;	 
	
	
	
	
	Если ТекИД_ШагаВМассиве >= 0 Тогда
		//логируем выполненный шаг
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		
		
		Если НЕ ТекШаг.ЭтоШагКонтекста Тогда
			//тут надо сделать запись одного шага, плюс записть для каждого шага файл параметров: ИД, строка субтитров, файлTTS если есть
			
			ОстановитьЗаписьВидеоОдногоШага();
			НачатьЗаписьВидеоОдногоШага(ТекИД_СценарияВМассиве,ТекИД_ШагаВМассиве,ТекШаг);
			
			
		//	НачатьЗаписьВидео();
		//	
		//	Если Объект.ИдетЗаписьВидео Тогда
		//		СтрокаТитров = ТекШаг.Имя;
		//		Если ТекШаг.ШагСПараметрамиВТаблице = Истина Тогда
		//			Для каждого СтрПараметрыТаблицы Из ТекШаг.ПараметрыТаблицы Цикл
		//				СтрокаТитров = СтрокаТитров + ""\n"" + СтрПараметрыТаблицы;
		//			КонецЦикла;
		//		КонецЕсли;	 
		//		
		//		Если ЭтоПрерывающйВидеоШаг(ТекШаг) Тогда
		//			ИДВставкиВВидео = ИДВставкиВВидео + 1;
		//			ЗакончитьЗаписьВидеоОдногоСценария(Истина,ТекШаг);
		//			НачатьЗаписьВидео();
		//		Иначе	
		//			ЗаписатьЛогЗаписиВидео(СтрокаТитров,ТекШаг);
		//		КонецЕсли;	 
		//		
		//		
		//		
		//		
		//	КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	Если (Шаги.Количество()-1) >= ТекИД_ШагаВМассиве Тогда
		СтрокаШага                          = МассивСтрокДереваДанныеФормы[Шаги[ТекИД_ШагаВМассиве].СтрокаШага];
		Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаШага.ПолучитьИдентификатор();
	КонецЕсли;
	
	
	
	
	ИнтервалДляВыполненияШага = Объект.ИнтервалВыполненияШага;
	Если Объект.ИдетЗаписьВидео Тогда
		Если ЭтоПрерывающйВидеоШаг(ТекШаг) Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;	 
		
		Если ТекШаг.ЭтоШагКонтекста Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;	 
		
		Если МассивTTS <> Неопределено Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	
	
	
	
	Если (ВыполнитьШагЧерезТаймер = Истина) Тогда
		ПодключитьОбработчикОжидания(""ВыполнитьШаг"",ИнтервалДляВыполненияШага,Истина); //вызвываем шаг через таймер, чтобы дать всем формам прорисоваться
	ИначеЕсли (НЕ Объект.ВыполнятьШагиАссинхронно)  Тогда 
		ВыполнитьШаг();//просто вызываем следующий шаг
	Иначе
		ПодключитьОбработчикОжидания(""ВыполнитьШаг"",ИнтервалДляВыполненияШага,Истина); //вызвываем шаг через таймер, чтобы дать всем формам прорисоваться
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШагиВРезультатПрохожденияТестовШаговКоторыеНеВыполнялись(Шаги,ТекИД,РезультатПрохожденияТестовШагов)
	Ид = ТекИД;
	Пока Истина Цикл
		Ид = Ид+1;
		Если Шаги.Количество() < (Ид+1) Тогда
			Прервать;
		КонецЕсли;	 
		
		ТекШаг = Шаги[Ид];
		
		РезультатПрохожденияШага = Новый Структура;
		РезультатПрохожденияШага.Вставить(""Имя"",ТекШаг.Имя);
		РезультатПрохожденияШага.Вставить(""ВремяНачала"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"",""Пропущен"");
		РезультатПрохожденияШага.Вставить(""Статус"",""Skipped"");
		
		РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДерева)
	Если СтрокаДерева.Фича = Истина Тогда
		Возврат СтрокаДерева.ПолныйПуть;
	КонецЕсли;	 
	
	Возврат ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДерева.ПолучитьРодителя());
КонецФункции	

&НаКлиенте
Функция ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета)
	ИД = МассивИменКонтекстовОбработок.Найти(АдресСнипета);
	Если ИД = Неопределено Тогда
		//Скорее всего это обработка не содержащая в себе тесты.
		Возврат Неопределено;
	Иначе
		ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
	КонецЕсли;	 
	
	Возврат ОбработкаТеста;
КонецФункции	

&НаКлиенте
Процедура ВызватьМетодСценарияЕслиОнЕсть(СтрокаДереваСценария, ИмяПроцедуры,МассивПараметров = Неопределено,БылаОшибка = Ложь,ОписаниеОшибки = Неопределено)
	ИмяФичаФайла = ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДереваСценария);
	Если ИмяФичаФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Файл         = Новый Файл(ИмяФичаФайла);
	КаталогФичи  = Файл.Путь;
	АдресСнипета = ДополнитьСлешВПуть(КаталогФичи) + ДополнитьСлешВПуть(""step_definitions"") + Файл.ИмяБезРасширения + "".epf"";
	
	
	ФайлПроверкаСуществования = Новый Файл(АдресСнипета);
	Если НЕ СтрокаДереваСценария.ФичаИмеетСвоюEPF Тогда
		Возврат;
	КонецЕсли;	 
	
	ОбработкаТеста = ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета);
	Если ОбработкаТеста = Неопределено Тогда
		//это возможно, если у фичи вообще нет своей обработки и она использует только шаги из других фич
		Возврат;
	КонецЕсли;  
	
	ОбработкаТеста.Контекст            = ОбъектКонтекст;
	ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
	
	Попытка
		ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
	Исключение
		Сообщить(""Ошибка в "" + ИмяПроцедуры + "". "" + ОписаниеОшибки());
		БылаОшибка     = Истина;
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	ОбъектКонтекст            = ОбработкаТеста.Контекст;
	ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьСозданиеИнструкцииHTML()
	Перем КаталогOutputИнструкцияHTML;
	
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;	
	
	КаталогOutputИнструкцияHTML = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	
	//ФайлПроверкаСуществования = Новый Файл(Объект.КаталогOutputИнструкцияHTML);
	//Если НЕ ФайлПроверкаСуществования.Существует() Тогда
	Если НЕ ФайлСуществуетКомандаСистемы(КаталогOutputИнструкцияHTML) Тогда 
		Стр = ""Файл КаталогOutputИнструкцияHTML: "" + КаталогOutputИнструкцияHTML + "" не существует!"";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Если Найти(Прав(КаталогOutputИнструкцияHTML,1), ""\/"") > 0 Тогда
		КаталогOutputИнструкцияHTML = Сред(КаталогOutputИнструкцияHTML,СтрДлина(КаталогOutputИнструкцияHTML)-1);
	КонецЕсли;	 
	
	Если МассивСценариевДляВыполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяФичаИнструкцииHTML <> МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи Тогда
		Если ТекущаяФичаИнструкцииHTML <> """" Тогда
			СоздатьФайлHTMLИнструкции();
		КонецЕсли;  
		ТекущаяФичаИнструкцииHTML = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи;
	Иначе
		Возврат;
	КонецЕсли;  
	
	ИмяФайлаЛогаИнструкцииHTML = СтрЗаменить(ДополнитьСлешВПуть(КаталогOutputИнструкцияHTML) + ""InstrHTML_"" + ТекущаяФичаИнструкцииHTML + ""_"" +  СтрЗаменить(СтрЗаменить(ТекущаяДата(),"":"",""""),"" "",""_"") + ""_"" + ТекущаяУниверсальнаяДатаВМиллисекундах() + ""_log.txt"",Символы.НПП,"""");
	
	ТД = Новый ТекстовыйДокумент;
	ЗаголовокФичи = ПрочитатьЗаголовокФичи(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML,КодировкаТекста.UTF8);
	Для каждого Стр Из ЗаголовокФичи Цикл
		ТД.ЗаписатьСтроку(Стр);
	КонецЦикла;
	ТД.ЗаписатьСтроку(""--окончание заголовка--"");
	ТД.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПрочитатьЗаголовокФичи(ИмяФайла) Экспорт
	Массив = Новый Массив;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если СокрЛП(Стр) = """" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Стр = СокрЛП(Стр);
		
		Если Лев(Стр,1) = ""@"" Тогда
			Продолжить;
		КонецЕсли;	 
		Если Лев(Стр,1) = ""#"" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если Найти(НРег(Стр),""сценарий:"") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРег(Стр),""контекст:"") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРег(Стр),""scenario:"") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРег(Стр),""background:"") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		
		Массив.Добавить(Стр);
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Процедура ПодготовитьСозданиеИнструкцииMarkdown()
	Перем КаталогOutputИнструкцияMarkdown;
	
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;	
	
	КаталогOutputИнструкцияMarkdown = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияMarkdown);
	
	Если НЕ ФайлСуществуетКомандаСистемы(КаталогOutputИнструкцияMarkdown) Тогда 
		Стр = ""Файл КаталогOutputИнструкцияMarkdown: "" + КаталогOutputИнструкцияMarkdown + "" не существует!"";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Если Найти(Прав(КаталогOutputИнструкцияMarkdown,1), ""\/"") > 0 Тогда
		КаталогOutputИнструкцияMarkdown = Сред(КаталогOutputИнструкцияMarkdown,СтрДлина(КаталогOutputИнструкцияMarkdown)-1);
	КонецЕсли;	 
	
	Если МассивСценариевДляВыполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяФичаИнструкцииMarkdown <> МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи Тогда
		Если ТекущаяФичаИнструкцииMarkdown <> """" Тогда
			СоздатьФайлMarkdownИнструкции();
		КонецЕсли;  
		ТекущаяФичаИнструкцииMarkdown = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи;
	Иначе
		Возврат;
	КонецЕсли;  
	
	ИмяФайлаЛогаИнструкцииMarkdown = СтрЗаменить(ДополнитьСлешВПуть(КаталогOutputИнструкцияMarkdown) + ""InstrMarkdown_"" + ТекущаяФичаИнструкцииMarkdown + ""_"" +  СтрЗаменить(СтрЗаменить(ТекущаяДата(),"":"",""""),"" "",""_"") + ""_"" + ТекущаяУниверсальнаяДатаВМиллисекундах() + ""_log.txt"",Символы.НПП,"""");
	
	ЗаголовокФичи = ПрочитатьЗаголовокФичи(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8);
	Для каждого Стр Из ЗаголовокФичи Цикл
		ТД.ЗаписатьСтроку(Стр);
	КонецЦикла;
	ТД.ЗаписатьСтроку(""--окончание заголовка--"");
	ТД.Закрыть();
	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетАллюрСервер(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	ОбъектСервер.СформироватьОтчетАллюр(СтруктураОФ);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетxUnitСервер(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ОбъектСервер.СформироватьОтчетxUnit(СтруктураОФ);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСтатусВыполненияСценариевВФайл(Статус,ПутьКФайлу)
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя) Тогда
			Если Файл.ЭтоКаталог() Тогда
				СделатьСообщение(""Не могу выгрузить статус сценариев, т.к. был передан каталог, а не файл."");
				Возврат;
			КонецЕсли;	
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	ФайлКаталог = Новый Файл(Файл.Путь);
	Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталог.ПолноеИмя) Тогда
		СделатьСообщение(""Не могу выгрузить статус сценариев, т.к. каталог "" + ФайлКаталог.ПолноеИмя + "" не существует!"");
		Возврат;
	КонецЕсли;	
	
	УдалитьФайлыКомандаСистемы(ПутьКФайлу);
	
	ЗТ = Новый ЗаписьТекста(ПутьКФайлу,""UTF-8"",,Истина); 
	Если Статус Тогда
		Стр = ""0"";
	Иначе	
		Стр = ""1"";
	КонецЕсли;	 
	
	ЗТ.ЗаписатьСтроку(Стр); 
	
	ЗТ.Закрыть();
	
	СделатьСообщение(""Записал файл статуса билда: "" + ПутьКФайлу);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьTestClientЕслиОнПодключен()
	Попытка
		ОбъектКонтекстСохраняемый.ГлавноеОкноТестируемого.Закрыть();
	Исключение
		
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьОбработкаСвязаннаяСИсполняемойФичей(ИмяФайлаФичи)
	ФайлФичи = Новый Файл(ИмяФайлаФичи);
	ФайлEPF  = ФайлФичи.Путь + ""step_definitions"" +?(ЭтоLinux, ""/"", ""\"") + ФайлФичи.ИмяБезРасширения + "".epf"";
	ИД       = МассивИменКонтекстовОбработок.Найти(ФайлEPF);
	Возврат ТаблицаКонтекстовОбработок[ИД].Обработка;
КонецФункции

&НаКлиенте
Процедура ВыполнинтьСценарийАссинхронноТаймер()
	Объект.ИнтервалВыполненияШага = Объект.ИнтервалВыполненияШагаЗаданныйПользователем;
	
	ОбъектКонтекст = Новый Структура;
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;
	
	Если ТекИД_СценарияВМассиве > 0 Тогда
		ОбработатьСтатусСценария(ТекИД_СценарияВМассиве-1);
	КонецЕсли; 
	
	ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Ложь;
	ИДВставкиВВидео                                  = 0;
	МассивЧастейВидео                                = Новый Массив;
	КоличествоШаговВДаннойЧастиВидео                 = 0;
	
	Если (МассивСценариевДляВыполнения.Количество()-1) < ТекИД_СценарияВМассиве Тогда
		//значит все сценарии выполнены
        ПутьКОбработке = ПолучитьПутьКОбработкеСервер();
		СоздатьФайлHTMLИнструкции();
		СоздатьФайлMarkdownИнструкции();
		ЗавершитьЗаписьВидео();
		
		СделатьСообщение(""Все сценарии обработаны!"");
		Если Объект.ДелатьОтчетВФорматеАллюр Тогда
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"",МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"",МассивИДСтрокиДерева);
			
			
			ДвоичныеДанные = Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/vendor/allure-framework/allure.xsd"");
			СтруктураОФ.Вставить(""СхемаAllure"",ДвоичныеДанные);
			СтруктураОФ.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"",ЕстьПоддержкаАсинхронныхВызовов);
			
			СформироватьОтчетАллюрСервер(СтруктураОФ);
			
			Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
				Для каждого РезультатПрохожденияТестовСценария Из МассивРезультатПрохожденияТестовСценария Цикл
					Если Не РезультатПрохожденияТестовСценария.Свойство(""МассивСкриншотов"") Тогда
						Продолжить;
					КонецЕсли;	 
					
					Для каждого СтруктураСкриншот Из РезультатПрохожденияТестовСценария.МассивСкриншотов Цикл
						ВременныйФайл = ПолучитьИмяВременногоФайла(""png"");
						СтруктураСкриншот.ДвоичныеДанные.Записать(ВременныйФайл);
						КопироватьФайлКомандаСистемы(ВременныйФайл, ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure)) + СтруктураСкриншот.ИмяФайла);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;	 
			
			Если СтруктураОФ.Свойство(""МассивXMLОтчетаAllure"") Тогда 
				МассивXMLОтчетаAllure = СтруктураОФ.МассивXMLОтчетаAllure;
				Для каждого Элем Из МассивXMLОтчетаAllure Цикл
					ИмяФайлаXML           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure)) + Элем.РеальноеИмяФайла;
					ФайлXMLДвоичныеДанные = Элем.ФайлXMLДвоичныеДанные;
					ФайлXMLДвоичныеДанные.Записать(ИмяФайлаXML);
					
					СделатьСообщение(""Файл отчета Allure-report ("" + ИмяФайлаXML + "") записан."");
				КонецЦикла;
			КонецЕсли;
		КонецЕсли; 	
		
		Если Объект.ДелатьОтчетВФорматеxUnit Тогда
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"",МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"",МассивИДСтрокиДерева);
			
			ДвоичныеДанные = Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/vendor/allure-framework/allure.xsd"");
			СтруктураОФ.Вставить(""СхемаAllure"",ДвоичныеДанные);
			СтруктураОФ.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"",ЕстьПоддержкаАсинхронныхВызовов);
						
			СформироватьОтчетxUnitСервер(СтруктураОФ);
			
			Если СтруктураОФ.Свойство(""МассивXMLОтчетаxUnit"") Тогда 
				МассивXMLОтчетUnit = СтруктураОФ.МассивXMLОтчетаxUnit;
				Для каждого Элем Из МассивXMLОтчетUnit Цикл
					ИмяФайлаXML           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputxUnit)) + Элем.РеальноеИмяФайла;
					ФайлXMLДвоичныеДанные = Элем.ФайлXMLДвоичныеДанные;
					ФайлXMLДвоичныеДанные.Записать(ИмяФайлаXML);
					
					СделатьСообщение(""Файл отчета xUnit-report ("" + ИмяФайлаXML + "") записан."");
				КонецЦикла;
			КонецЕсли;
		КонецЕсли; 
		
		Если Объект.ДелатьОтчетВоВнутреннемФормате Тогда
			//Сформируем отчет для показа пользователю. 
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"",МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"",МассивИДСтрокиДерева);
			
			Если НЕ Объект.ЗапускИзКоманднойСтроки Тогда
				ТабличныйДокумент = СформироватьОтчетВоВнутреннемФормате(СтруктураОФ);
				ТабличныйДокумент.Показать();
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если Объект.ВыгружатьСтатусВыполненияСценариевВФайл Тогда
			ВыгрузитьСтатусВыполненияСценариевВФайл(СтатусЗапускаСценариев,ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев));
		КонецЕсли;	 
		
		Если Объект.ЗакрытьTestClientПослеЗапускаСценариев Тогда
			ЗакрытьTestClientЕслиОнПодключен();
		КонецЕсли;	 
		
		
		Если Объект.НадоЗавершитьРаботуСистемыПослеВыполненияВсехСценариев Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;	 
		
		Возврат;
	КонецЕсли;	 
	
	ПодготовитьСозданиеИнструкцииHTML();
	ПодготовитьСозданиеИнструкцииMarkdown();
	
	Сообщить("" "");
	СделатьСообщение(""Работаю по сценарию: "" + МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	
	Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
		ЗаписатьЛогВЖРПередВыполнениемСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	КонецЕсли;	 
	
	
	ИДСтроки = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	
	РезультатПрохожденияТестовСценария = Новый Структура;
	РезультатПрохожденияТестовСценария.Вставить(""ИДСтроки"",ИДСтроки);
	РезультатПрохожденияТестовСценария.Вставить(""ВремяНачала"",ТекущаяУниверсальнаяДатаВМиллисекундах());
	РезультатПрохожденияТестовШагов = Новый Массив;
	РезультатПрохожденияТестовСценария.Вставить(""РезультатПрохожденияТестовШагов"",РезультатПрохожденияТестовШагов);
	
	ДобавитьРезультатПрохожденияТестовСценарияВМассив(РезультатПрохожденияТестовСценария,ИДСтроки);
	
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	СтрокаСценария = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
	Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаСценария.ПолучитьИдентификатор();
	
	
	ОбработкаСвязаннаяСИсполняемойФичей = Неопределено;
	Если СтрокаСценария.ФичаИмеетСвоюEPF Тогда
		СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаСценария);
		ОбработкаСвязаннаяСИсполняемойФичей = ПолучитьОбработкаСвязаннаяСИсполняемойФичей(СтрокаФичи.ПолныйПуть);
	КонецЕсли; 
	
	
	ДобавитьВЛогИнструкцииHTMLНачалоСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве]);
	ДобавитьВЛогИнструкцииMarkdownНачалоСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве]);
	
	
	ТекИД_ШагаВМассиве             = -1;
	ТекИД_ВыполненногоШагаВМассиве = -1;
	ВсёЕщёИдётВыполнениеШагов      = 0;
	
	
	БылаОшибка = Ложь;
	ОписаниеОшибки = """";
	ВызватьМетодСценарияЕслиОнЕсть(СтрокаСценария, ""ПередНачаломСценария"",,БылаОшибка,ОписаниеОшибки);
	Если БылаОшибка Тогда
		СтатусЗапускаСценариев = Ложь;		
		
		ИДСтрокиСценария      = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
		СтрокаСценария        = МассивСтрокДереваДанныеФормы[ИДСтрокиСценария];
		СтрокаСценария.Статус = ""Failed"";
		
		ДействияПослеЗавершенияСценария(СтрокаСценария);
		РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"",ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"",ОписаниеОшибки);
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		
		Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(""ПередНачаломСценария"",СтрокаСценария,РезультатПрохожденияТестовСценария);
		Иначе	
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;	 
		Возврат;
	КонецЕсли;	 
	
	ПерейтиКВыполнениюСледующегоШага();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииHTMLНачалоСценария(СтруктураСценария)
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;  
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML,КодировкаТекста.UTF8,,Истина);
	
	ТД.ЗаписатьСтроку(""НачалоСценария"");
	ТД.ЗаписатьСтроку(""ИмяСценария="" + СтруктураСценария.Имя);
	ТД.ЗаписатьСтроку(""ИмяФичи="" + СтруктураСценария.ИмяФичи);
	ТД.Закрыть();

	
//	ТД.Записать(ИмяФайлаЛогаИнструкцииHTML,КодировкаТекста.UTF8);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииMarkdownНачалоСценария(СтруктураСценария)
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;  
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8,,Истина);
	
	ТД.ЗаписатьСтроку(""НачалоСценария"");
	ТД.ЗаписатьСтроку(""ИмяСценария="" + СтруктураСценария.Имя);
	ТД.ЗаписатьСтроку(""ИмяФичи="" + СтруктураСценария.ИмяФичи);
	ТД.Закрыть();
	//ТД.Записать(ИмяФайлаЛогаИнструкцииMarkdown,КодировкаТекста.UTF8);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРезультатПрохожденияТестовСценарияВМассив(РезультатПрохожденияТестовСценария,ИДСтроки)
	ИД = МассивИДСтрокиДерева.Найти(ИДСтроки);
	Если ИД = Неопределено Тогда
		МассивИДСтрокиДерева.Добавить(ИДСтроки);
		МассивРезультатПрохожденияТестовСценария.Добавить(РезультатПрохожденияТестовСценария);
	Иначе
		МассивРезультатПрохожденияТестовСценария[ИД] = РезультатПрохожденияТестовСценария;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ДеревоФормы)
	Для каждого ЭлементДерева Из ДеревоФормы Цикл
		ИДСтроки = ЭлементДерева.ИДСтроки;
		МассивСтрокДереваДанныеФормы[ИДСтроки] = ЭлементДерева;
		
		ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ЭлементДерева.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСтрокиДереваДанныеФормы()
	ДеревоФормы = Объект.ДеревоТестов.ПолучитьЭлементы();
	ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ДеревоФормы);
КонецПроцедуры


&НаСервере
Функция ОпределитьИдСценарияПоСтрокеШага(ИдСтроки)
	Если ИдСтроки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;	 
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	
	СтрокаДерева = Дерево.Строки.Найти(ИдСтроки,""ИдСтроки"",Истина);
	Если СтрокаДерева = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;	 
	
	Возврат СтрокаДерева.Родитель.ИДСтроки;
КонецФункции	

&НаКлиенте
Процедура ВыполнитьСценарии(ТекСценарий = Неопределено) Экспорт
	ОчиститьСообщения();
	БылаОшибкаСкриптовСборкиВидео = Ложь;
	Объект.ОстановитьВыполнениеШагов = Ложь;
	Объект.ИдетЗаписьВидео           = Ложь;
	
	СтатусЗапускаСценариев    = Истина;
	ОчиститьПоляВДеревеДляПостроенияОтчетовСервер();
	
	МассивИДСтрокиДерева                     = Новый Массив;
	МассивРезультатПрохожденияТестовСценария = Новый Массив;
	
	МассивСценариевДляВыполнения = Новый Массив;
	МассивСтрокДереваДанныеФормы = Новый Массив;
	
	ЕстьСохранённыйКонтекст = Ложь;
	Если (ТекСценарий = Неопределено) и (Объект.РежимВыполненияСценарияСВыбранногоШага) Тогда
		ТекСценарий          = ОпределитьИдСценарияПоСтрокеШага(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
		СохраненнаяСтруктура = ПолучитьСостоянияКонтекстовПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
		Если СохраненнаяСтруктура <> Неопределено Тогда //значит есть сохранённый контекст
			ЕстьСохранённыйКонтекст = Истина;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""РежимВыполненияСценарияСВыбранногоШага"",Объект.РежимВыполненияСценарияСВыбранногоШага и ЕстьСохранённыйКонтекст);
	Если Объект.РежимВыполненияСценарияСВыбранногоШага Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарий"",СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
	КонецЕсли;	 
	ЗаполнитьМассивСценариевДляВыполненияСервер(МассивСценариевДляВыполнения,МассивСтрокДереваДанныеФормы,ТекСценарий,МассивИменКонтекстовОбработок,ДопПараметры);
	
	ЗапомнитьСтрокиДереваДанныеФормы();
	
	ТекущаяФичаИнструкцииHTML     = """";
	ТекущаяФичаИнструкцииMarkdown = """";
	Если НЕ ПроверитьНаличиеИнструментаДляСозданияСкриншотов() Тогда
		Возврат;
	КонецЕсли;  
	
	Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Если Не ЗначениеЗаполнено(Объект.КомандаСделатьСкриншот) Тогда
			СделатьСообщение(""Не указана команада для выполнения скриншотов! Например <""""C:\Program Files (x86)\IrfanView\i_view32.exe"""" /capture=1 /convert=>"");
			Возврат;
		КонецЕсли;	 
		ОчиститьСодержимоеКаталога(Объект.КаталогOutputСкриншоты);
	КонецЕсли;	 
	
	
	Если Объект.СоздаватьИнструкциюВидео Тогда
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияВидео),""*.mp4"");
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ЗаписьВидеоКаталогДляВременныхФайлов));
		ВыполнитьПодготовкуКЗаписиВидео();
	КонецЕсли;	 
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML));
	КонецЕсли;	 
	
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияMarkdown));
	КонецЕсли;	 
	
	Если ВыполнятьСценарииАсинхронно Тогда
		ТекИД_СценарияВМассиве = -1;
		ПерейтиКВыполнениюСледующегоСценария();
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСценарииФорма(Команда)
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;
	СделатьПараметрыКорректными();
	
	ВыполнитьСценарии();
	
КонецПроцедуры

&НаКлиенте
Функция УбратьВсеЗапрещенныеСимволыИзИмениФайла(Стр)
	Стр = СтрЗаменить(Стр,""<"","""");
	Стр = СтрЗаменить(Стр,"">"","""");
	Стр = СтрЗаменить(Стр,"""""""","""");
	Стр = СтрЗаменить(Стр,""|"","""");
	Стр = СтрЗаменить(Стр,""*"","""");
	Стр = СтрЗаменить(Стр,""\"","""");
	Стр = СтрЗаменить(Стр,""/"","""");
	Стр = СтрЗаменить(Стр,"":"","""");
	Стр = СтрЗаменить(Стр,""?"","""");
КонецФункции	


&НаКлиенте
Процедура СоздатьФайлHTMLИнструкции()
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;	
	
	СтрокаОкончанияЗаголовка = 0;
	ЗаголовокФичи            = ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайлаЛогаИнструкцииHTML,СтрокаОкончанияЗаголовка);
	
	ТД = Новый ЧтениеТекста(ИмяФайлаЛогаИнструкцииHTML,КодировкаТекста.UTF8);
		
	МассивСценариев = Новый Массив;
	МассивШагов     = Неопределено;
	
	Ном = 0;
	//КолСтрок = ТД.КоличествоСтрок();
	Стр = ТД.ПрочитатьСтроку();
	Пока Стр <> Неопределено Цикл
		
		Ном = Ном + 1;
		Если Ном <= СтрокаОкончанияЗаголовка Тогда
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;			
		КонецЕсли;
		
		Если Стр = ""НачалоСценария"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов  = Новый Массив;
			ТекСтруктура.Вставить(""МассивШагов"",МассивШагов);
			МассивСценариев.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		ИначеЕсли Стр = ""НачалоШага"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;	 
		
		Поз = Найти(Стр,""="");
		Если Поз = 0 Тогда
			ВызватьИсключение ""Странный параметр в логе инструкции HTML: "" + Стр;
		КонецЕсли;	 
		
		ИмяПараметра      = Лев(Стр,Поз-1);
		ЗначениеПараметра = Сред(Стр,Поз+1);
		
		ТекСтруктура.Вставить(ИмяПараметра,ЗначениеПараметра);
		Стр = ТД.ПрочитатьСтроку();
		
	КонецЦикла; 
	ТД.Закрыть();
	
	КаталогОбъектов = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	
	ИмяФайлаДляЗаписи = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML)) + ""Instr_"" + ТекущаяФичаИнструкцииHTML + "".HTML"";
	
	Страница = Новый ЗаписьТекста(ИмяФайлаДляЗаписи,КодировкаТекста.UTF8);
	Страница.ЗаписатьСтроку(""<html>"");
	Страница.ЗаписатьСтроку(""<body>"");	
	Страница.ЗаписатьСтроку(""<h3><p  style=""""font-size:40px"""">"");
	Для каждого Стр Из ЗаголовокФичи Цикл
		Страница.ЗаписатьСтроку(""<br>"" + Стр);
	КонецЦикла;
	Страница.ЗаписатьСтроку(""</p></h3>"");
	
	ИДСкриншота  = 0;
	Для каждого Сценарий Из МассивСценариев Цикл
		Страница.ЗаписатьСтроку(""<h1><p align=""""center"""" style=""""font-size:35px"""">"" + Сценарий.ИмяСценария + ""</p></h1>"");		
		ИмяФичи = Сценарий.ИмяФичи;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяФичи);
		ИмяФичи = СтрЗаменить(ИмяФичи,"" "",""_"");
		ИмяСценария = СтрЗаменить(УбратьВсеЗапрещенныеСимволыИзИмениФайла(Сценарий.ИмяСценария),"" "",""_"");
		
		КаталогФичи = ДополнитьСлешВПуть(КаталогОбъектов) + ИмяФичи;
		ФайлКаталогФичи = Новый Файл(КаталогФичи);
		Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталогФичи.ПолноеИмя) Тогда
			СоздатьКаталогКомандаСистемы(КаталогФичи);
		КонецЕсли;  
		
		МассивШагов = Сценарий.МассивШагов;
		НомШага = 0;
		Для каждого Шаг Из МассивШагов Цикл
			ИДСкриншота = ИДСкриншота+1;
			НомШага = НомШага + 1;
			Страница.ЗаписатьСтроку("""");
			
			СтрокаШага = СтрЗаменить(Шаг.ИмяШага,""\n"",Символы.ПС);
			МассивСтрок = РазложитьСтрокуВМассивПодстрок(СтрокаШага,Символы.ПС);
			Для Ккк = 0 По МассивСтрок.Количество()-1 Цикл
				Стр = МассивСтрок[Ккк];
				Если Ккк = 0 Тогда
					Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px""""><b>"" + ПолучитьФорматированныйНомер(НомШага,3) + ""</b>. "" + Стр + ""</p>"");
				Иначе
					ЕстьВертЧерта = Ложь;
					Если Найти(Стр,""|"") > 0 Тогда
						ЕстьВертЧерта = Истина;
					КонецЕсли;	 
					
					Если ЕстьВертЧерта Тогда
						Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px""""><pre><font size=""""5"""" face=""""Lucida Console"""">"" + Стр + ""</font></pre></p>"");
					Иначе	
						Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px"""">"" + Стр + ""</p>"");
					КонецЕсли;	 
				КонецЕсли;	 
			КонецЦикла;
			ФайлСкриншота = Новый Файл(Шаг.Скриншот);
			НовоеИмяФайлаСкриншота = СтрЗаменить(ИмяФичи + ""_"" + ИДСкриншота + ""_"" + Лев(ИмяСценария,30) + ""_"" + ПолучитьФорматированныйНомер(НомШага,3) + ФайлСкриншота.Расширение,"" "",""_"");
			ИмяФайлаСкриншотаВКаталогеФичи = ФайлСкриншота.Путь + СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота,"" "",""_"");
			ФайлСкриншота = Неопределено;
			
			ПроцедураПереместитьФайл(Шаг.Скриншот,ИмяФайлаСкриншотаВКаталогеФичи);
			
			СтрСкриншотаДляHTML = СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота,"" "",""_"");
			Страница.ЗаписатьСтроку(""<img src="" + СтрЗаменить(СтрСкриншотаДляHTML,""\"",""/"") + "">"");
		КонецЦикла;
	КонецЦикла;
	
	Страница.ЗаписатьСтроку(""</body>"");
	Страница.ЗаписатьСтроку(""/<html>"");
	
	Сообщить(""Записываю "" + ИмяФайлаДляЗаписи);
	Страница.Закрыть();
 
	УдалитьФайлыКомандаСистемы(ИмяФайлаЛогаИнструкцииHTML);

КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайла,СтрокаОкончанияЗаголовка)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	
	ЗаголовокФичи = Новый Массив;
	Ном = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	
		
		Ном = Ном + 1;
		
		Если Стр = ""--окончание заголовка--"" Тогда
			СтрокаОкончанияЗаголовка = Ном;
			Прервать;
		КонецЕсли;	 
		
		ЗаголовокФичи.Добавить(Стр);
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат ЗаголовокФичи;
КонецФункции	
 

&НаКлиенте
Процедура СоздатьФайлMarkdownИнструкции()
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;	
	
	СтрокаОкончанияЗаголовка = 0;
	ЗаголовокФичи            = ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайлаЛогаИнструкцииMarkdown,СтрокаОкончанияЗаголовка);
	
	ТД = Новый ЧтениеТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8);

	МассивСценариев = Новый Массив;
	МассивШагов     = Неопределено;
	Ном = 0;
	//КолСтрок = ТД.КоличествоСтрок();
	Стр = ТД.ПрочитатьСтроку();	
	Пока Стр <> Неопределено Цикл
		Ном = Ном + 1;
		Если Ном <= СтрокаОкончанияЗаголовка Тогда
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;			
		КонецЕсли; 
		
		
		Если Стр = ""НачалоСценария"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов  = Новый Массив;
			
			ТекСтруктура.Вставить(""МассивШагов"",МассивШагов);
			
			МассивСценариев.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		ИначеЕсли Стр = ""НачалоШага"" Тогда
			ТекСтруктура = Новый Структура;
			
			МассивШагов.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;	 
		
		Поз = Найти(Стр,""="");
		Если Поз = 0 Тогда
			ВызватьИсключение ""Странный параметр в логе инструкции Markdown: "" + Стр;
		КонецЕсли;	 
		
		ИмяПараметра      = Лев(Стр,Поз-1);
		ЗначениеПараметра = Сред(Стр,Поз+1);
		
		ТекСтруктура.Вставить(ИмяПараметра,ЗначениеПараметра);
		Стр = ТД.ПрочитатьСтроку();
			
	КонецЦикла; 
	ТД.Закрыть();
	
	КаталогОбъектов = Объект.КаталогOutputИнструкцияMarkdown;
	
	
	ИмяФайлаДляЗаписи = Объект.КаталогOutputИнструкцияMarkdown + ""/"" + ТекущаяФичаИнструкцииMarkdown + "".MD"";
	ЗТ = Новый ЗаписьТекста(ИмяФайлаДляЗаписи,""Windows-1251"",,Ложь); 
	ЗТ.Закрыть();//убираю BOM, специально для ATOM
	
	Страница = Новый ЗаписьТекста(ИмяФайлаДляЗаписи,""UTF-8"",,Истина); 
	//записываю заголовок
	Для каждого Стр Из ЗаголовокФичи Цикл
		Стр = СокрЛП(Стр);
		Если Найти(Стр,""Функционал:"") > 0 Тогда
			Стр = СтрЗаменить(Стр,""Функционал:"",""**Функционал:**"");
		ИначеЕсли НРег(Лев(Стр,3)) = ""как"" Тогда
			Стр =  ""> **Как**"" + Сред(Стр,4);
			
		ИначеЕсли НРег(Лев(Стр,4)) = ""хочу"" Тогда
			Стр =  ""> **Хочу**"" + Сред(Стр,5);
		ИначеЕсли НРег(Лев(Стр,6)) = ""я хочу"" Тогда
			Стр =  ""> **Я хочу**"" + Сред(Стр,7);
		ИначеЕсли НРег(Лев(Стр,5)) = ""чтобы"" Тогда
			Стр =  ""> **Чтобы**"" + Сред(Стр,6);
		Иначе
			Стр = "" > "" + Стр;
		КонецЕсли;	 
		
		Страница.ЗаписатьСтроку(Стр);
		Страница.ЗаписатьСтроку("""");
	КонецЦикла;
	
	ИДСкриншота  = 0;
	ИДСценария   = 0;
	Для каждого Сценарий Из МассивСценариев Цикл
		ИДСценария = ИДСценария + 1;
		Если ИДСценария > 1 Тогда
			Страница.ЗаписатьСтроку("""");
		КонецЕсли;	 
		Страница.ЗаписатьСтроку("""");
		Страница.ЗаписатьСтроку(""**Сценарий:** "" + Сценарий.ИмяСценария);
		
		
		
		ИмяФичи = Сценарий.ИмяФичи;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяФичи);
		ИмяФичи = СтрЗаменить(ИмяФичи,"" "",""_"");
		
		ИмяСценария = Сценарий.ИмяСценария;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяСценария);
		ИмяСценария = СтрЗаменить(ИмяСценария,"" "",""_"");
		
		КаталогФичи = ДополнитьСлешВПуть(КаталогОбъектов) + ИмяФичи;
		
		ФайлКаталогФичи = Новый Файл(КаталогФичи);
		Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталогФичи.ПолноеИмя) Тогда
		//Если НЕ ФайлКаталогФичи.Существует() Тогда
			СоздатьКаталогКомандаСистемы(КаталогФичи);
		КонецЕсли;  
		
		МассивШагов = Сценарий.МассивШагов;
		НомШага = 0;
		Для каждого Шаг Из МассивШагов Цикл
			ИДСкриншота = ИДСкриншота+1;
			НомШага = НомШага + 1;
			Страница.ЗаписатьСтроку("""");
			
			СтрокаШага = СтрЗаменить(Шаг.ИмяШага,""\n"",Символы.ПС);
			МассивСтрок = РазложитьСтрокуВМассивПодстрок(СтрокаШага,Символы.ПС);
			Для Ккк = 0 По МассивСтрок.Количество()-1 Цикл
				Стр = МассивСтрок[Ккк];
				Если Ккк = 0 Тогда
					Страница.ЗаписатьСтроку(""	"" + ПолучитьФорматированныйНомер(НомШага,3) + "". "" + Стр);
				Иначе
					ЕстьВертЧерта = Ложь;
					Если Найти(Стр,""|"") > 0 Тогда
						ЕстьВертЧерта = Истина;
					КонецЕсли;	 
					
					
					Если ЕстьВертЧерта Тогда
						Страница.ЗаписатьСтроку(""	"" + Стр);
					Иначе	
						Страница.ЗаписатьСтроку(""	"" + Стр);
					КонецЕсли;	 
				КонецЕсли;	 
			КонецЦикла;
			ФайлСкриншота = Новый Файл(Шаг.Скриншот);
			НовоеИмяФайлаСкриншота = СтрЗаменить(ИмяФичи + ""_"" + ИДСкриншота + ""_"" + Лев(ИмяСценария,30) + ""_"" + ПолучитьФорматированныйНомер(НомШага,3) + ФайлСкриншота.Расширение,"" "",""_"");
			ИмяФайлаСкриншотаВКаталогеФичи = ФайлСкриншота.Путь + СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота,"" "",""_"");
			ФайлСкриншота = Неопределено;
			
			ПроцедураПереместитьФайл(Шаг.Скриншот,ИмяФайлаСкриншотаВКаталогеФичи);
			
			СтрСкриншотаДляMarkdown = СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота,"" "",""_"");
			Страница.ЗаписатьСтроку(""<img src="" + СтрЗаменить(СтрСкриншотаДляMarkdown,""\"",""/"") + "">"");
		КонецЦикла;
	КонецЦикла;
	
	Сообщить(""Записываю "" + ИмяФайлаДляЗаписи);
	Страница.Закрыть();

	УдалитьФайлыКомандаСистемы(ИмяФайлаЛогаИнструкцииMarkdown);

КонецПроцедуры

&НаКлиенте
Процедура ПроцедураПереместитьФайл(Знач Стр1,Знач Стр2)
	ПереместитьФайлКомандаСистемы(Стр1,Стр2);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФорматированныйНомер(НомШага,КолСимволов)
	Стр = Строка(НомШага);
	Стр = СтрЗаменить(Стр,Символы.НПП,"""");
	
	Пока СтрДлина(Стр) < КолСимволов Цикл
		Стр = ""0"" + Стр;
	КонецЦикла; 
	
	Возврат Стр; 
КонецФункции	

//портирован блок ассертов из проекта xUnitFor1C (https://github.com/xDrivenDevelopment/xUnitFor1C)
//был взят релиз 3.0.0.3
//{ МЕТОДЫ ДЛЯ ПРОВЕРКИ ЗНАЧЕНИЙ (assertions). 

&НаКлиенте
Функция ФорматДСО(ДопСообщениеОшибки)
	Если ДопСообщениеОшибки = """" Тогда
		Возврат """";
	КонецЕсли;
	
	Возврат Символы.ПС + ДопСообщениеОшибки;
КонецФункции

&НаКлиенте
Процедура ВызватьОшибкуПроверки(СообщениеОшибки)
	
	Префикс = ""["" + СтатусыРезультатаТестирования.ОшибкаПроверки + ""]"";
	ВызватьИсключение Префикс + "" "" + СообщениеОшибки;
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(_Истина, ДопСообщениеОшибки = """") Экспорт
	Если Не _Истина Тогда
		СообщениеОшибки = ""Переданный параметр (""+Формат(_Истина, ""БЛ=ложь; БИ=истина"")+"") не является Истиной, а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИстину(_Истина, ДопСообщениеОшибки = """") Экспорт
	Проверить(_Истина, ДопСообщениеОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЛожь(_Ложь, ДопСообщениеОшибки = """") Экспорт
	Если _Ложь Тогда
		СообщениеОшибки = ""Переданный параметр (""+Формат(_Ложь, ""БЛ=ложь; БИ=истина"")+"") не является Ложью, а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДату(_Дата, _Период, ДопСообщениеОшибки = """") Экспорт
	Если _Дата < _Период.ДатаНачала или _Дата > _Период.ДатаОкончания Тогда
		представление = ПредставлениеПериода(_Период.ДатаНачала, _Период.ДатаОкончания, ""ФП = Истина"");
		СообщениеОшибки = ""Переданный параметр (""+Формат(_Дата, ""ДФ='dd.MM.yyyy HH:mm:ss'"")+"") не входит в период ""+представление+"", а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенствоДатСТочностью2Секунды(_Дата, _Дата2, ДопСообщениеОшибки = """") Экспорт
	Если _Дата < _Дата2-2 или _Дата > _Дата2+2 Тогда
		СообщениеОшибки = ""Переданная дата (""+Формат(_Дата, ""ДФ='dd.MM.yyyy HH:mm:ss'"")+"") не равна дате (""+Формат(_Дата2, ""ДФ='dd.MM.yyyy HH:mm:ss'"")+"") с точностью до 2-х секунд, а хотели, чтобы они равнялись."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенство(_1, _2, ДопСообщениеОшибки = """") Экспорт
	Если _1 <> _2 Тогда
		СообщениеОшибки = ""Сравниваемые значения (""+_1+""; ""+_2+"") не равны, а хотели, чтобы были равны."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеРавенство(_1, _2, ДопСообщениеОшибки = """") Экспорт
	Если _1 = _2 Тогда
		СообщениеОшибки = ""Сравниваемые значения (""+_1+""; ""+_2+"") равны, а хотели, чтобы были не равны."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБольше(_Больше, _Меньше, ДопСообщениеОшибки = """") Экспорт
	Если _Больше <= _Меньше Тогда
		СообщениеОшибки = ""Первый параметр (""+_Больше+"") меньше или равен второму (""+_Меньше+"") а хотели, чтобы был больше."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБольшеИлиРавно(_Больше, _Меньше, ДопСообщениеОшибки = """") Экспорт
	Если _Больше < _Меньше Тогда
		СообщениеОшибки = ""Первый параметр (""+_Больше+"") меньше второго (""+_Меньше+"") а хотели, чтобы был больше или равен."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМеньше(проверяемоеЗначение1, проверяемоеЗначение2, СообщениеОбОшибке = """") Экспорт
	Если проверяемоеЗначение1 >= проверяемоеЗначение2 Тогда
		СообщениеОшибки = ""Значение <""+проверяемоеЗначение1+""> больше или равно, чем <""+проверяемоеЗначение2+"">, а ожидалось меньше""+
		ФорматДСО(СообщениеОбОшибке);
		ВызватьОшибкуПроверки(СообщениеОшибки)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМеньшеИлиРавно(проверяемоеЗначение1, проверяемоеЗначение2, СообщениеОбОшибке = """") Экспорт
	Если проверяемоеЗначение1 > проверяемоеЗначение2 Тогда
		СообщениеОшибки = ""Значение <""+проверяемоеЗначение1+""> больше, чем <""+проверяемоеЗначение2+"">, а ожидалось меньше или равно""+
		ФорматДСО(СообщениеОбОшибке);
		ВызватьОшибкуПроверки(СообщениеОшибки)
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыполнилось(Знач СтрокаАлгоритм, ПараметрыИлиДопСообщениеОшибки = Неопределено, Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры;
	
	Если ТипЗнч(ПараметрыИлиДопСообщениеОшибки) = Тип(""Строка"") Тогда
		ДопСообщениеОшибки = ПараметрыИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиДопСообщениеОшибки;
	КонецЕсли;
	Попытка
		Выполнить(СтрокаАлгоритм);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОшибки = ""Хотели, чтобы алгоритм """"""+СтрокаАлгоритм+"""""" выполнился, а он упал с ошибкой """"""+ПолученноеОписаниеОшибки+""""""."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМетодВыполнился(Объект, Знач ИмяМетода, ПараметрыИлиДопСообщениеОшибки = Неопределено, Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры;
	
	Если ТипЗнч(ПараметрыИлиДопСообщениеОшибки) = Тип(""Строка"") Тогда
		ДопСообщениеОшибки = ПараметрыИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиДопСообщениеОшибки;
		Если Параметры <> Неопределено Тогда
			ТипПараметра = ТипЗнч(Параметры);
			Если ТипПараметра <> Тип(""Массив"") Тогда
				ВызватьИсключение (""Ожидали, что вторым параметром будет передан массив параметров для метода <""+ИмяМетода+"">, а получили другой объект с типом <""+ТипПараметра+"">"");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыСтрока = ПараметрыСтрокой(Параметры);
	
	СтрокаВыполнения = ""Объект."" + ИмяМетода + ""("" + ПараметрыСтрока + "")"";
	
	Попытка
		Выполнить(СтрокаВыполнения);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОшибки = ""Хотели, чтобы код """"""+СтрокаВыполнения+"""""" выполнился, а он упал с ошибкой """"""+ПолученноеОписаниеОшибки+""""""."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыСтрокой(Параметры, ИмяПеременной = ""Параметры"")
	
	ПараметрыСтрока = """";
	Если Параметры <> Неопределено Тогда
		Если ТипЗнч(Параметры) = Тип(""Массив"") Тогда
			Для Индекс = 0 По Параметры.ВГраница() Цикл 
				ПараметрыСтрока = ПараметрыСтрока + "", "" + ИмяПеременной + ""["" + Формат(Индекс, ""ЧН=0; ЧГ=0"") + ""]"";
			КонецЦикла;
			ПараметрыСтрока = Сред(ПараметрыСтрока, 3);
		Иначе
			ПараметрыСтрока = ИмяПеременной;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыСтрока;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьНеВыполнилось(Знач СтрокаАлгоритм, ПараметрыИлиОжидаемоеОписаниеОшибки, Знач ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки = """", Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры, ОжидаемоеОписаниеОшибки; 
	Если ТипЗнч(ПараметрыИлиОжидаемоеОписаниеОшибки) = Тип(""Строка"") Тогда
		ОжидаемоеОписаниеОшибки = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ДопСообщениеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ОжидаемоеОписаниеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	КонецЕсли;
	Попытка
		Выполнить(СтрокаАлгоритм);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Найти(ПолученноеОписаниеОшибки, ОжидаемоеОписаниеОшибки) = 0 Тогда
			ВызватьОшибкуПроверки(""Хотели, чтобы алгоритм """"""+СтрокаАлгоритм+"""""" упал с сообщением об ошибке """"""+ОжидаемоеОписаниеОшибки+"""""", а он упал с сообщением """"""+ПолученноеОписаниеОшибки+""""""."" + ФорматДСО(ДопСообщениеОшибки));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
	ВызватьОшибкуПроверки(""Хотели, чтобы алгоритм """"""+СтрокаАлгоритм+"""""" упал, а он выполнился"" + ФорматДСО(ДопСообщениеОшибки));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМетодНеВыполнился(Объект, ИмяМетода, ПараметрыИлиОжидаемоеОписаниеОшибки, Знач ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки = """", Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры, ОжидаемоеОписаниеОшибки; 
	
	Если ТипЗнч(ПараметрыИлиОжидаемоеОписаниеОшибки) = Тип(""Строка"") Тогда
		ОжидаемоеОписаниеОшибки = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ДопСообщениеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиОжидаемоеОписаниеОшибки;
		Если Параметры <> Неопределено Тогда
			ТипПараметра = ТипЗнч(Параметры);
			Если ТипПараметра <> Тип(""Массив"") Тогда
				ВызватьИсключение (""Ожидали, что третьим параметром будет передан массив параметров для метода <""+ИмяМетода+"">, а получили другой объект с типом <""+ТипПараметра+"">"");
			КонецЕсли;
		КонецЕсли;
		ОжидаемоеОписаниеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	КонецЕсли;
	
	ПараметрыСтрока = ПараметрыСтрокой(Параметры);
	
	СтрокаВыполнения = ""Объект."" + ИмяМетода + ""("" + ПараметрыСтрока + "")"";
	
	Попытка
		Выполнить(СтрокаВыполнения);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Найти(ПолученноеОписаниеОшибки, ОжидаемоеОписаниеОшибки) = 0 Тогда
			ВызватьОшибкуПроверки(""Хотели, чтобы код """"""+СтрокаВыполнения+"""""" упал с сообщением об ошибке """"""+ОжидаемоеОписаниеОшибки+"""""", а он упал с сообщением """"""+ПолученноеОписаниеОшибки+""""""."" + ФорматДСО(ДопСообщениеОшибки));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
	ВызватьОшибкуПроверки(""Хотели, чтобы код """"""+СтрокаВыполнения+"""""" упал, а он выполнился"" + ФорматДСО(ДопСообщениеОшибки));
	
КонецПроцедуры

// проверка идет через ЗначениеЗаполнено, но мутабельные значение всегда считаем заполненными
&НаКлиенте
Процедура ПроверитьЗаполненность(ПроверяемоеЗначение, ДопСообщениеОшибки = """") Экспорт
	Попытка
		фЗаполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
	Исключение
		Возврат;
	КонецПопытки;
	Если НЕ фЗаполнено Тогда
		ВызватьОшибкуПроверки(""Значение (""+ПроверяемоеЗначение+"") не заполнено, а ожидалась заполненность"" + ФорматДСО(ДопСообщениеОшибки));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеЗаполненность(ПроверяемоеЗначение, ДопСообщениеОшибки = """") Экспорт
	СообщениеОшибки = ""Значение (""+ПроверяемоеЗначение+"") заполнено, а ожидалась незаполненность"" + ФорматДСО(ДопСообщениеОшибки);
	Попытка
		фЗаполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
	Исключение
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	Если фЗаполнено Тогда
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТип(значение, ТипИлиИмяТипа, ДопСообщениеОшибки = """") Экспорт
	Если ТипЗнч(ТипИлиИмяТипа) = Тип(""Строка"") Тогда
		искомыйТип = Тип(ТипИлиИмяТипа);
	ИначеЕсли ТипЗнч(ТипИлиИмяТипа) = Тип(""Тип"") Тогда
		искомыйТип = ТипИлиИмяТипа;
	Иначе
		ВызватьИсключение (""ПроверитьТип: Тип значения параметра ТипИлиИмяТипа должен быть <Тип> или <Строка>, а получили <""+ ТипЗнч(ТипИлиИмяТипа) + "">"" + ФорматДСО(ДопСообщениеОшибки));
	КонецЕсли;
	Если ТипЗнч(значение) <> искомыйТип Тогда
		ВызватьОшибкуПроверки(""Типом значения <""+значение+""> является <""+ТипЗнч(значение)+"">, а ожидался тип <""+ТипИлиИмяТипа+"">.""+ФорматДСО(ДопСообщениеОшибки));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВхождение(строка, подстрокаПоиска, ДопСообщениеОшибки = """") Экспорт
	Если Найти(строка, подстрокаПоиска) = 0 Тогда
		ПредставлениеСтроки = ""<""+строка+"">"";
		Если СтрДлина(строка) > 20 Тогда
			ПредставлениеСтроки = ПредставлениеСтроки + Символы.ПС;
		КонецЕсли;
		ПредставлениеПодСтроки = ""<""+подстрокаПоиска+"">"";
		Если СтрДлина(подстрокаПоиска) > 20 Тогда
			ПредставлениеПодСтроки = ПредставлениеПодСтроки + Символы.ПС;
		КонецЕсли;
		СообщениеОшибки = ""Искали в ""+ПредставлениеСтроки+"" подстроку ""+ПредставлениеПодСтроки+"", но не нашли."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

//Коллекция - Массив, Структура, Соответствие, ФиксированныйМассив, ФиксированнаяСтруктура, ФиксированноеСоответствие, СписокЗначений
&НаКлиенте
Процедура ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ДопСообщениеОшибки = """") Экспорт
	Нашли = Неопределено;
	ТипКоллекции = ТипЗнч(Коллекция);
	Если ТипКоллекции = Тип(""Массив"") или ТипКоллекции = Тип(""ФиксированныйМассив"") Тогда
		Нашли = Коллекция.Найти(Элемент) <> Неопределено;
	ИначеЕсли ТипКоллекции = Тип(""Структура"") или ТипКоллекции = Тип(""Соответствие"") 
		или ТипКоллекции = Тип(""ФиксированнаяСтруктура"") или ТипКоллекции = Тип(""ФиксированноеСоответствие"") Тогда
		Для каждого КлючЗначение Из Коллекция Цикл
			Нашли = КлючЗначение.Значение = Элемент;
			Если Нашли Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипКоллекции = Тип(""СписокЗначений"") Тогда
		Нашли = Коллекция.НайтиПоЗначению(Элемент) <> Неопределено;
	КонецЕсли;
	Если Нашли = Неопределено Тогда
		СообщениеОшибки = ""Утверждение """"ПроверитьВхождениеВКоллекцию"""" не умеет работать с типом коллекции <""+ТипКоллекции+"">."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение СообщениеОшибки;
	КонецЕсли;
	Если Не Нашли Тогда
		СообщениеОшибки = ""Не нашли элемент <""+Элемент+""> в коллекции, а хотели, чтобы он был в коллекции."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВалидностьЗапросаСКД(ТекстЗапроса, ДопСообщениеОшибки = """") Экспорт
	ПроверитьВалидностьЗапросаСКДНаСервере(ТекстЗапроса, ДопСообщениеОшибки);
КонецПроцедуры

// Только для внутреннего использования
&НаСервере
Процедура ПроверитьВалидностьЗапросаСКДНаСервере(ТекстЗапроса, ДопСообщениеОшибки = """")
	Объект().ПроверитьВалидностьЗапросаСКД(ТекстЗапроса, ДопСообщениеОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки = Ложь, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки = Ложь, Знач ДопСообщениеОшибки = """") Экспорт
	ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениямСервер(ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки, ДопСообщениеОшибки);
КонецПроцедуры

&НаСервере
Процедура ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениямСервер(ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки = Ложь, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки = Ложь, Знач ДопСообщениеОшибки = """") Экспорт
	Объект().ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки, ДопСообщениеОшибки);
КонецПроцедуры

&НаСервере
Функция Объект() Экспорт
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектНаСервере;
КонецФункции

&НаСервере
Процедура ДобавитьШагиВМассив(ДеревоСтроки,Шаги)
	Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
		Если СтрДеревоСтроки.Примеры = Истина Тогда
			//эти сценарии уже учтены
			Продолжить;
		КонецЕсли; 
		
		Если СтрДеревоСтроки.Шаг = Истина Тогда
			СтруктураШага = Новый Структура;
			СтруктураШага.Вставить(""Имя"",СтрДеревоСтроки.Имя);
			СтруктураШага.Вставить(""ИмяШагаБезКлючевогоСлова"",СтрДеревоСтроки.ИмяШагаБезКлючевогоСлова);
			СтруктураШага.Вставить(""АдресСнипета"",СтрДеревоСтроки.АдресСнипета);
			СтруктураШага.Вставить(""ШагСПараметрамиВТаблице"",СтрДеревоСтроки.ШагСПараметрамиВТаблице);
			Шаги.Добавить(СтруктураШага);
		КонецЕсли;	 
		ДобавитьШагиВМассив(СтрДеревоСтроки.Строки,Шаги);
	КонецЦикла	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИменаФайловФичИзДереваВМассив(ДеревоСтроки,МассивФич,МассивШагов)
	Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
		Если СтрДеревоСтроки.Фича = Истина Тогда
			МассивФич.Добавить(СтрДеревоСтроки.ПолныйПуть);
			Шаги = Новый Массив;
			ДобавитьШагиВМассив(СтрДеревоСтроки.Строки,Шаги);
			МассивШагов.Добавить(Шаги);
		КонецЕсли;	 
		ДобавитьИменаФайловФичИзДереваВМассив(СтрДеревоСтроки.Строки,МассивФич,МассивШагов);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокФичПоДеревуИСоздатьEPFПоМассивуФич(СтруктураПараметров,МассивФич,МассивШагов)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	
	ДобавитьИменаФайловФичИзДереваВМассив(Дерево.Строки,МассивФич,МассивШагов);
	
	
	//СоздатьEPFПоМассивуФич(СтруктураПараметров);
	
	
	//ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	//ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	//FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	СтруктураПараметров.Вставить(""КонтекстVanessaBehavoir"",ОбъектСервер);
	
	
	//СоздатьEPFПоМассивуФич(СтруктураПараметров);
	
	//FeatureReader.СоздатьEPFПоМассивуФич(СтруктураПараметров);
	
	//УдалитьФайлы(ВременноеИмяФайла);
	
	СтруктураПараметров.КонтекстVanessaBehavoir = """";
	
	//ЗначениеВРеквизитФормы(ОбъектСервер,""Объект"");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуОС(Стр)
	КомандаСистемы(Стр);
КонецПроцедуры

&НаКлиенте
Функция УстановленOneScript() Экспорт

	ИнструментУстановлен = Ложь;
	
	ИмяФайлаЛога = ПолучитьИмяВременногоФайла(""txt"");
	Стр = ""oscript > """""" + ИмяФайлаЛога + """""" 2>&1"";
	
	ВыполнитьКомандуОС(Стр);
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлаЛога,""UTF-8"");
	
	СтрокаВозврата = Неопределено;
	
	КолСтрокСчитано = 0;
	Стр = Текст.ПрочитатьСтроку();
		
	Если Стр <> Неопределено Тогда
		Образец = ""1Script Execution Engine"";
		Если Лев(Стр, СтрДлина(Образец)) = Образец Тогда
			ИнструментУстановлен = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Текст.Закрыть();
	УдалитьФайлыКомандаСистемы(ИмяФайлаЛога);
	
	Возврат ИнструментУстановлен;

КонецФункции // УстановленOneScript()

&НаКлиенте
Процедура ЗаписатьФайлВерсииИсходников(ИмяФайлаВерсииИсходников,ИмяФайлаОригинала)
	Возврат;
	
	
	ФайлВерсии = Новый Файл(ИмяФайлаВерсииИсходников);
	Если ФайлВерсии.Существует() Тогда
		УдалитьФайлы(ФайлВерсии.ПолноеИмя);
	КонецЕсли;	 
	
	Файл   = Новый Файл(ИмяФайлаОригинала);
	Версия = Строка(Файл.ПолучитьВремяИзменения());
	
	ЗТ = Новый ЗаписьТекста(ИмяФайлаВерсииИсходников,""UTF-8"",,Истина); 
	ЗТ.ЗаписатьСтроку(""Версия=""+Версия); 
	
	ЗТ.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция РаспаковатьEPF(СтруктураОписанияEpf)
	ИмяФайла = СтруктураОписанияEpf.ИмяФайлаEPF;
	
	ГенерироватьУФ      = Объект.ГенерироватьУФ;
	КаталогИнструментов = Объект.КаталогИнструментов;
	ЭтоУФ               = Истина;
	Если ЭтоLinux Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		
		Файл = Новый Файл(ИмяФайла);
		ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
		КопироватьФайлКомандаСистемы(ИмяФайла,ВременноеИмяФайла);
		
		ВременныйФайл = Новый Файл(ВременноеИмяФайла);
		
		ИмяКаталогаДляИсходников = ДополнитьСлешВПуть(ВременныйФайл.Путь) + ""Src"";
		ИмяФайлаВерсииИсходников = ДополнитьСлешВПуть(ВременныйФайл.Путь) + ДополнитьСлешВПуть(""Src"") + ДополнитьСлешВПуть(ВременныйФайл.ИмяБезРасширения) + ""SrcVersion.vb"";
		
		Если ГенерироватьУФ Тогда
			ПутьКФайлуМодуля = ДополнитьСлешВПуть(ИмяКаталогаДляИсходников) + ВременныйФайл.ИмяБезРасширения + ""/Form/Форма/Форма.bsl"";
		Иначе	
			ПутьКФайлуМодуля = ДополнитьСлешВПуть(ИмяКаталогаДляИсходников) + ВременныйФайл.ИмяБезРасширения + ""/ObjectModule.bsl"";
		КонецЕсли;	 
		
		УдалитьКаталогКомандаСистемы(ДополнитьСлешВПуть(ИмяКаталогаДляИсходников) + ВременныйФайл.ИмяБезРасширения);
		ФайлКаталогSrc = Новый Файл(ИмяКаталогаДляИсходников);
		Если ФайлСуществуетКомандаСистемы(ФайлКаталогSrc.ПолноеИмя) Тогда
			СоздатьКаталогКомандаСистемы(ИмяКаталогаДляИсходников);
		КонецЕсли;	 
		
		СтрокаЗапуска = ""oscript"";
		
		СтрокаРазборкиEpf = СтрокаЗапуска + "" "" + ДополнитьСлешВПуть(КаталогИнструментов) + ""vendor/precommit1c/v8files-extractor.os  --decompile """""" +  ВременноеИмяФайла + """""" """""" + ИмяКаталогаДляИсходников + """""""";
		СделатьСообщение(""Делаю распаковку "" + Файл.ПолноеИмя);
		Отладка(""Строка распаковки: "" + СтрокаРазборкиEpf);
		
		#Если Клиент Тогда
		КомандаСистемы(СтрокаРазборкиEpf,КаталогИнструментов);
		#КонецЕсли
		
		Файл = Новый Файл(ПутьКФайлуМодуля);
		Если НЕ ФайлСуществуетКомандаСистемы(ВременныйФайл.ПолноеИмя) Тогда
			СделатьСообщение(""Не найден файл после распаковки: "" + ПутьКФайлуМодуля);
			Если ЭтоУФ Тогда
				СделатьСообщение(""Возможно это обработка для обычных форм, а не для управляемых форм."");
			Иначе	
				СделатьСообщение(""Возможно это обработка для управляемых форм, а не для обычных форм."");
			КонецЕсли;	 
			Возврат Неопределено;
		КонецЕсли;	 
		
		
		СтруктураОписанияEpf.КаталогИсходников = ИмяКаталогаДляИсходников + ""\"" + ВременныйФайл.ИмяБезРасширения;
		ЗаписатьФайлВерсииИсходников(ИмяФайлаВерсииИсходников,ИмяФайла);
		
		Возврат ПутьКФайлуМодуля;
		
	Исключение
		СделатьСообщение(""Не смог распаковать "" + ИмяФайла);
		СделатьСообщение(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

&НаКлиенте
Функция СоздатьПустуюСтруктуруEpf()
	Стр = Новый Структура;
	Стр.Вставить(""ИмяФичи"","""");
	Стр.Вставить(""ИмяФайлаEpf"","""");
	Стр.Вставить(""ВременноеИмяМодуля"","""");
	Стр.Вставить(""ТелоМодуля"","""");//таблица значений
	Стр.Вставить(""ИмяМодуляEpf"","""");
	Стр.Вставить(""КаталогИсходников"","""");
	Стр.Вставить(""ФайлEpfПересоздавался"",Ложь);
	
	Возврат Стр;
КонецФункции

&НаСервере
Функция ЗагрузитьТелоМодуляВТаблицуЗначенийСервер(ДвоичныеДанные,ШагСтрокДляМодуля)
	ПутьКФайлу = ПолучитьИмяВременногоФайла(""txt"");
	
	ДвоичныеДанные.Записать(ПутьКФайлу);
	
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""НомСтр"");
	Тзн.Колонки.Добавить(""Стр"");
	
	НомСтр = 0;
	ПромФайл = Новый Файл(ПутьКФайлу);
	Если Не ПромФайл.Существует() Тогда
		СтрОшибки = ""Файл """""" + ПутьКФайлу + """""" не существует!"";
		Сообщить(СтрОшибки);
		ВызватьИсключение СтрОшибки;
	КонецЕсли; 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКФайлу,""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		НомСтр = НомСтр + ШагСтрокДляМодуля;
		
		СтрТзн        = Тзн.Добавить();
		СтрТзн.НомСтр = НомСтр;
		СтрТзн.Стр    = Стр;
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат ЗначениеВСтрокуВнутр(Тзн);
КонецФункции	

&НаКлиенте
Функция ЗагрузитьТелоМодуляВТаблицуЗначений(ПутьКФайлу)
	//ВызватьИсключение ""НЕ реализовано ЗагрузитьТелоМодуляВТаблицуЗначений"";
	ФайлПроверкаСуществования = Новый Файл(ПутьКФайлу);
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	Возврат ЗагрузитьТелоМодуляВТаблицуЗначенийСервер(ДвоичныеДанные,ШагСтрокДляМодуля);
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьНачальноеЗаполнениеВМодульСервер(ТелоМодуля,ШагСтрокДляМодуля,ГенерироватьУФ,ДвДанныеvbFeatureReader,знСоздаватьОбластиПриГенерацииКода)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	FeatureReader.ДобавитьНачальноеЗаполнениеВМодуль(ТелоМодуля,ШагСтрокДляМодуля,ГенерироватьУФ,Истина,знСоздаватьОбластиПриГенерацииКода);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНачальноеЗаполнениеВМодуль(ТелоМодуля,ШагСтрокДляМодуля,ГенерироватьУФ,ДвДанныеvbFeatureReader,ЗнСоздаватьОбластиПриГенерацииКода)
	ДобавитьНачальноеЗаполнениеВМодульСервер(ТелоМодуля,ШагСтрокДляМодуля,ГенерироватьУФ,ДвДанныеvbFeatureReader,ЗнСоздаватьОбластиПриГенерацииКода);
	//ВызватьИсключение ""Не реализовано ДобавитьНачальноеЗаполнениеВМодуль"";
КонецПроцедуры

&НаКлиенте
Функция НайтиФайлВМассивеФайлов(МассивФайлов,ИмяФайла)
	Для каждого Элем Из МассивФайлов Цикл
		Если НРег(Элем.ПолноеИмя) = НРег(ИмяФайла) Тогда
			Возврат Истина;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции	

&НаКлиенте
Функция СоздатьСтруктураОписанияEpf(ОтносительныйКаталогФичи,ИмяТекущейФичи,GenerateEpf,ДвДанныеvbFeatureReader,ДополнительныеПараметры)
	КаталогИнструментов = Объект.КаталогИнструментов;
	ГенерироватьУФ      = Объект.ГенерироватьУФ;
	
	СтруктураОписанияEpf                    = СоздатьПустуюСтруктуруEpf();
	СтруктураОписанияEpf.ИмяФичи            = ИмяТекущейФичи;
	СтруктураОписанияEpf.ИмяФайлаEpf        = ДополнитьСлешВПуть(ОтносительныйКаталогФичи) + ДополнитьСлешВПуть(""step_definitions"") + ИмяТекущейФичи + "".epf"";
	Если GenerateEpf Тогда
		ФайлEpf = Новый Файл(СтруктураОписанияEpf.ИмяФайлаEpf);
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			ФайлСуществует = ФайлEpf.Существует();
		Иначе	
			МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""ПоискEPF"",""НайденныеФайлы"");
			ФайлСуществует = НайтиФайлВМассивеФайлов(МассивФайлов,СтруктураОписанияEpf.ИмяФайлаEpf);
		КонецЕсли;	 
		Если ФайлСуществует Тогда //т.е. если мы не первый раз работаем с данной фичей
			Если НЕ Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF Тогда
				СтруктураОписанияEpf.ИмяМодуляEpf          = РаспаковатьEPF(СтруктураОписанияEpf);
				СтруктураОписанияEpf.ФайлEpfПересоздавался = Истина;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;
	
	Если Не СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		СтруктураОписанияEpf.КаталогИсходников = ДополнитьСлешВПуть(КаталогИнструментов) + ""lib/TemplateEpf"";
		Если ГенерироватьУФ Тогда
			СтруктураОписанияEpf.КаталогИсходников = ДополнитьСлешВПуть(КаталогИнструментов) + ""lib/TemplateEpfUF"";
		КонецЕсли;	   
	КонецЕсли;	
	
	СтруктураОписанияEpf.ВременноеИмяМодуля = ДополнитьСлешВПуть(СтруктураОписанияEpf.КаталогИсходников) + ""ObjectModule_"" + ИмяТекущейФичи + "".bsl"";
	Если ГенерироватьУФ Тогда
		СтруктураОписанияEpf.ВременноеИмяМодуля = ДополнитьСлешВПуть(СтруктураОписанияEpf.КаталогИсходников) + ""und/70e297e0-e8a2-43bf-8be1-62e408f610a1.0_"" + ИмяТекущейФичи + "".bsl"";
	КонецЕсли;	 
	
	Файл = Новый Файл(СтруктураОписанияEpf.ВременноеИмяМодуля);
	ЗТ = Новый ЗаписьТекста(СтруктураОписанияEpf.ВременноеИмяМодуля,""UTF-8"",,Ложь); 
	ЗТ.Закрыть();
	
	Файл = Новый Файл(СтруктураОписанияEpf.ИмяМодуляEpf); //значит надо загрузить модуль из исходников
	
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		ФайлСуществует = Файл.Существует();
	Иначе	
		ФайлСуществует = ФайлСуществуетКомандаСистемы(СтруктураОписанияEpf.ИмяМодуляEpf);
	КонецЕсли;	 
	Если ФайлСуществует Тогда
		СтруктураОписанияEpf.ТелоМодуля = ЗагрузитьТелоМодуляВТаблицуЗначений(СтруктураОписанияEpf.ИмяМодуляEpf);
	Иначе
		СтруктураОписанияEpf.ТелоМодуля = ЗагрузитьТелоМодуляВТаблицуЗначений(СтруктураОписанияEpf.ВременноеИмяМодуля);
		//значит создаём файл первый разделим
		ДобавитьНачальноеЗаполнениеВМодуль(СтруктураОписанияEpf.ТелоМодуля,ШагСтрокДляМодуля,ГенерироватьУФ,ДвДанныеvbFeatureReader,Объект.СоздаватьОбластиПриГенерацииКода);
	КонецЕсли;
	
	Возврат СтруктураОписанияEpf;
КонецФункции

&НаСервереБезКонтекста
Функция СнипетыПолучитьСнипетыПоШагам(Шаги,ДвДанныеvbFeatureReader)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	Возврат FeatureReader.СнипетыПолучитьСнипетыПоШагам(Шаги);
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьПроцедуруПолучитьСписокТестов(ТелоМодуля,Снипеты,ДвДанныеvbFeatureReader,ИмяФайлаФичи,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	FeatureReader.ЗаполнитьПроцедуруПолучитьСписокТестов(ТелоМодуля,Снипеты,Истина,ИмяФайлаФичи,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьStepDefinitionВТекстМодуля(СтруктураОписанияEpf,StepDefinition,Шаг,ШагСтрокДляМодуля,АдресСнипета,ГенерироватьУФ,ДвДанныеvbFeatureReader,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	FeatureReader.ДобавитьStepDefinitionВТекстМодуля(СтруктураОписанияEpf,StepDefinition,Шаг,ШагСтрокДляМодуля,АдресСнипета,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур,ГенерироватьУФ,Истина);
КонецПроцедуры


&НаСервере
Функция ПолучитьТелоМодуляВМассивСервер(Стр)
	ТелоМодуля = ЗначениеИзСтрокиВнутр(Стр);
	ТелоМодуля.Сортировать(""НомСтр"");
	Массив = ТелоМодуля.ВыгрузитьКолонку(""Стр"");
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура УдалитьИзФайлаМодуляФормыУФТестМодуляФормы(ИмяФайлаФормаУФ)
	Файл = Новый Файл(ИмяФайлаФормаУФ);
	
	Если Не ФайлСуществуетКомандаСистемы(ИмяФайлаФормаУФ) Тогда
		ВызватьИсключение ""УдалитьИзФайлаМодуляФормыУФТестМодуляФормы. Файл "" + ИмяФайлаФормаУФ + "" не найден!"";
	КонецЕсли;	 
	
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""txt"");
	//Сообщить(""ВременноеИмяФайла="" + ВременноеИмяФайла);
	
	ЗТ = Новый ЗаписьТекста(ВременноеИмяФайла,""UTF-8"",,Истина); 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлаФормаУФ,""UTF-8"");
	
	НачалоМодуля = -1;
	КонецМодуля  = -1;
	
	НашлиМодуль = Ложь;
	
	КолСкобок1  = 0;
	КолСкобок2  = 0;
	НомерСтроки = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		НомерСтроки = НомерСтроки + 1;
		
		КолСкобок1 = КолСкобок1 + СтрЧислоВхождений(Стр,""{"");
		КолСкобок2 = КолСкобок2 + СтрЧислоВхождений(Стр,""}"");
		
		Если (НачалоМодуля > 0) И НЕ НашлиМодуль Тогда
			Если Лев(Стр,1) = ""{"" Тогда
				КонецМодуля = НомерСтроки;
				ЗТ.ЗаписатьСтроку("""""",""); 
				ЗТ.ЗаписатьСтроку(Стр); 
				НашлиМодуль = Истина;
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если (НомерСтроки > 2) И (НачалоМодуля = -1) И НЕ НашлиМодуль Тогда
			//Если (КолСкобок1 - КолСкобок2) = 1 Тогда //значит сейчас начинается модуль
			Поз = Найти(Стр,""},"""""");
			Если (Поз > 0) И (Прав(Стр,1) <> "","") Тогда
				НачалоМодуля = НомерСтроки;
				
				НачалоСтроки = Лев(Стр,Поз-1);
				
				ЗТ.ЗаписатьСтроку(НачалоСтроки + ""},""""//начало текста модуля""); 
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		
		Если (НачалоМодуля > 0) и НЕ НашлиМодуль Тогда
			Продолжить;
		КонецЕсли;	 
		
		ЗТ.ЗаписатьСтроку(Стр); 
		
	КонецЦикла;	
	
	Текст.Закрыть();
	ЗТ.Закрыть();
	
	
	Если Не НашлиМодуль Тогда
		ВызватьИсключение ""Не смог найти код модуля формы в файле ИмяФайлаФормаУФ!"";
	КонецЕсли;	 
	
	
	Отладка(""Копирую файл "" + ВременноеИмяФайла + "" в "" + ИмяФайлаФормаУФ);
	КопироватьФайлКомандаСистемы(ВременноеИмяФайла,ИмяФайлаФормаУФ);
	
КонецПроцедуры

&НаКлиенте
Функция УбратьСпецсимволыИзИмениОбработи(Знач Стр)
	Стр = СтрЗаменить(Стр,"" "",""_"");
	Стр = СтрЗаменить(Стр,""`"","""");
	Стр = СтрЗаменить(Стр,""~"","""");
	Стр = СтрЗаменить(Стр,""'"","""");
	Стр = СтрЗаменить(Стр,""."","""");
	Стр = СтрЗаменить(Стр,"","","""");
	Стр = СтрЗаменить(Стр,"":"","""");
	Стр = СтрЗаменить(Стр,"";"","""");
	Стр = СтрЗаменить(Стр,""-"",""_"");  
	Стр = СтрЗаменить(Стр,""+"","""");
	Стр = СтрЗаменить(Стр,""/"","""");
	Стр = СтрЗаменить(Стр,""\"","""");
	Стр = СтрЗаменить(Стр,""="","""");
	Стр = СтрЗаменить(Стр,""!"","""");
	Стр = СтрЗаменить(Стр,""@"","""");
	Стр = СтрЗаменить(Стр,""#"","""");
	Стр = СтрЗаменить(Стр,""$"","""");
	Стр = СтрЗаменить(Стр,""%"","""");
	Стр = СтрЗаменить(Стр,""^"","""");
	Стр = СтрЗаменить(Стр,""&"","""");
	Стр = СтрЗаменить(Стр,""*"","""");
	Стр = СтрЗаменить(Стр,""("","""");
	Стр = СтрЗаменить(Стр,"")"","""");
	Стр = СтрЗаменить(Стр,""№"","""");
	Стр = СтрЗаменить(Стр,""?"","""");
	Стр = СтрЗаменить(Стр,""<"","""");
	Стр = СтрЗаменить(Стр,"">"","""");
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура ЗаменитьСтрокиВФайлеОсновыОбработки(ИмяФайлОсноваОбработки,ИмяФичи)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлОсноваОбработки,""UTF-8"");
	
	ВременноеИмяФайла = ИмяФайлОсноваОбработки + ""_Temp"";
	ЗТ = Новый ЗаписьТекста(ВременноеИмяФайла,""UTF-8"",,Истина); 
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		ИмяОбработки = УбратьСпецсимволыИзИмениОбработи(ИмяФичи);
		Стр = СтрЗаменить(Стр,""TemplateEpf"",ИмяОбработки);
		Стр = СтрЗаменить(Стр,""Template epf"",ИмяФичи);
		
		ЗТ.ЗаписатьСтроку(Стр); 
	КонецЦикла;
	
	ЗТ.Закрыть();
	Текст.Закрыть();
	Текст = """";
	
	УдалитьФайлыКомандаСистемы(ИмяФайлОсноваОбработки);
	ПереместитьФайлКомандаСистемы(ВременноеИмяФайла,ИмяФайлОсноваОбработки);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогЕслиЕгоНет(Путь)
	Файл = Новый Файл(Путь);
	Если Путь = """" Тогда
		ВызватьИсключение ""Передан пустой путь в процедуру """"СоздатьКаталогЕслиЕгоНет""""!"";
	КонецЕсли;	 
	СоздатьКаталогКомандаСистемы(Путь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСистемыРаботаСФайлами(Команда)
	ИмяВременногоЛог = ПолучитьИмяВременногоФайла(""log"");
	ИмяВременнгоФайла = ПолучитьИмяВременногоФайла(""bat"");
	ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла,""windows-1251"",,Истина); 
	ЗТ.Закрыть();
	
	ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла,""UTF-8"",,Истина); 
	
	ЗТ.ЗаписатьСтроку(""chcp 65001""); 
	ЗТ.ЗаписатьСтроку(Команда); 
	ЗТ.Закрыть();
	
	WshShell = Новый COMОбъект(""WScript.Shell"");
	WshShell.Run(ИмяВременнгоФайла,0,-1);	
	//КомандаСистемы(ИмяВременнгоФайла + "" > "" + ИмяВременногоЛог);
КонецПроцедуры			

&НаКлиенте
Процедура УдалитьФайлыКомандаСистемы(Знач ИмяФайла) Экспорт
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		//КомандаСистемы(""DEL """""" + ИмяФайла + """""""");
		Если ЭтоLinux Тогда 
			ИмяФайла = СтрЗаменить(ИмяФайла,""\"",""/"");
			КомандаСистемы(""rm -Rf """""" + ИмяФайла + """""""");
		Иначе //КомандаСистемы(""DEL """""" + ИмяФайла + """""""");
			ИмяФайла = СтрЗаменить(ИмяФайла,""/"",""\"");
			КомандаСистемыРаботаСФайлами(""DEL /Q """""" + ИмяФайла + """""""");
		КонецЕсли;
	Иначе
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКаталогКомандаСистемы(Знач ИмяФайла) Экспорт
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЭтоLinux Тогда 
			ИмяФайла = СтрЗаменить(ИмяФайла,""\"",""/"");
			КомандаСистемы(""rm -Rf """""" + ИмяФайла + """""""");
		Иначе //КомандаСистемы(""DEL """""" + ИмяФайла + """""""");
			
			ИмяФайла = СтрЗаменить(ИмяФайла,""/"",""\"");
			КомандаСистемыРаботаСФайлами(""RD /S /Q """""" + ИмяФайла + """""""");
		КонецЕсли;

	Иначе
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьФайлКомандаСистемы(Знач Откуда,Знач Куда) Экспорт
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		//КомандаСистемы(""MOVE """""" + Откуда + """""" """""" + Куда + """""""");
		Если ЭтоLinux Тогда 
			Откуда = СтрЗаменить(Откуда,""\"",""/"");
			Куда   = СтрЗаменить(Куда,""\"",""/"");
			КомандаСистемы(""mv """""" + Откуда + """""" """""" + Куда + """""""");
		Иначе 
			
			Откуда = СтрЗаменить(Откуда,""/"",""\"");
			Куда   = СтрЗаменить(Куда,""/"",""\"");
			КомандаСистемыРаботаСФайлами(""MOVE """""" + Откуда + """""" """""" + Куда + """""""");
		КонецЕсли;
	Иначе
		ПереместитьФайл(Откуда,Куда);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура КопироватьФайлКомандаСистемы(Знач Откуда,Знач Куда) Экспорт
	
    Если ЕстьПоддержкаАсинхронныхВызовов Тогда
        Команда = """";
        Если ЭтоLinux Тогда 
            Откуда = СтрЗаменить(Откуда,""\"",""/"");
            Куда   = СтрЗаменить(Куда,""\"",""/"");
            Команда = ""cp r """""" + Откуда + """""" """""" + Куда + """""""";
        Иначе 
            Откуда = СтрЗаменить(Откуда,""/"",""\"");
            Куда   = СтрЗаменить(Куда,""/"",""\"");
            Команда = ""COPY """""" + Откуда + """""" """""" + Куда + """""""";
        КонецЕсли;    

		Попытка
            Если ЭтоLinux Тогда 
                КомандаСистемы(Команда);
            Иначе 
                КомандаСистемыРаботаСФайлами(Команда);
            КонецЕсли;    
        Исключение
            Сообщить(""КопироватьФайлКомандаСистемы:""+ОписаниеОшибки()+ "" команда:""+Команда);
        КонецПопытки;
	Иначе
		КопироватьФайл(Откуда,Куда);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогКомандаСистемы(Знач ИмяФайла, ДополнительныеПараметрыАсинхронности = Неопределено) Экспорт
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ИмяФайла = СтрЗаменить(ИмяФайла,""/"",""\"");
		Если НЕ ЭтоLinux Тогда 
			КомандаСистемыРаботаСФайлами(""MKDIR """""" + ИмяФайла + """""""");
		Иначе 
			ИмяФайла = СтрЗаменить(ИмяФайла,""\"",""/"");
			КомандаСистемы(""mkdir -p """""" + ИмяФайла + """""""");
		КонецЕсли;
	Иначе
		СоздатьКаталог(ИмяФайла);
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Функция ФайлСуществуетКомандаСистемы(Знач ИмяФайла,ДопПараметры = Неопределено) Экспорт
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ИмяВременногоЛог = ПолучитьИмяВременногоФайла(""log"");
		
		Если НЕ ЭтоLinux Тогда
			ИмяФайла = СтрЗаменить(ИмяФайла,""/"",""\"");
		
			ИмяВременнгоФайла = ПолучитьИмяВременногоФайла(""bat"");
			ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла,""windows-1251"",,Истина); 
			ЗТ.Закрыть();
			
			ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла,""UTF-8"",,Истина); 
			
			ЗТ.ЗаписатьСтроку(""chcp 65001""); 
			ЗТ.ЗаписатьСтроку(""If Exist """""" + ИмяФайла + """""" (Echo yes) Else (Echo no)""); 
			ЗТ.Закрыть();
			
			//КомандаСистемы(ИмяВременнгоФайла + "" > "" + ИмяВременногоЛог);
			WshShell = Новый COMОбъект(""WScript.Shell"");
			WshShell.Run("""""""" + ИмяВременнгоФайла + """""" > """""" + ИмяВременногоЛог + """""""",0,-1);
		Иначе 
			ИмяВременнгоФайла = ПолучитьИмяВременногоФайла(""sh"");
			ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла,""UTF-8"",Символы.ПС, Истина, Символы.ПС); 
			
			ЗТ.ЗаписатьСтроку(""#!/bin/sh"");
			СтрокаКоманды = ""sh -c 'test -f ""+ИмяФайла+"" && echo yes || echo no' > ""+ИмяВременногоЛог +"""";
			ЗТ.ЗаписатьСтроку(СтрокаКоманды); 
			СтрокаКоманды = ""sh -c 'test -d ""+ИмяФайла+"" && echo yes || echo no' >> ""+ИмяВременногоЛог +"""";
			ЗТ.ЗаписатьСтроку(СтрокаКоманды);
			ЗТ.Закрыть();
			
			КомандаСистемы(""sh ""+ ИмяВременнгоФайла);
		КонецЕсли;
		
		
		ФайлСуществует = Ложь;
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоЛог,""UTF-8"");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			Если Стр = ""yes"" Тогда
				ФайлСуществует = Истина;
			КонецЕсли;	 
		КонецЦикла;	
		Текст.Закрыть();
		
		Возврат ФайлСуществует;
	Иначе
		ФайлПроверкаСуществования = Новый Файл(ИмяФайла);
		Возврат ФайлПроверкаСуществования.Существует();
	КонецЕсли;	 
КонецФункции	

&НаКлиенте
Процедура СоздатьФайлыОбработок(БылиОшибки,СтруктураОписанияEpf,ДополнительныеПараметры = Неопределено)
	
	ЭтоУФ = Истина;
	ГенерироватьУФ = Объект.ГенерироватьУФ;
	КаталогИнструментов = Объект.КаталогИнструментов;
	ТекстМодуля = """";
	
	ТелоМодуля = СтруктураОписанияEpf.ТелоМодуля;
	Если ЭтоУФ Тогда
		ТелоМодуля = ПолучитьТелоМодуляВМассивСервер(ТелоМодуля);
	Иначе
		ТелоМодуля.Сортировать(""НомСтр"");
		ТелоМодуля = ТелоМодуля.ВыгрузитьКолонку(""Стр"");
	КонецЕсли;	 
	
	Если ЭтоLinux Тогда 
		ТекстМодуля = """";
		Для каждого Строка из ТелоМодуля Цикл 
			ТекстМодуля = ТекстМодуля + Символы.ПС + Строка;
		КонецЦикла;
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(ТекстМодуля);  
		ФайлРеальногоEPF = Новый Файл(СтруктураОписанияEpf.ИмяФайлаEpf);
		ТекстовыйДокумент.Показать();
		Возврат;
	КонецЕсли;
	
	Отладка(""Буду записывать "" + СтруктураОписанияEpf.ВременноеИмяМодуля);
	
	УдалитьФайлыКомандаСистемы(СтруктураОписанияEpf.ВременноеИмяМодуля);
	Если ГенерироватьУФ Тогда
		ИмяФайлаФормаУФ = ДополнитьСлешВПуть(КаталогИнструментов) + ""lib/TemplateEpfUF/und/70e297e0-e8a2-43bf-8be1-62e408f610a1.0_template"";
		Если СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
			ИмяФайлаФормаУФ = ДополнитьСлешВПуть(СтруктураОписанияEpf.КаталогИсходников) + ""und/70e297e0-e8a2-43bf-8be1-62e408f610a1.0"";
			УдалитьИзФайлаМодуляФормыУФТестМодуляФормы(ИмяФайлаФормаУФ);
			
			ФайлИмяФайлаФормаУФ = Новый Файл(ИмяФайлаФормаУФ);
			Если Не ФайлСуществуетКомандаСистемы(ФайлИмяФайлаФормаУФ.ПолноеИмя) Тогда
				ВызватьИсключение ""Ошибка перегенерации EPF. Файл "" + ИмяФайлаФормаУФ + "" не найден."";
			КонецЕсли;	 
		КонецЕсли;	 
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяФайлаФормаУФ,""UTF-8"");
		
		ЗТ = Новый ЗаписьТекста(СтруктураОписанияEpf.ВременноеИмяМодуля,""UTF-8"",,Ложь); 
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			ЗТ.ЗаписатьСтроку(Стр); 
			
			Если Найти(Стр,""},""""//начало текста модуля"") > 0 Тогда
				Для Каждого СтрТелоМодуля Из ТелоМодуля Цикл
					Если СтрТелоМодуля = ""//начало текста модуля"" Тогда
						Продолжить;
					КонецЕсли;	 
					
					СтрТелоМодуля = СтрЗаменить(СтрТелоМодуля,"""""""","""""""""""");
					ЗТ.ЗаписатьСтроку(СтрТелоМодуля); 
				КонецЦикла;
			КонецЕсли;	 
		КонецЦикла;	
		
		
		Текст.Закрыть();
		ЗТ.Закрыть();
	Иначе	
		ЗТ = Новый ЗаписьТекста(СтруктураОписанияEpf.ВременноеИмяМодуля,""UTF-8"",,Ложь); 
		Для Каждого СтрТелоМодуля Из ТелоМодуля Цикл
			ЗТ.ЗаписатьСтроку(СтрТелоМодуля); 
		КонецЦикла;
		ЗТ.Закрыть();
	КонецЕсли;	 
	Отладка(""Записал "" + СтруктураОписанияEpf.ВременноеИмяМодуля);
	
	ПутьКИсходникам = СтруктураОписанияEpf.КаталогИсходников;
	ИмяФайлаМодуляДляСборки = ДополнитьСлешВПуть(ПутьКИсходникам) + ""ObjectModule.bsl"";
	Если ГенерироватьУФ Тогда
		ИмяФайлаМодуляДляСборки = ДополнитьСлешВПуть(ПутьКИсходникам) + ""und/70e297e0-e8a2-43bf-8be1-62e408f610a1.0"";
	КонецЕсли;	 
	
	УдалитьФайлыКомандаСистемы(ИмяФайлаМодуляДляСборки);
	ПереместитьФайлКомандаСистемы(СтруктураОписанияEpf.ВременноеИмяМодуля,ИмяФайлаМодуляДляСборки);
	Отладка(""Переименовал в "" + ИмяФайлаМодуляДляСборки);
	
	ИмяФайлОсноваОбработкиTemplate = ДополнитьСлешВПуть(ПутьКИсходникам) + ""und/79a499cc-1782-4a2f-abe7-61ea4d49fd5a_template"";
	ИмяФайлОсноваОбработки         = ДополнитьСлешВПуть(ПутьКИсходникам) + ""und/79a499cc-1782-4a2f-abe7-61ea4d49fd5a"";
	Если ГенерироватьУФ Тогда
		ИмяФайлОсноваОбработкиTemplate = ДополнитьСлешВПуть(КаталогИнструментов) + ""lib/TemplateEpfUF/und/79a499cc-1782-4a2f-abe7-61ea4d49fd5a_template"";
		ИмяФайлОсноваОбработки         = ДополнитьСлешВПуть(КаталогИнструментов) + ""lib/TemplateEpfUF/und/79a499cc-1782-4a2f-abe7-61ea4d49fd5a"";
	КонецЕсли;	 
	
	Файл_template = Новый Файл(ИмяФайлОсноваОбработкиTemplate);
	Если ФайлСуществуетКомандаСистемы(ИмяФайлОсноваОбработкиTemplate) Тогда
		//это значит обработка создаётся в первый раз
		КопироватьФайлКомандаСистемы(ИмяФайлОсноваОбработкиTemplate,ИмяФайлОсноваОбработки);
		ЗаменитьСтрокиВФайлеОсновыОбработки(ИмяФайлОсноваОбработки,СтруктураОписанияEpf.ИмяФичи);
	КонецЕсли;	 
	
	ПодкаталогСборки = ПолучитьИмяВременногоФайла();
	СоздатьКаталогКомандаСистемы(ПодкаталогСборки);
	ФайлРеальногоEPF = Новый Файл(СтруктураОписанияEpf.ИмяФайлаEpf);
	СоздатьКаталогЕслиЕгоНет(ФайлРеальногоEPF.Путь);
	
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		ФайлУжеЕсть = ФайлРеальногоEPF.Существует();
	Иначе	
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры,""ПоискFeature"",""НайденныеФайлы"");
		ФайлУжеЕсть  = НайтиФайлВМассивеФайлов(МассивФайлов,ФайлРеальногоEPF.ПолноеИмя);
	КонецЕсли;	 
	
	Если ФайлУжеЕсть Тогда
		СделатьСообщение(""Пересоздаю "" + СтруктураОписанияEpf.ИмяФайлаEpf);
	Иначе	
		СделатьСообщение(""Создаю "" + СтруктураОписанияEpf.ИмяФайлаEpf);
	КонецЕсли; 
	СтрокаЗапуска = ""oscript -encoding=utf-8"";
	
	Отладка(""Создаю из исходников "" + ПутьКИсходникам + "" 
		| Временный каталог сборки epf "" + ПодкаталогСборки);
		
	ФайлЛога = ПолучитьИмяВременногоФайла(""txt"");	
	СтрокаСборкиEpf = СтрокаЗапуска + "" """""" + ДополнитьСлешВПуть(КаталогИнструментов) + ""vendor/precommit1c/v8files-extractor.os"""" --compile """""" +  ПутьКИсходникам  + """""" """""" + ПодкаталогСборки + """""" > """""" + ФайлЛога + """""" 2>&1"";
	
	Отладка(""СтрокаСборкиEpf=""+СтрокаСборкиEpf);
	
	ВыполнитьКомандуОС(СтрокаСборкиEpf);
	
	СтрокаЛогаСборки = ПолучитьТекстовыйФайлОднойСтрокой(ФайлЛога);
	Отладка(""Лог команды сборки EPF:"" + Символы.ПС + СтрокаЛогаСборки);
	
	
	Если СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		ФайлПутьКИсходникам = Новый Файл(ПутьКИсходникам);
		ФайлГотовойОбработки = ПодкаталогСборки + ""\"" + ФайлПутьКИсходникам.Имя +"".epf"";
	Иначе	
		ФайлГотовойОбработки = ПодкаталогСборки + ""\TemplateEpfUF.epf"";
	КонецЕсли;	 
	
	Если Не ФайлСуществуетКомандаСистемы(ФайлГотовойОбработки) Тогда
		СделатьСообщение(""Ошибка создания временного файла в подкаталоге "" + ПодкаталогСборки + ""!!!"");
		БылиОшибки = Истина;
		
		УдалитьФайлыКомандаСистемы(ИмяФайлаМодуляДляСборки);
		УдалитьФайлыКомандаСистемы(ИмяФайлОсноваОбработки);
		УдалитьФайлыКомандаСистемы(ПодкаталогСборки);
		
		Возврат;
		
	КонецЕсли;
	
	ФайлВременногоEPF = Новый Файл(ФайлГотовойОбработки);
	
	Если ФайлСуществуетКомандаСистемы(ФайлВременногоEPF.ПолноеИмя) Тогда
		Если ФайлСуществуетКомандаСистемы(ФайлРеальногоEPF.ПолноеИмя) Тогда
			УдалитьФайлыКомандаСистемы(ФайлРеальногоEPF.ПолноеИмя);
		КонецЕсли;	 
		КопироватьФайлКомандаСистемы(ФайлВременногоEPF.ПолноеИмя,ФайлРеальногоEPF.ПолноеИмя);
		Отладка(""Файл "" + ФайлРеальногоEPF.ПолноеИмя + "" создан."");
	Иначе	
		СделатьСообщение(""Ошибка создания файла "" + ФайлРеальногоEPF.ПолноеИмя + ""!!!"");
		БылиОшибки = Истина;
	КонецЕсли;	 
	УдалитьФайлыКомандаСистемы(ИмяФайлаМодуляДляСборки);
	УдалитьФайлыКомандаСистемы(ИмяФайлОсноваОбработки);
	УдалитьФайлыКомандаСистемы(ПодкаталогСборки);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекстовыйФайлОднойСтрокой(ИмяФайла)
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла, ""ПолучитьТекстовыйФайлОднойСтрокой"") Тогда
		Возврат Неопределено;
	КонецЕсли;	 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	Возврат Текст.Прочитать();
КонецФункции	

&НаКлиенте
Процедура УдалитьИсходникиEPF(ИмяФайлаEpf)
	ФайлEpf = Новый Файл(ИмяФайлаEpf);
	Если Не ФайлСуществуетКомандаСистемы(ФайлEpf.ПолноеИмя, ""УдалитьИсходникиEPF"" ) Тогда
		ВызватьИсключение ""Файл "" + ИмяФайлаEpf + "" не существует!"";
	КонецЕсли;	 
	
	Путь = ФайлEpf.Путь + ""Src"";
	УдалитьКаталогКомандаСистемы(Путь);
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьGenerateEpf(СтруктураПараметров)
		
	Если Не УстановленOneScript() Тогда
		Сообщить(""Для генерации EPF должен быть установлен 1Script. В cmd должна выполняться команда: oscript"");
		Возврат;
	КонецЕсли;	 
	
	ГенерироватьУФ          = СтруктураПараметров.ГенерироватьУФ;
	ШагСтрокДляМодуля       = СтруктураПараметров.ШагСтрокДляМодуля;
	DebugLog                = СтруктураПараметров.DebugLog;
	КаталогФич              = СтруктураПараметров.КаталогФич;
	КонтекстVanessaBehavoir = СтруктураПараметров.КонтекстVanessaBehavoir;
	КаталогиБиблиотек       = СтруктураПараметров.КаталогиБиблиотек;
	ДвДанныеvbFeatureReader = СтруктураПараметров.ДвДанныеvbFeatureReader;
	
	ДополнительныеПараметры = Неопределено;
	Если СтруктураПараметров.Свойство(""ДополнительныеПараметры"") Тогда
		ДополнительныеПараметры = СтруктураПараметров.ДополнительныеПараметры;
	КонецЕсли;	 
	
	СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур       = СтруктураПараметров.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур;
	
	
	ПолучитьУжеСуществующиеСнипетыИзОбработок(КаталогФич,ДополнительныеПараметры);
	Для каждого Элем Из КаталогиБиблиотек Цикл
		ПолучитьУжеСуществующиеСнипетыИзОбработок(Элем.Значение,ДополнительныеПараметры);
	КонецЦикла;
	
	
	МассивФич   = СтруктураПараметров.МассивФич;
	МассивШагов = СтруктураПараметров.МассивШагов;
	Ном = 0;
	Для каждого ИмяФайлаФичи Из МассивФич Цикл
		Ном = Ном+1;
		Шаги = МассивШагов.Получить(Ном-1);
		
		ФайлФичи       = Новый Файл(ИмяФайлаФичи);
		ИмяТекущейФичи = ФайлФичи.ИмяБезРасширения;
		СделатьСообщение(""Работаю по фиче: "" + ИмяФайлаФичи);
		
		МассивДляСозданияEpf = Новый Массив;
		ОтносительныйКаталогФичи = ФайлФичи.Путь;
		Если Найти(Прав(ОтносительныйКаталогФичи,1), ""\/"") > 0 Тогда
			ОтносительныйКаталогФичи = Лев(ОтносительныйКаталогФичи,СтрДлина(ОтносительныйКаталогФичи)-1);
		КонецЕсли;	 
		
		Отладка(""ОтносительныйКаталогФичи="" + ОтносительныйКаталогФичи);
		СтруктураОписанияEpf = СоздатьСтруктураОписанияEpf(ОтносительныйКаталогФичи,ФайлФичи.ИмяБезРасширения,Истина,ДвДанныеvbFeatureReader,ДополнительныеПараметры);
		
		Снипеты = СнипетыПолучитьСнипетыПоШагам(Шаги,ДвДанныеvbFeatureReader);
		ЗаполнитьПроцедуруПолучитьСписокТестов(СтруктураОписанияEpf.ТелоМодуля,Снипеты,ДвДанныеvbFeatureReader,ИмяФайлаФичи,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
		Для каждого ЭлемСнипет Из Снипеты Цикл
			ДобавитьStepDefinitionВТекстМодуля(СтруктураОписанияEpf,ЭлемСнипет.StepDefinition,ЭлемСнипет.Шаг,ШагСтрокДляМодуля,ЭлемСнипет.АдресСнипета,ГенерироватьУФ,ДвДанныеvbFeatureReader,СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
		КонецЦикла;
		
		БылиОшибки = Ложь;
		
		Если Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF Тогда
			ВывестиТекстМодуляНаЭкран(СтруктураОписанияEpf);
		Иначе	
			СоздатьФайлыОбработок(БылиОшибки,СтруктураОписанияEpf,ДополнительныеПараметры);
		КонецЕсли;	 
		
		Если СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
			УдалитьИсходникиEPF(СтруктураОписанияEpf.ИмяФайлаEpf);
		КонецЕсли;	 
	КонецЦикла; 	
	СделатьСообщение(""Создание epf по фичам закончено."");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстМодуляИзСтруктураОписанияEpfСервер(ТекстМодуляВнутр)
	Стр = """";
	
	Тзн = ЗначениеИзСтрокиВнутр(ТекстМодуляВнутр);
	
	Для каждого СтрТзн Из Тзн Цикл
		Стр = Стр + СтрТзн.Стр + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура ВывестиТекстМодуляНаЭкран(СтруктураОписанияEpf)
	Стр = ПолучитьТекстМодуляИзСтруктураОписанияEpfСервер(СтруктураОписанияEpf.ТелоМодуля);
	ТекстовыйДокумент = новый ТекстовыйДокумент;
	ТекстовыйДокумент.ДобавитьСтроку(Стр);
	ТекстовыйДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьEPFПоМассивуФич(СтруктураПараметров)
	СделатьСообщение(""Запускаю генерацию epf."");
	СделатьGenerateEpf(СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныОбработокПродолжение(ДополнительныеПараметры = Неопределено)
	Если Не Объект.РежимСамотестирования Тогда
		ОчиститьСообщения();
	КонецЕсли;  
	СделатьПараметрыКорректными();	
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""КаталогИнструментов"",Объект.КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"",Объект.КаталогФич);
	СтруктураПараметров.Вставить(""DebugLog"",Объект.DebugLog);
	СтруктураПараметров.Вставить(""ГенерироватьУФ"",Объект.ГенерироватьУФ);
	СтруктураПараметров.Вставить(""СоздаватьОбластиПриГенерацииКода"",Объект.СоздаватьОбластиПриГенерацииКода);
	СтруктураПараметров.Вставить(""ШагСтрокДляМодуля"",ШагСтрокДляМодуля);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"",Объект.КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур"",Объект.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
	
	МассивФич   = Новый Массив;
	МассивШагов = Новый Массив;
	ПолучитьСписокФичПоДеревуИСоздатьEPFПоМассивуФич(СтруктураПараметров,МассивФич,МассивШагов);
	
	СтруктураПараметров.Вставить(""МассивФич"",МассивФич);
	СтруктураПараметров.Вставить(""МассивШагов"",МассивШагов);
	СтруктураПараметров.Вставить(""ДвДанныеvbFeatureReader"",ДвДанныеvbFeatureReader);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"",ДополнительныеПараметры);
	
	СоздатьEPFПоМассивуФич(СтруктураПараметров);
	ЭтаФорма.Активизировать();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныОбработок() Экспорт
	
	МассивДействий = Новый Массив;
	ДобавитьМассивСостоянийФайлов(МассивДействий);
	ДобавитьСканированиеКаталогов(МассивДействий);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ТекИдМассива"",0);
	ДопПараметры.Вставить(""МассивДействий"",МассивДействий);
	ДопПараметры.Вставить(""НадоЗагрузитьФичи"",Ложь);
	ДопПараметры.Вставить(""НадоГенерироватьEPF"",Истина);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	Иначе
		ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
		СоздатьШаблоныОбработокПродолжение();
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныОбработокКоманда(Команда)
	СоздатьШаблоныОбработок();
КонецПроцедуры

// Функция ДополнитьСлешВПуть
//
// Параметры:
// ИмяКаталога
//
// Описание:
// Функция дополняет и возвращает слеш в путь в конец строки, если он отсутствует
//
&НаКлиенте
Функция ДополнитьСлешВПуть(Знач Каталог) Экспорт
	разделитель = ""\"";
	
	Если ПустаяСтрока(Каталог) Тогда
		Возврат Каталог;
	КонецЕсли;
	//СисИнфо = Новый СистемнаяИнформация;
	//Если Найти(Строка(СисИнфо.ТипПлатформы), ""Linux"")>0 Тогда
	Если ЭтоLinux Тогда
		разделитель = ""/"";
	КонецЕсли;
		
	Если Прав(Каталог, 1) <> разделитель Тогда
		Каталог = Каталог + разделитель;
	КонецЕсли;
	Возврат Каталог;
КонецФункции


&НаСервере
Функция ПолучитьКлючиЗаписиРСПоНаборуЗаписейРС(НаборЗаписей,ИмяРС)
	Результат = Новый Массив;
	
	Периодический        = Не (Метаданные.РегистрыСведений[ИмяРС].ПериодичностьРегистраСведений = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический);
	ПодчиненРегистратору = (Метаданные.РегистрыСведений[ИмяРС].РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору);
	
	МассивИзмерений = Новый Массив;
	Для каждого Измерение Из Метаданные.РегистрыСведений[ИмяРС].Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	
	Для каждого Запись Из НаборЗаписей Цикл
		ЗначениеКлюча = Новый Структура;
		
		Если ПодчиненРегистратору Тогда
			ЗначениеКлюча.Вставить(""Регистратор"",Запись.Регистратор);
		КонецЕсли;	 
		Если Периодический Тогда
			ЗначениеКлюча.Вставить(""Период"",Запись.Период);
		КонецЕсли;	 
		
		Для каждого Измерение Из МассивИзмерений Цикл
			ЗначениеКлюча.Вставить(Измерение,Запись[Измерение]);
		КонецЦикла;
		
		
		ПараметрыКонструктора = Новый Массив();      
		ПараметрыКонструктора.Добавить(ЗначениеКлюча);      
		КлючЗаписи =  Новый(""РегистрСведенийКлючЗаписи."" + ИмяРС, ПараметрыКонструктора);		
		
		Результат.Добавить(КлючЗаписи);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	

//} МЕТОДЫ ДЛЯ ПРОВЕРКИ ЗНАЧЕНИЙ (assertions). 


//портирован блок генерации данных из проекта xUnitFor1C (https://github.com/xDrivenDevelopment/xUnitFor1C)
//был взят релиз 3.0.0.3
// { Методы генерации тестовых данных

// количествоСозданныхОбъектов учитывает только созданные элементы справочников, документы и пользователей ИБ. Записи регистров сведений не считаются!
&НаКлиенте
Функция СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения = Неопределено, ИмяКолонкиЗамещения = Неопределено) Экспорт
	Данные = СоздатьДанныеПоТабличномуДокументуСервер(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения);
	Возврат Данные;
КонецФункции


&НаСервере
Функция СоздатьДанныеПоТабличномуДокументуСервер(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения) //Экспорт
	Данные = Объект().СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения);
	
	Для каждого Элем Из Данные Цикл
		Стр = Строка(Элем.Значение);
		Если Найти(Стр,""РегистрСведенийНаборЗаписей"") > 0 Тогда
			ИмяРС = Сред(Стр,29);
			Данные[Элем.Ключ] = ПолучитьКлючиЗаписиРСПоНаборуЗаписейРС(Элем.Значение,ИмяРС);
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Данные;
	//Возврат Неопределено; //Данные;
КонецФункции
//}

// { работа с данными текущего теста

&НаКлиенте
Процедура УстановитьДанныеТекущегоТеста(ДанныеТекущегоТеста)
	
	//УстановитьКонтекст(ДанныеТекущегоТеста, ИдентификаторКонтекстаДанныхТекущегоТеста());
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеТекущегоТеста()
	
	//УдалитьКонтекст(ИдентификаторКонтекстаДанныхТекущегоТеста());
	
КонецПроцедуры

&НаКлиенте
Функция ПустыеДанныеТекущегоТеста()
	
	ДанныеТеста = Новый Структура;
	ДанныеТеста.Вставить(""Имя"", """");
	ДанныеТеста.Вставить(""ПолныйПуть"", """");
	ДанныеТеста.Вставить(""СостояниеТеста"", """");
	
	Возврат ДанныеТеста;
	
КонецФункции

Функция ИдентификаторКонтекстаДанныхТекущегоТеста()
	
	Возврат ""xUnitFor1C_ДанныеТекущегоТеста"";
	
КонецФункции

// }


&НаКлиенте
Функция НайтиСтрокуСценарияЧерезРодителя(СтрокаДерева)
	Пока Истина Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		Если СтрокаДерева = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		Если СтрокаДерева.Сценарий = Истина Тогда
			Возврат СтрокаДерева;
		КонецЕсли;	 
	КонецЦикла;
КонецФункции	

&НаКлиенте
Процедура ВыполнитьВыделенныйСценарий(Команда)
	СтрокаСценария = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаСценария = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если СтрокаСценария.Сценарий <> Истина Тогда
		СтрокаСценария = НайтиСтрокуСценарияЧерезРодителя(СтрокаСценария);
		Если СтрокаСценария = Неопределено Тогда
			Сообщить(""Не найден строка сценария!"");
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ИД = СтрокаСценария.ИДСтроки;
	ВыполнитьСценарии(ИД);

КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьИВыполнить(Команда)
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		ЗагрузитьФичи();
		ВыполнитьСценарии();
	Иначе
		Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Истина;
		ЗагрузитьФичи();
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗапускПриложения(КодВозврата,ДополнительныеПараметры) Экспорт
КонецПроцедуры

&НаКлиенте
Функция НайтиСтрокуФичиЧерезРодителя(Стр)
	СтрокаДерева = Стр;
	Пока Истина Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		Если СтрокаДерева = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		Если СтрокаДерева.Фича = Истина Тогда
			Возврат СтрокаДерева;
		КонецЕсли;	 
	КонецЦикла;
КонецФункции	

&НаКлиенте
Процедура ОткрытьФичаФайл(Команда)
	СтрокаФичи = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаФичи = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если СтрокаФичи.Фича <> Истина Тогда
		СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаФичи);
		Если СтрокаФичи = Неопределено Тогда
			Сообщить(""Строка с фича-файлом не найдена!"");
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьЗапускПриложения"""", ЭтаФорма)"");
		Выполнить(""НачатьЗапускПриложения(ОписаниеОповещения,СтрокаФичи.ПолныйПуть)"");
	Иначе	
		ЗапуститьПриложение(СтрокаФичи.ПолныйПуть);
	КонецЕсли;  
	
КонецПроцедуры


&НаКлиенте
Функция ЭтаФормаTestClientУжеОбрабатывалась(ИмяТекущейФормыTestClient)
	Для каждого Элем Из МассивСостояниеФормTestClient Цикл
		Если Элем.ИмяФормы = ИмяТекущейФормыTestClient Тогда
			Возврат Истина;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции	

&НаКлиенте
Функция ПолучитьАктивноеОкноИзТестовоеПриложение()
	Возврат ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
КонецФункции	

Функция ПолучитьТекстЗаголовокРеквизитаРодитель(ТекстЗаголовка,ИмяРодителя)
	Возврат ТекстЗаголовка + ""_"" + ИмяРодителя;
КонецФункции	

&НаКлиенте
Функция ПолучитьСвойстваОбъекта(ЭлементФормы,МассивЗаголовковПолей,МассивЗаголовковКнопок,ИмяРодителя)
	Рез = Новый Структура;
	Рез.Вставить(""Имя"",ЭлементФормы.Имя);
	Рез.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
	Рез.Вставить(""ИмяРодителя"",ИмяРодителя);
	
	Если ТипЗнч(ЭлементФормы) = Тип(""ТестируемоеПолеФормы"") Тогда
		//Стр = ПолучитьТекстЗаголовокРеквизитаРодитель(ЭлементФормы.ТекстЗаголовка,ИмяРодителя);
		МассивЗаголовковПолей.Добавить(ЭлементФормы.ТекстЗаголовка);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяКнопкаФормы"") Тогда
		//Стр = ПолучитьТекстЗаголовокРеквизитаРодитель(ЭлементФормы.ТекстЗаголовка,ИмяРодителя);
		МассивЗаголовковКнопок.Добавить(ЭлементФормы.ТекстЗаголовка);
	КонецЕсли;	 
	
	Возврат Рез;
КонецФункции	

&НаКлиенте
Функция ПолучитьЭлементыФормыИерархически(Элементформы,МассивЗаголовковПолей,МассивЗаголовковКнопок)
	Рез = Новый Массив;
	
	НайденныеОбъекты = Элементформы.ПолучитьПодчиненныеОбъекты();
	Для каждого Элем Из НайденныеОбъекты Цикл
		//Сообщить(""Получаю ПодчиненныеОбъекты для "" + Элем.Имя);
		
		
		
		Если ТипЗнч(Элементформы) = Тип(""ТестируемаяФорма"") Тогда
			СвойстваОбъекта = ПолучитьСвойстваОбъекта(Элем,МассивЗаголовковПолей,МассивЗаголовковКнопок,Элементформы.ИмяФормы);
		ИначеЕсли ТипЗнч(Элементформы) = Тип(""ТестируемаяТаблицаФормы"") Тогда
			Продолжить;
		Иначе	
			СвойстваОбъекта = ПолучитьСвойстваОбъекта(Элем,МассивЗаголовковПолей,МассивЗаголовковКнопок,Элементформы.Имя);
		КонецЕсли;	 
		
		Рез.Добавить(СвойстваОбъекта);
		
		ПодчиненныеОбъекты = ПолучитьЭлементыФормыИерархически(Элем,МассивЗаголовковПолей,МассивЗаголовковКнопок);
		СвойстваОбъекта.Вставить(""ПодчиненныеОбъекты"",ПодчиненныеОбъекты);
		
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Процедура ДобавитьСостояниеФормыTestclient(ТекущаяФорма)
	СостояниеФормы = Новый Структура;
	СостояниеФормы.Вставить(""ИмяФормы"",ТекущаяФорма.ИмяФормы);
	СостояниеФормы.Вставить(""ТекстЗаголовка"",ТекущаяФорма.ТекстЗаголовка);
	МассивЗаголовковПолей = Новый Массив;
	СостояниеФормы.Вставить(""МассивЗаголовковПолей"",МассивЗаголовковПолей);
	
	МассивЗаголовковКнопок = Новый Массив;
	СостояниеФормы.Вставить(""МассивЗаголовковКнопок"",МассивЗаголовковКнопок);
	
	
	МассивСостояниеФормTestClient.Добавить(СостояниеФормы);
	Попытка
		
		МассивОбъектов = ПолучитьЭлементыФормыИерархически(ТекущаяФорма,МассивЗаголовковПолей,МассивЗаголовковКнопок);
		
	Исключение
		Сообщить(""ДобавитьСостояниеФормыTestclient:"" + ОписаниеОшибки());
	КонецПопытки;
	
	СостояниеФормы.Вставить(""МассивОбъектов"",МассивОбъектов);
	Отладка(""Добавил форму: "" + ТекущаяФорма.ИмяФормы);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСостояниеТекущейФормыTestClient()
	ОкноПриложения = ПолучитьАктивноеОкноИзТестовоеПриложение();
	МассивФорм     = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		ИмяТекущейФормыTestClient = ТекущаяФорма.ИмяФормы;
		
		Если ЭтаФормаTestClientУжеОбрабатывалась(ИмяТекущейФормыTestClient) Тогда
			Возврат;
		КонецЕсли;	 
		
		ДобавитьСостояниеФормыTestclient(ТекущаяФорма);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОпросЭлементовФормTestClient()
	Если ИдетОпросЭлементовФормTestClient Тогда
		Возврат;
	КонецЕсли;	 
	
	ИдетОпросЭлементовФормTestClient = Истина;
	Попытка
		ЗаполнитьСостояниеТекущейФормыTestClient();
	Исключение
		Отладка("""" + ОписаниеОшибки());
	КонецПопытки;
	
	ИдетОпросЭлементовФормTestClient = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьДействийПользователя() Экспорт 
	ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий();
	Попытка
		ОбъектКонтекстСохраняемый.ТестовоеПриложение.НачатьЗаписьЖурналаДействийПользователя();
		СделатьСообщение(""Запись действий пользователя начата."");
	Исключение
		Сообщить(""НачатьЗаписьДействийПользователя:"" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ИдетОпросЭлементовФормTestClient = Ложь;
	МассивСостояниеФормTestClient    = Новый Массив;
	ПодключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"", 1);
КонецПроцедуры



&НаКлиенте
Процедура НачатьЗаписьДействийПользователяКнопка(Команда)
	НачатьЗаписьДействийПользователя();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКод1СИзUILogToScriptСервер(ДвоичныеДанные,Стр)
	ИмяВременногоEPF = ПолучитьИмяВременногоФайла(""epf"");
	ДвоичныеДанные.Записать(ИмяВременногоEPF);
	
	Обработка                           = ВнешниеОбработки.Создать(ИмяВременногоEPF);
	Обработка.ObjectSearch              = 2;
	Обработка.SplitScriptIntoProcedures = Истина;
	Обработка.MainProcedureName         = ""ВыполнитьДействия"";
	
	Возврат Обработка.Convert(Стр);
	
КонецФункции	

&НаКлиенте
Процедура ОбработатьПолученныйКодUILogToScript(Стр)
	Стр = СтрЗаменить(Стр,""ТестовоеПриложение.НайтиОбъект"",""КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект"");
	Стр = СтрЗаменить(Стр,""ТестовоеПриложение.ПолучитьПодчиненныеОбъекты()"",""КонтекстСохраняемый.ТестовоеПриложение.ПолучитьПодчиненныеОбъекты()"");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПервоеКлючевоеСлово(СчетчикДействий,ТипДействия = Неопределено)
	СчетчикДействий = СчетчикДействий + 1;
	Если (СчетчикДействий > 1) и (ТипДействия = ""ОткрытиеОкна"") Тогда
		Возврат ""	Тогда"";
	КонецЕсли;	 
	
	Если СчетчикДействий = 1 Тогда
		Возврат ""	Когда"";
	Иначе
		Возврат ""	И    "";
	КонецЕсли;	 
КонецФункции	

&НаКлиенте
Функция ПолучитьТекстФичиИзКодаUILogToScriptOld(Знач Стр)
	Результат = ""# encoding: utf-8
	|# language: ru
	|
	|Функционал: <описание фичи>
	|
	|Как <Роль> я хочу
	|<описание функционала> 
	|чтобы <бизнес-эфект> 
	|
	|Сценарий: <описание сценария> 
	|
	|"";
	
	
	
	ИмяФайла = ПолучитьИмяВременногоФайла(""txt"");
	ЗТ = Новый ЗаписьТекста(ИмяФайла,""UTF-8"",,Истина); 
	ЗТ.ЗаписатьСтроку(Стр); 
	ЗТ.Закрыть();
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	
	СтрПоиска = """";
	
	ТипДействия = """";
	ИмяОкнаТестируемоеОкноКлиентскогоПриложения = """";
	ИмяТестируемойФормы                         = """";
	ИмяЭлементаФормы                            = """";
	СчетчикДействий                             = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Найти(НРег(Стр),НРег(""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса"""")"")) > 0 Тогда
			//это нажатие кнопки командного интерфейса
			ТипДействия = ""ТестируемаяКнопкаКомандногоИнтерфейса"";
			Поз = Найти(НРег(Стр),НРег(""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса"""")""));
			
			ПромСтр = Сред(Стр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса""""),"","""");
			
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			ПромСтр = СокрЛП(ПромСтр);
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я нажимаю кнопку командного интерфейса """""" + ПромСтр + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр),НРег(""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения"""")"")) > 0 Тогда
			//это работа с открытым окном
			Поз = Найти(НРег(Стр),НРег(""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения"""")""));
			
			ПромСтр = Сред(Стр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения""""),"","""");
			
			Поз = Найти(ПромСтр,"""""","");
			ПромСтр = Лев(ПромСтр,Поз);
			
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяОкнаТестируемоеОкноКлиентскогоПриложения = ПромСтр;
			
		ИначеЕсли Найти(НРег(Стр),НРег("".НайтиОбъект(Тип(""""ТестируемаяФорма"""")"")) > 0 Тогда
			Поз = Найти(НРег(Стр),НРег("".НайтиОбъект(Тип(""""ТестируемаяФорма"""")""));
			
			ПромСтр = Сред(Стр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,"".НайтиОбъект(Тип(""""ТестируемаяФорма""""),"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяТестируемойФормы = ПромСтр;
		ИначеЕсли Найти(НРег(Стр),НРег(""ТаблицаСписок.Выбрать();"")) > 0 Тогда
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В окне """""" + ИмяОкнаТестируемоеОкноКлиентскогоПриложения + """""" в форме списка """""" + ИмяТестируемойФормы + """""" я выбираю текущий элемент."" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр),НРег("".НайтиОбъект(Тип(""""ТестируемоеПолеФормы"""")"")) > 0 Тогда
			Массив  = РазложитьСтрокуВМассивПодстрок(Стр,"","");
			ПромСтр = Массив[Массив.Количество()-1];
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяЭлементаФормы = ПромСтр;
		ИначеЕсли Найти(НРег(Стр),НРег("".ВвестиТекст("")) > 0 Тогда
			ПромСтр = Стр;
			Поз     = Найти(ПромСтр,"".ВвестиТекст("");
			ПромСтр = Сред(ПромСтр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,"".ВвестиТекст("","""");
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			
			ЗначениеВвода = ПромСтр;
			

			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле """""" + ИмяЭлементаФормы + """""" я ввожу значение """""" + ЗначениеВвода + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр),НРег("".ВыполнитьВыборИзСпискаВыбора("")) > 0 Тогда
			ПромСтр = Стр;
			Поз     = Найти(ПромСтр,"".ВыполнитьВыборИзСпискаВыбора("");
			ПромСтр = Сред(ПромСтр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,"".ВыполнитьВыборИзСпискаВыбора("","""");
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			
			ЗначениеВвода = ПромСтр;
			

			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в выпадающем списке """""" + ИмяЭлементаФормы + """""" я ввожу значение """""" + ЗначениеВвода + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр),НРег("".ВыполнитьВыборИзВыпадающегоСписка("")) > 0 Тогда
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" у поля """""" + ИмяЭлементаФормы + """""" я открываю форму выбора"" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр),НРег("".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"")) > 0 Тогда
			
			Поз = Найти(Стр,"".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"");
			ПромСтр = Сред(Стр,Поз);
			ПромСтр = СтрЗаменить(ПромСтр,"".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"","""");
			
			Поз = Найти(ПромСтр,"""""", "");
			ПромСтр = Лев(ПромСтр,Поз);
			
			ПромСтр = СтрЗаменить(ПромСтр,"");"","""");
			ПромСтр = СтрЗаменить(ПромСтр,"""""""","""");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяКнопки = ПромСтр;
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку """""" + ИмяКнопки + """""""" + Символы.ПС;
		КонецЕсли;	 
	КонецЦикла;	
	
	Текст.Закрыть();
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура ДобавитьУзел(МассивОбъектов,МассивСвойств,ИдВМассиве,Имя);
	ИдВМассиве                 = ИдВМассиве + 1;
	МассивОбъектов[ИдВМассиве] = Имя;
	МассивСвойств [ИдВМассиве] = Новый Соответствие;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьУзел(МассивОбъектов,МассивСвойств,ИдВМассиве,Имя);
	МассивОбъектов[ИдВМассиве] = Неопределено;
	МассивСвойств [ИдВМассиве] = Неопределено;
	ИдВМассиве                 = ИдВМассиве - 1;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПараметрыВСтрокеПримера(Знач Стр)
	Массив = Новый Массив;
	
	Стр = СокрЛП(Стр);
	Если Лев(Стр,1) <> ""|"" Тогда
		Возврат Массив;
	КонецЕсли;	 
	
	Если Прав(Стр,1) <> ""|"" Тогда
		Возврат Массив;
	КонецЕсли;	 
	
	Стр = Сред(Стр,2);
	Стр = Сред(Стр,1,СтрДлина(Стр)-1);
	//убрали символы |
	
	Массив = РазложитьСтрокуВМассивПодстрок(Стр,""|"");
	
	Для Ккк = 0 По Массив.Количество()-1 Цикл
		Массив[Ккк] = СокрЛП(Массив[Ккк]);
	КонецЦикла;
	
	Спс = Новый СписокЗначений;
	Для каждого Элем Из Массив Цикл
		Спс.Добавить(Элем);
	КонецЦикла;
	
	Возврат  Спс;
КонецФункции

&НаКлиенте
Процедура ФорматироватьСтрокиТаблицыПараметровШага(МассивТаблицы)
	МассивПараметров = ОпределитьПараметрыВСтрокеПримера(МассивТаблицы[0]);
	КолПараметров = МассивПараметров.Количество();
	МассивДлин = Новый Массив;
	Для каждого Элем Из МассивПараметров Цикл
		МассивДлин.Добавить(0);
	КонецЦикла;
	
	Для каждого СтрТзн Из МассивТаблицы Цикл
		МассивПараметров = ОпределитьПараметрыВСтрокеПримера(СтрТзн);
		
		Для Ккк = 0 По МассивДлин.Количество()-1 Цикл
			ДлинаСтроки = СтрДлина(СокрЛП(МассивПараметров.Получить(Ккк)));
			Если ДлинаСтроки > МассивДлин[Ккк] Тогда
				МассивДлин[Ккк] = ДлинаСтроки;
			КонецЕсли;	 
		КонецЦикла;
	КонецЦикла;
	
	Для Ррр = 0 по 1 Цикл
		СтрТзн = МассивТаблицы[Ррр];
		МассивПараметров = ОпределитьПараметрыВСтрокеПримера(СтрТзн);
		СтрПараметров = ""| "";
		Для Ккк = 0 По МассивДлин.Количество()-1 Цикл
			Зн = СокрЛП(МассивПараметров[Ккк]);
			Пока СтрДлина(Зн) < МассивДлин[Ккк] Цикл
				Зн = Зн + "" "";
			КонецЦикла;
			СтрПараметров = СтрПараметров + Зн + "" | "";
		КонецЦикла;
		
		СтрПараметров = СокрЛП(СтрПараметров);
		
		МассивТаблицы[Ррр] = СтрПараметров;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(Текст,Стр1,Стр2)
	СтрокаТекста = Текст.ПолучитьСтроку(Текст.КоличествоСтрок());
	
	Если Найти(СтрокаТекста,Стр1) = 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Найти(СтрокаТекста,Стр2) = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Текст.УдалитьСтроку(Текст.КоличествоСтрок());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковПолей)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""Заголовок"");
	
	
	Для Н=1 По МассивЗаголовковПолей.Количество() Цикл
		Тзн.Добавить();
	КонецЦикла;	
	
	Тзн.ЗагрузитьКолонку(МассивЗаголовковПолей,""Заголовок"");
	
	Тзн.Колонки.Добавить(""Кол"");
	
	
	
	Для каждого СтрТзн Из Тзн Цикл
		СтрТзн.Кол = 1;
	КонецЦикла;
	
	
	Тзн.Свернуть(""Заголовок"",""Кол"");
	
	Рез = Новый Массив;
	Для каждого СтрТзн Из Тзн Цикл
		Если СтрТзн.Кол > 1 Тогда
			Рез.Добавить(СтрТзн.Заголовок);
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Рез;
КонецФункции	


&НаКлиенте
Функция ПреобразоватьМассивСостояниеФормTestClient(МассивСостояниеФорм)
	
	Массив = Новый Массив;
	
	Если МассивСостояниеФорм = Неопределено Тогда
		Возврат Массив;
	КонецЕсли;	 
	
	Для каждого СостояниеФормы Из МассивСостояниеФорм Цикл
		Рез = Новый Структура;
		Рез.Вставить(""ИмяФормы"",СостояниеФормы.ИмяФормы);
		Рез.Вставить(""ТекстЗаголовка"",СостояниеФормы.ТекстЗаголовка);
		
		МассивЗаголовковПолей = СостояниеФормы.МассивЗаголовковПолей;
		МассивДублирующихсяЗаголовоковПолей = ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковПолей);
		Рез.Вставить(""МассивДублирующихсяЗаголовоковПолей"",МассивДублирующихсяЗаголовоковПолей);
		
		МассивЗаголовковКнопок = СостояниеФормы.МассивЗаголовковКнопок;
		МассивДублирующихсяЗаголовоковКнопок = ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковКнопок);
		Рез.Вставить(""МассивДублирующихсяЗаголовоковКнопок"",МассивДублирующихсяЗаголовоковКнопок);
		//Для каждого Элем Из МассивДублирующихсяЗаголовоковПолей Цикл
		//	Сообщить(""Дубль: "" + Элем);
		//КонецЦикла;
		
		Массив.Добавить(Рез);
		
	КонецЦикла;
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Функция СтрокиРавныСУчётомЗвёздочек(Знач Стр1,Знач Стр2)
	//основная строка первая
	Массив1 = РазложитьСтрокуВМассивПодстрок(Стр1,"" "");
	Массив2 = РазложитьСтрокуВМассивПодстрок(Стр2,"" "");
	
	
	Если Массив1.Количество() = (Массив2.Количество()+1) Тогда
		Если Массив1[Массив1.Количество()-1] = ""*"" Тогда //значит тут последний символ *
			Массив1.Удалить(Массив1.Количество()-1);
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если Массив1.Количество() <> Массив2.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Для Ккк = 0 По Массив1.Количество()-1 Цикл
		С1 = Массив1[Ккк];
		С2 = Массив2[Ккк];
		Если С1 = С2 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если С1 = ""*"" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Возврат Ложь;
	
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции	 

&НаКлиенте
Функция ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм,ТекущаяФормаЗаголовок,ЗаголовокПоля,ТипОбъекта)
	Для каждого СтруктураФормы Из МассивСтруктурФорм Цикл
		Если СтрокиРавныСУчётомЗвёздочек(ТекущаяФормаЗаголовок,СтруктураФормы.ТекстЗаголовка) Тогда
			Если ТипОбъекта = ""ПолеФормы"" Тогда
				Если СтруктураФормы.МассивДублирующихсяЗаголовоковПолей.Найти(ЗаголовокПоля) <> Неопределено Тогда
					Отладка(""Поле """""" + ЗаголовокПоля + """""" имеет дубли с таким же заголовком. Поиск будет происходить по имени."");
					Возврат Истина;
				КонецЕсли;	 
			ИначеЕсли ТипОбъекта = ""Кнопка"" Тогда
				Если СтруктураФормы.МассивДублирующихсяЗаголовоковКнопок.Найти(ЗаголовокПоля) <> Неопределено Тогда
					Отладка(""Кнопка """""" + ЗаголовокПоля + """""" имеет дубли с таким же заголовком. Поиск будет происходить по имени."");
					Возврат Истина;
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЕсли;	 
		//Сообщить(""Сохранено: "" + СтруктураФормы.ТекстЗаголовка);
	КонецЦикла;
	
	//Сообщить(""Передано "" + ТекущаяФормаЗаголовок);
	
	Возврат Ложь;
КонецФункции	

&НаКлиенте
Функция ПолучитьТекстФичиИзДействийПользователя(Результат)
	ИмяВременногоXML = ПолучитьИмяВременногоФайла(""xml"");
	
	МассивСтруктурФорм = ПреобразоватьМассивСостояниеФормTestClient(МассивСостояниеФормTestClient);
	
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоXML,""UTF-8"",,Истина); 
	ЗТ.Записать(Результат); 
	ЗТ.Закрыть();
	
	ТекстРезультат = Новый ТекстовыйДокумент;
	
	XML = Новый ЧтениеXML;
	XML.ОткрытьФайл(ИмяВременногоXML);
	
	МассивОбъектов = Новый Массив(100);
	МассивСвойств  = Новый Массив(МассивОбъектов.Количество());
	ИдВМассиве     = -1;
	
	СчетчикДействий      = 0;
	ТаблицаСвойствСтроки = Неопределено;
	
	ТекущееОкно  = """";
	ТекущаяФорма = """";
	ТекущаяТЧ    = """";
	Пока XML.Прочитать() Цикл
		
		ИмяУзла = XML.Имя;
		Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ДобавитьУзел(МассивОбъектов,МассивСвойств,ИдВМассиве,ИмяУзла);
			Если (ИмяУзла = ""gotoRow"") или (ИмяУзла = ""expand"") или (ИмяУзла = ""collapse"") Тогда
				ТаблицаСвойствСтроки = Новый Массив();
			ИначеЕсли ИмяУзла = ""Field"" Тогда
				СвойствоСтроки = Новый Соответствие;
			КонецЕсли;	 
			Пока XML.ПрочитатьАтрибут() Цикл
				МассивСвойств[ИдВМассиве].Вставить(XML.Имя,XML.Значение);
				
				Если ИмяУзла = ""Field"" Тогда
					СвойствоСтроки.Вставить(XML.Имя,XML.Значение);
				КонецЕсли;	 
			КонецЦикла;
			
			Если ИмяУзла = ""Form"" Тогда
				ТекущаяФорма = МассивСвойств[ИдВМассиве][""title""];
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ТекущееОкно  = МассивСвойств[ИдВМассиве][""caption""];
			ИначеЕсли ИмяУзла = ""FormTable"" Тогда
				ТекущаяТЧ = МассивСвойств[ИдВМассиве][""name""];
			КонецЕсли;	 
			
			Если ИмяУзла = ""click"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""CommandInterfaceButton"" Тогда
					Если НРег(МассивСвойств[1][""isMain""]) = ""true"" Тогда
						Если МассивСвойств[ИдВМассиве-2][""title""] = ""Панель разделов"" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В панели разделов я выбираю """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
						ИначеЕсли (МассивСвойств[ИдВМассиве-2][""title""] = ""Меню функций"") или (МассивСвойств[ИдВМассиве-3][""title""] = ""Меню функций"") Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В панели функций я выбираю """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я нажимаю кнопку командного интерфейса """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
						КонецЕсли;	 
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В текущем окне я нажимаю кнопку командного интерфейса """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
					КонецЕсли;	 
					
				ИначеЕсли МассивОбъектов[ИдВМассиве-1] = ""FormButton"" Тогда	
					ЗаголовокОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					ИмяОбъекта = """""""" + ЗаголовокОбъекта + """""""";
					Если (СокрЛП(ЗаголовокОбъекта) = """") или (ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм,ТекущаяФорма,ЗаголовокОбъекта,""Кнопка"")) Тогда
						ИмяОбъекта = ""с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""""";
					КонецЕсли;	 
					
					ДобавитьОбычнуюСтроку = Истина;
					Если ТекущаяТЧ = """" Тогда
						ДобавитьОбычнуюСтроку = Истина;
						//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку "" + ИмяОбъекта);
					Иначе	
						//Name = МассивСвойств[ИдВМассиве-1][""name""];
						//Если Name <> Неопределено Тогда
						//	Если Лев(НРег(Name),14) = ""табличнаячасть"" Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я нажимаю на кнопку "" + ИмяОбъекта);
								ДобавитьОбычнуюСтроку = Ложь;
						//	КонецЕсли;	 
						//КонецЕсли;	 
					КонецЕсли;	
					
					Если ДобавитьОбычнуюСтроку Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку "" + ИмяОбъекта);
					КонецЕсли;	 
					
				ИначеЕсли (МассивОбъектов[ИдВМассиве-1] = ""FormField"") или (МассивОбъектов[ИдВМассиве-1] = ""FormDecoration"") Тогда	
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на гиперссылку с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на гиперссылку """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""close"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я закрываю окно """""" + МассивСвойств[ИдВМассиве-1][""caption""] + """""""");
			ИначеЕсли ИмяУзла = ""choose"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В форме """""" + ТекущаяФорма + """""" в ТЧ """""" + ТекущаяТЧ + """""" я выбираю текущую строку"");
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""startChoosing"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я нажимаю кнопку выбора у реквизита с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я нажимаю кнопку выбора у реквизита """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				Иначе	
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если (СокрЛП(ИмяОбъекта) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм,ТекущаяФорма,ИмяОбъекта,""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку выбора у поля """""" + ИмяОбъекта + """""""");
					Иначе	
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку выбора у поля с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""clear"" Тогда
				ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
				Если (СокрЛП(ИмяОбъекта) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм,ТекущаяФорма,ИмяОбъекта,""ПолеФормы"")) Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку очистить у поля """""" + ИмяОбъекта + """""""");
				Иначе	
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку очистить у поля с именем """""" + ИмяОбъекта + """""""");
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""endEditRow"" Тогда
				//Если МассивОбъектов[ИдВМассиве-1] = ""FormTable"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					Если МассивСвойств[ИдВМассиве][""cancel""] = ""false"" Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В форме """""" + ТекущаяФорма + """""" в ТЧ """""" + ТекущаяТЧ + """""" я завершаю редактирование строки"");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""addRow"" Тогда
				//Если МассивОбъектов[ИдВМассиве-1] = ""FormTable"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я добавляю новую строку"");
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""open"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку открытия поля с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку открытия поля """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""openDropList"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я открываю выпадающий список с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я открываю выпадающий список """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""executeChoiceFromChoiceList"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					Если ТекущаяТЧ <> """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
						Если СокрЛП(ИмяОбъекта) = """" Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" из выпадающего списка с именем """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" из выпадающего списка """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
						КонецЕсли;	 
					Иначе	
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
						Если СокрЛП(ИмяОбъекта) = """" Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка с именем """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
							//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" из выпадающего списка с именем """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
							//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" из выпадающего списка """""" + ИмяОбъекта + """""" я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
						КонецЕсли;	 
					КонецЕсли;	 
				Иначе	
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка я выбираю """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
				КонецЕсли;	
				
			ИначеЕсли ИмяУзла = ""executeChoiceFromDropList"" Тогда
				ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
				//Если МассивОбъектов[ИдВМассиве-2] = ""FormTable"" Тогда
				Если ТекущаяТЧ <> """" Тогда	
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я выбираю значение реквизита с именем """""" + ИмяОбъекта + """""" из формы списка"");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я выбираю значение реквизита """""" + ИмяОбъекта + """""" из формы списка"");
					КонецЕсли;	 
				Иначе	
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю значение реквизита с именем """""" + ИмяОбъекта + """""" из формы списка"");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю значение реквизита """""" + ИмяОбъекта + """""" из формы списка"");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""activate"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к закладке с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к закладке """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
					
				ИначеЕсли МассивОбъектов[ИдВМассиве-1] = ""FormField"" и ЗначениеЗаполнено(ТекущаяТЧ) Тогда
					//активировали колонку ТЧ
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я активизирую поле с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я активизирую поле """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
				
			ИначеЕсли ИмяУзла = ""expand"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат,"" я перехожу к закладке"",ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я разворачиваю группу с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						
						
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат,"" я перехожу к закладке"",ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я разворачиваю группу """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
				
			ИначеЕсли ИмяУзла = ""collapse"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве-1][""name""];
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат,"" я перехожу к закладке"",ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я сворачиваю группу с именем """""" + ИмяОбъекта + """""""");
					Иначе	
						
						
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат,"" я перехожу к закладке"",ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я сворачиваю группу """""" + ИмяОбъекта + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
				
			ИначеЕсли ИмяУзла = ""goOneLevelDown"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ  """""" + ТекущаяТЧ + """""" я перехожу на одну строку вниз"");
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""selectOption"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					Если СокрЛП(МассивСвойств[ИдВМассиве-1][""title""]) <> """" Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я меняю значение переключателя """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""" на """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
					Иначе	
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я меняю значение переключателя с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""" на """""" + МассивСвойств[ИдВМассиве][""presentation""] + """""""");
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""inputText"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					//Если МассивОбъектов[ИдВМассиве-2] = ""FormTable"" Тогда
					ЗаголовокПоля = МассивСвойств[ИдВМассиве-1][""title""];
					Если ТекущаяТЧ <> """" Тогда	
						Если СокрЛП(ЗаголовокПоля) <> """" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" в поле """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""" я ввожу текст """""" + МассивСвойств[ИдВМассиве][""text""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" в поле с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""" я ввожу текст """""" + МассивСвойств[ИдВМассиве][""text""] + """""""");
						КонецЕсли;	 
					Иначе	
						Если (СокрЛП(ЗаголовокПоля) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм,ТекущаяФорма,ЗаголовокПоля,""ПолеФормы"")) Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""" я ввожу текст """""" + МассивСвойств[ИдВМассиве][""text""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""" я ввожу текст """""" + МассивСвойств[ИдВМассиве][""text""] + """""""");
						КонецЕсли;	 
					КонецЕсли; 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""setCheck"" Тогда
				Если МассивОбъектов[ИдВМассиве-1] = ""FormField"" Тогда
					//Если МассивОбъектов[ИдВМассиве-2] = ""FormTable"" Тогда
					Если ТекущаяТЧ <> """" Тогда		
						Если СокрЛП(МассивСвойств[ИдВМассиве-1][""title""]) <> """" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я изменяю флаг """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в ТЧ """""" + ТекущаяТЧ + """""" я изменяю флаг с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""""");
						КонецЕсли;	 
					Иначе	
						Если СокрЛП(МассивСвойств[ИдВМассиве-1][""title""]) <> """" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я изменяю флаг """""" + МассивСвойств[ИдВМассиве-1][""title""] + """""""");
						Иначе	
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я изменяю флаг с именем """""" + МассивСвойств[ИдВМассиве-1][""name""] + """""""");
						КонецЕсли;	 
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ИмяОкна = МассивСвойств[ИдВМассиве][""caption""];
				Если ИмяОкна <> Неопределено Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий,""ОткрытиеОкна"") + "" открылось окно """""" + ИмяОкна + """""""");
				КонецЕсли;	 
			ИначеЕсли ИмяУзла = ""gotoNextItem"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к следующему реквизиту"");					
			КонецЕсли;
		КонецЕсли;
		
		Если XML.ТипУзла = ТипУзлаXML.Текст Тогда
			//Сообщить(""Текст: "" + XML.Значение); 
		КонецЕсли;
		
		Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда 
			Если ИмяУзла = ""Form"" Тогда
				ТекущаяФорма = """";
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ТекущееОкно = """";
			ИначеЕсли ИмяУзла = ""FormTable"" Тогда
				ТекущаяТЧ = """";
			КонецЕсли;	 
			
			Если ИмяУзла = ""gotoRow"" Тогда
				Стр1 = ""| "";
				Для каждого СвойствоСтроки Из ТаблицаСвойствСтроки Цикл
					Если СокрЛП(СвойствоСтроки[""cellText""]) = """" Тогда
						Продолжить;
					КонецЕсли;	 
					Стр1 = Стр1 + "" '"" +  СвойствоСтроки[""title""] + ""' |"";
				КонецЦикла;
				
				Стр2 = ""| "";
				
				Для каждого СвойствоСтроки Из ТаблицаСвойствСтроки Цикл
					Если СокрЛП(СвойствоСтроки[""cellText""]) = """" Тогда
						Продолжить;
					КонецЕсли;	 
					Стр2 = Стр2 + "" '"" + СвойствоСтроки[""cellText""] + ""' |"";
				КонецЦикла;
				
				//Стр1 = СтрЗаменить(Стр1,"""""""",""&quot;"");
				//Стр2 = СтрЗаменить(Стр2,"""""""",""&quot;"");
				
				МассивТаблицы = Новый Массив();
				МассивТаблицы.Добавить(Стр1);
				МассивТаблицы.Добавить(Стр2);
				
				ФорматироватьСтрокиТаблицыПараметровШага(МассивТаблицы);
				
				Стр = ""	"" + МассивТаблицы[0] + Символы.ПС + ""	"" + МассивТаблицы[1];
				
				
				Если ТаблицаСвойствСтроки.Количество() > 0 Тогда
					//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В форме """""" + МассивСвойств[ИдВМассиве-2][""title""] + """""" в таблице """""" + МассивСвойств[ИдВМассиве-1][""title""] +  """""" я перехожу к строке """""" + Стр + """""""");
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В форме """""" + ТекущаяФорма + """""" в таблице """""" + МассивСвойств[ИдВМассиве-1][""name""] +  """""" я перехожу к строке:"");
					ТекстРезультат.ДобавитьСтроку(Стр);
				КонецЕсли;	 
				
			ИначеЕсли ИмяУзла = ""Field"" Тогда
				ТаблицаСвойствСтроки.Добавить(СвойствоСтроки);
			КонецЕсли;	 
			
			
			УдалитьУзел(МассивОбъектов,МассивСвойств,ИдВМассиве,XML.Имя);
			//Сообщить(""КонецЭлемента."");
		КонецЕсли; 
	КонецЦикла; 
	XML.Закрыть();
	
	ТекстРезультатКод = Новый ТекстовыйДокумент;
	
	Для НомерСтроки = 1 По ТекстРезультат.КоличествоСтрок() Цикл
		СтрокаТекста = СокрЛП(ТекстРезультат.ПолучитьСтроку(НомерСтроки));
		СтрокаТекста = СтрЗаменить(СтрокаТекста, """""""", """""""""""");
		ТекстРезультатКод.ДобавитьСтроку(""Ванесса.Шаг(""""""+СтрокаТекста+"""""");"");
	КонецЦикла;
	СгенерированныйСценарийКод = ТекстРезультатКод.ПолучитьТекст();
	
	ТекстРезультат.ВставитьСтроку(1, ""
	|# encoding: utf-8
	|# language: ru
	|
	|Функционал: <описание фичи>
	|
	|Как <Роль>
	|Я хочу <описание функционала> 
	|Чтобы <бизнес-эффект> 
	|
	|Контекст: 
	|	Дано Я запускаю сценарий открытия TestClient или подключаю уже существующий
	|
	|
	|Сценарий: <описание сценария> 
	|"");
	
	СгенерированныйСценарий = ТекстРезультат.ПолучитьТекст();
	
КонецФункции	

&НаКлиенте
Процедура ЗавершитьЗаписьДействийПользователя() Экспорт
	ОтключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"");
	Попытка
		Стр = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ЗавершитьЗаписьЖурналаДействийПользователя();
		СделатьСообщение(""Запись действий пользователя закончена."");
	Исключение
		Сообщить(""ЗавершитьЗаписьДействийПользователя:"" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку(Стр);
	
	СгенерированныйXML = Текст.ПолучитьТекст();
	
	Попытка
		ПутьКОбработке = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""vendor/1C/UILogToScript.epf"";
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКОбработке);
		Результат = ПолучитьКод1СИзUILogToScriptСервер(ДвоичныеДанные,Стр);
		
		ОбработатьПолученныйКодUILogToScript(Результат);
		
		Текст = Новый ТекстовыйДокумент;
		Текст.ДобавитьСтроку(Результат);
		
		СгенерированныйКод = Текст.ПолучитьТекст();
		
	Исключение
		Сообщить(""Не смог обработать XML в UILogToScript."");
		Сообщить(""ЗавершитьЗаписьДействийПользователя2:"" + ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		ПолучитьТекстФичиИзДействийПользователя(Стр);
	Исключение
		Сообщить(""Ошибка при получении текста фичи:"");
		Сообщить(""ЗавершитьЗаписьДействийПользователя:"" + ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьЗаписьДействийПользователяКнопка(Команда)
	ЗавершитьЗаписьДействийПользователя();
КонецПроцедуры

&НаКлиенте
Процедура КаталогФичНажатие(Элемент, СтандартнаяОбработка)
	Отладка("""" + Объект.КаталогФич);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПодключитьУжеЗапущенныйTestClient()
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если НЕ ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Попытка
			ТестовоеПриложение = СоздатьТестовоеПриложение();
			ТестовоеПриложение.УстановитьСоединение();
			ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
			
			Возврат Истина;
		Исключение
			Возврат Ложь;		
		КонецПопытки;
		
		Возврат Ложь;
	КонецЕсли;	 
	
	ТестовоеПриложение = ОбъектКонтекстСохраняемый.ТестовоеПриложение;
	
	Если ТестовоеПриложение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Попытка
		ТестовоеПриложение.УстановитьСоединение();
		ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
		Если ГлавноеОкноТестируемого = Неопределено Тогда
			//ВызватьИсключение ""Не смог найти ГлавноеОкноТестируемого у уже подключенного TestClient."";
			Возврат Ложь;
		КонецЕсли;	 
		ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
	Исключение
		Попытка
			ТестовоеПриложение.РазорватьСоединение();
			ОбъектКонтекстСохраняемый.ТестовоеПриложение = Неопределено;
		Исключение
		
		КонецПопытки;
		
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции	

&НаКлиенте
Процедура ЗапуститьСеансTestClient(ДопПараметр = """")
	//СисИнфо = Новый СистемнаяИнформация; 
	//ВерсияПриложения = СисИнфо.ВерсияПриложения;
	
	//ПутьК1С = ""C:\Program Files (x86)\1cv8\"" + ВерсияПриложения + ""\bin\1cv8.exe"";
	//ФайлПроверкаСуществования = Новый Файл(ПутьК1С);
	
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	Если Найти(ВРег(КаталогБазы),ВРег(""File="")) > 0 Тогда
		КаталогБазы = СтрЗаменить(КаталогБазы,""File="","" /F"");
	Иначе
		КаталогБазы = СтрЗаменить(КаталогБазы,""Srvr="",""/S"");
		КаталогБазы = СтрЗаменить(КаталогБазы,"""""";Ref="""""",""\"");
	КонецЕсли;
	КаталогБазы = СтрЗаменить(КаталогБазы,"";"","""");
	
	ПараметрыОтладчика = """";
	Если Объект.ЗапускатьТестКлиентВРежимеОтладки Тогда
		// /debug -http -attach /debuggerURL ""http://localhost:1560""
		ПараметрыОтладчика = ""/debug "" + Объект.КлючиОтладки + "" /debuggerURL """""" + Объект.АдресОтладчика + """"""""; 
	КонецЕсли;
	
	СтрокаЗапуска1с = КаталогПрограммы() + ""1cv8c"";
	Если ЭтоLinux = Ложь Тогда
		СтрокаЗапуска1с = СтрокаЗапуска1с + "".exe"";
	Иначе
		КаталогБазы = СтрЗаменить(КаталогБазы, ""\"", ""/"");
	КонецЕсли;
		
	СтрокаЗапуска = """""""" + СтрокаЗапуска1с + """""" ENTERPRISE "" + КаталогБазы + ПараметрыОтладчика + "" /TESTCLIENT "";
	СтрокаЗапуска = СтрокаЗапуска + ""-TPort "" + Формат(Объект.ПортЗапускаТестКлиента,""ЧГ="") + "" "";	
	
 	Если ЭтоЗапускВРежимеКоманднойСтроки Тогда
		СтрокаЗапуска = СтрокаЗапуска + "" /CTemp "" + ДопПараметр;//добавил /CTemp, чтобы убрать передачу параметра в TestClient, с которым был запущен TestManager
 	Иначе
		СтрокаЗапуска = СтрокаЗапуска + ДопПараметр;	
 	КонецЕсли;		
	
	Отладка(""СтрокаЗапуска=""+СтрокаЗапуска);
	
	ЗапуститьСистему(СтрокаЗапуска);
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПортНаЗанятость(Знач Порт)
	
	Если Порт < 0 Или Порт > 65536 Тогда
		Порт = 1538;
	КонецЕсли;
	
	МассивЗанятыхПортов = ПолучитьМассивЗанятыхПортов();
	Если МассивЗанятыхПортов.Найти(Порт) <> Неопределено Тогда
		// найти свободный порт в диапазоне
		Для Счетчик = 48000 По 50000 Цикл
			Если МассивЗанятыхПортов.Найти(Счетчик) = Неопределено Тогда
				СвободныйПорт = Счетчик;
				Прервать;
			КонецЕсли;
		КонецЦикла;		
		Возврат СвободныйПорт;
	КонецЕсли;	
	
	Возврат Порт;

КонецФункции // ПолучитьСвободныйПорт()

&НаКлиенте
Функция ПолучитьМассивЗанятыхПортов()

	МассивЗанятыхПортов = Новый Массив;
	Если НЕ ЭтоLinux Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""txt"");
		ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
		
		ЗТ = Новый ЗаписьТекста(ИмяВременногоBat, ""windows-1251"",,Истина); 
		ЗТ.ЗаписатьСтроку(""chcp 1251"");
		ЗТ.ЗаписатьСтроку(""netstat -ano > "" + ИмяВременногоФайла + """"); 
		ЗТ.Закрыть();	
		
		Если WshShell = Неопределено Тогда
			WshShell	= Новый COMОбъект(""WScript.Shell"");
		КонецЕсли;	 
		Рез			= WshShell.Run(ИмяВременногоBAT,0,-1);
		WshShell	= Неопределено;
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоФайла,""UTF-8"");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если Стр = """" Тогда
				Продолжить;
			КонецЕсли;	 
			
			Порт_ = Сред(Сред(СокрЛП(Стр), 8), 1, Найти(Сред(СокрЛП(Стр), 8), ""  ""));
			Порт = """";
			Для НомерСимвола = 0 По СтрДлина(Порт_)-1 Цикл
				СимволСтроки = Сред(Порт_, СтрДлина(Порт_) - НомерСимвола, 1);
				Если СимволСтроки = "":"" Тогда
					Прервать;
				КонецЕсли;			
				Если Найти(""0123456789"", СимволСтроки) > 0 Тогда
					Порт = СимволСтроки + Порт;
				КонецЕсли;			
			КонецЦикла;
			
			Попытка
				Порт = Число(Порт);
				МассивЗанятыхПортов.Добавить(Порт);
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЦикла;	
		Текст.Закрыть();
	Иначе
		СтрокаЗапуска = ""ss -tuwan4 2>/dev/null | awk '{print $5}' | grep ':' | cut -d """":"""" -f 2 | sort | uniq"";// взято из #383
		Сообщить(""Получение списка свободных портов в Linux не реализована."");
		//ЗапуститьПриложение(СтрокаЗапуска);		
	КонецЕсли;
	
	Возврат МассивЗанятыхПортов;

КонецФункции // ПолучитьЗанятыеПорты()

&НаКлиенте
Функция ПолучитьМассивPIDПроцессов(ИмяОбраза) Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""txt"");
	ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоBat,""windows-1251"",,Истина); 
	ЗТ.ЗаписатьСтроку(""chcp 65001""); 
	ЗТ.ЗаписатьСтроку(""tasklist /v /fo list /fi """"imagename eq "" + ИмяОбраза + """""" > """""" + ИмяВременногоФайла + """"""""); 
	ЗТ.Закрыть();
	
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(ИмяВременногоBat);
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяВременногоФайла,""UTF-8"");
	
	МассивProcessID = Новый Массив;
	ProcessID = Неопределено;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Стр = НРег(Стр);
		Если Лев(Стр,4) = ""pid:"" Тогда
			ProcessID = СокрЛП(Сред(Стр,5));
		КонецЕсли;	 
		
		Если ProcessID <> Неопределено Тогда
			Если (Лев(Стр,15) = ""заголовок окна:"") или (Лев(Стр,13) = ""window title:"") Тогда
				МассивProcessID.Добавить(ProcessID);
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЦикла;	
	Текст.Закрыть();
	
	Возврат МассивProcessID;
КонецФункции	

&НаКлиенте
Процедура ЗавершитьСеансыTestClientПринудительно() Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""txt"");
	
	Если НЕ ЭтоLinux Тогда 
		ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоBat,""windows-1251"",,Истина); 
		ЗТ.ЗаписатьСтроку(""chcp 65001""); 
		ЗТ.ЗаписатьСтроку(""tasklist /v /fo list /fi """"imagename eq 1cv8c.exe"""" > """""" + ИмяВременногоФайла + """"""""); 
		ЗТ.Закрыть();
		
		ЗапуститьПриложение(ИмяВременногоBat,,Истина);
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоФайла,""UTF-8"");
		
		МассивProcessID = Новый Массив;
		ProcessID = Неопределено;
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			Стр = НРег(Стр);
			Если Лев(Стр,4) = ""pid:"" Тогда
				ProcessID = СокрЛП(Сред(Стр,5));
			КонецЕсли;	 
			
			Если ProcessID <> Неопределено Тогда
				Если (Лев(Стр,15) = ""заголовок окна:"") или (Лев(Стр,13) = ""window title:"") Тогда
					Если Найти(Стр,""vanessa"") = 0 Тогда
						МассивProcessID.Добавить(ProcessID);
					КонецЕсли;	 
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЦикла;	
		Текст.Закрыть();
		
		Если МассивProcessID.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;	 
		
		ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоBat,""UTF-8"",,Истина); 
		Стр = ""taskkill /F "";
		Для каждого ProcessID Из МассивProcessID Цикл
			Стр = Стр + ""/pid "" + ProcessID + "" "";
		КонецЦикла;
		ЗТ.ЗаписатьСтроку(Стр); 
		ЗТ.Закрыть();
		
		ЗапуститьПриложение(ИмяВременногоBat,,Истина);
		
	Иначе 
		
		СтрокаЗапуска = ""kill -9 `ps aux | grep -ie TESTCLIENT | grep -ie 1cv8c | awk '{print $2}'`"";
		ЗапуститьПриложение(СтрокаЗапуска);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьТестовоеПриложение()
	
	ТестовоеПриложение = Вычислить(""Новый ТестируемоеПриложение(""""localhost"""", Объект.ПортЗапускаТестКлиента)"");
	
	Возврат ТестовоеПриложение;
	
КонецФункции	

&НаКлиенте
Процедура УстановитьКонектСTestClient(ТестовоеПриложение)
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		ОбъектКонтекстСохраняемый = Новый Структура;
	КонецЕсли;	 
	
	ОбъектКонтекстСохраняемый.Вставить(""ТестовоеПриложение"",ТестовоеПриложение);
	
	Попытка
		ТестовоеПриложение.УстановитьСоединение();
		ГлавноеОкноТестируемого = Неопределено;
		ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
		//ГлавноеОкноТестируемого.Активизировать();
	Исключение
		СделатьСообщение(""Делаю перезапуск TESTCLIENT."");
		Отладка(""ОписаниеОшибки="" + ОписаниеОшибки());
		ЗавершитьСеансыTestClientПринудительно();
		ЗапуститьСеансTestClient();
		
		ТестовоеПриложение      = ОбъектКонтекстСохраняемый.ТестовоеПриложение;
	КонецПопытки;
	
	ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение)
	ГлавноеОкноТестируемого = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ГлавноеОкноТестируемого = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ГлавноеОкноТестируемого;
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение)
	ОбъектКонтекстСохраняемый.Вставить(""ТестовоеПриложение"",ТестовоеПриложение);
	ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
	ОбъектКонтекстСохраняемый.Вставить(""ГлавноеОкноТестируемого"",ГлавноеОкноТестируемого);
КонецПроцедуры

&НаКлиенте
Функция ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий(ДопПараметр = """") Экспорт 
	//УстановитьКраткийЗаголовокПриложения(""Vanessa-behavior"");
	
	Если ПодключитьУжеЗапущенныйTestClient() Тогда
		СделатьСообщение(""TestClient подключен на "" + Объект.ПортЗапускаТестКлиента + "" порту."");
		Возврат Истина;
	Иначе
		СвободныйПорт = ПроверитьПортНаЗанятость(Объект.ПортЗапускаТестКлиента);
		Если СвободныйПорт <> Объект.ПортЗапускаТестКлиента Тогда
			СделатьСообщение(""Порт "" + Объект.ПортЗапускаТестКлиента + "" занят, порт подключения изменен на "" + СвободныйПорт);
			Объект.ПортЗапускаТестКлиента = СвободныйПорт;
			СохранитьНастройкиВХранилище(""ПортЗапускаТестКлиента"", Объект.ПортЗапускаТестКлиента);
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		ТестовоеПриложение = СоздатьТестовоеПриложение();
	Исключение
		СделатьСообщение(""Сеанс должен быть запущен с ключом TESTMANAGER!"");
		СделатьСообщение(""TestClient НЕ подключен."");
	    Возврат Ложь;
	КонецПопытки;
	
	Попытка
		ЗапуститьСеансTestClient(ДопПараметр);
		Sleep(4);
		УстановитьКонектСTestClient(ТестовоеПриложение);
		//СделатьСообщение(""TestClient подключен."");
		СделатьСообщение(""TestClient подключен на "" + Объект.ПортЗапускаТестКлиента + "" порту."");
	Исключение
		СделатьСообщение(""TestClient НЕ подключен."");
	    Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ОткрытьПодключитьTestClient(Команда) Экспорт
	ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий();
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокуДерева(Строка)
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Если Строка.Область = Истина Тогда
		Элементы.ДеревоТестов.Свернуть(ИдентификаторСтроки);
		Возврат;
	КонецЕсли;	 
	
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Элементы.ДеревоТестов.Развернуть(ИдентификаторСтроки);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьСтрокуДерева(Строка)
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Элементы.ДеревоТестов.Свернуть(ИдентификаторСтроки);
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиДерева(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		РазвернутьСтрокуДерева(Строка);
		
		Если Строка.Область = Истина Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			РазвернутьСтрокиДерева(ПодчиненныеСтроки);
		КонецЕсли;	 
		
		//ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		//Элементы.ДеревоТестов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево() Экспорт
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	РазвернутьСтрокиДерева(ДеревоФормыСтроки);
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетВоВнутреннемФормате(СтруктураОФ) 
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	Возврат ОбъектСервер.ВывестиОтчетТестированияВоВнутреннемФормате(Дерево, СтруктураОФ);
		
КонецФункции

&наКлиенте
Процедура ДобавитьВнешнийСписокПроцедур(МассивСнипетовИзОбработки, ПолноеИмя, ФормаОбработки) Экспорт 
	
	СтрТаблицаКонтекстовОбработок = Новый Структура;
	СтрТаблицаКонтекстовОбработок.Вставить(""ИмяФайла"",ПолноеИмя);
	СтрТаблицаКонтекстовОбработок.Вставить(""Обработка"",ФормаОбработки);
	ТаблицаКонтекстовОбработок.Добавить(СтрТаблицаКонтекстовОбработок);
		
	МассивИменКонтекстовОбработок.Добавить(ПолноеИмя);
	БылиОшибки = Ложь;
	Для каждого Снипет из МассивСнипетовИзОбработки Цикл 
		ТаблицаОбработокДляОтладки.Вставить(СокрЛП(Снипет.ИмяПроцедуры), Новый Структура(""ИмяПроцедуры, Обработка, ИмяФайла"", Снипет.ИмяПроцедуры, ФормаОбработки, ПолноеИмя));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьВнешниеОбработкиДляОтладки() 
	Перем МассивФорм;
	МассивФорм = Новый Массив;
	
	ФормаVanessa = Неопределено;
	
	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип(""ОкноКлиентскогоПриложения"") Тогда
			Если Найти(НРег(Строка(Окн.Заголовок)), ""тест_"")>0 ИЛИ 
				Найти(НРег(Строка(Окн.Заголовок)), ""test_"")>0 Тогда
				
				МассивФорм.Добавить(Окн.ПолучитьСодержимое());
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивФорм.Количество() > 0 Тогда
		
		Для каждого Форма Из МассивФорм Цикл
			Попытка
				ДобавитьВнешнийСписокПроцедур(Форма.ПолучитьСписокТестов(ЭтаФорма), Форма.УникальныйИдентификатор, Форма);
				Сообщить(""Подключили для отладки форма ""+Форма.Заголовок);
			Исключение
				Сообщить(""Не удалось подключить форма ""+Форма.Заголовок + "" по причине:"" + ОписаниеОшибки());
			    //ОписаниеОшибки()
			КонецПопытки; 
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция МетаданныеИмя() Экспорт
	Возврат МетаданныеИмяСервер();
КонецФункции

&НаСервере
Функция МетаданныеИмяСервер()
	ОсновнойОбъект = Объект();
	НайденноеИмя = ОсновнойОбъект.Метаданные().Имя;
	
	Возврат НайденноеИмя;
КонецФункции

&НаКлиенте
Процедура ДеревоТестовПриАктивизацииСтроки(Элемент)
	
	Возврат;
	
	
	
	
	
	Если ВсёЕщёИдётВыполнениеШагов > 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Если НЕ Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость Тогда
		Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость = Истина;
	КонецЕсли;	 
	
	Если НЕ Элементы.ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл.Видимость Тогда
		Элементы.ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл.Видимость   = Истина;
	КонецЕсли;	 
	
	Если Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага.Видимость Тогда
		Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага.Видимость   = Ложь;
	КонецЕсли;	 
	
	
	
	
	
	
	
	
	Если Объект.РежимВыполненияСценарияСВыбранногоШага <> Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость Тогда
		Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость = Объект.РежимВыполненияСценарияСВыбранногоШага;
	КонецЕсли;	 
	
	
	Если ТекущиеДанные.Фича = Истина Тогда
		Если Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость Тогда
			Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость = Ложь;
		КонецЕсли;	 
		
	ИначеЕсли ТекущиеДанные.Сценарий = Истина Тогда
		
	ИначеЕсли ТекущиеДанные.Шаг = Истина Тогда
		Если НЕ Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага.Видимость Тогда
			Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага.Видимость = Истина;
		КонецЕсли;	 
		
		
	Иначе	
		Если Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость Тогда
			Элементы.ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий.Видимость = Ложь;
		КонецЕсли;	 
		Если Элементы.ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл.Видимость Тогда
			Элементы.ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл.Видимость   = Ложь;
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры


&НаКлиенте
Процедура АктивироватьСоседнююСтрокуДерева(СтрокаДерва)
	СтрокаРодитель = СтрокаДерва.ПолучитьРодителя();
	Если СтрокаРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	СтрокиДерева   = СтрокаРодитель.ПолучитьЭлементы();
	Для Ккк = 0 По СтрокиДерева.Количество()-1 Цикл
		ТекСтрока = СтрокиДерева[Ккк];
		
		Если ТекСтрока = СтрокаШагаСКоторогоНадоВыполнятьСценарий Тогда
			Если Ккк < СтрокиДерева.Количество()-1 Тогда
				НужнаяСтрока = СтрокиДерева[Ккк+1];
			ИначеЕсли Ккк > 0 Тогда	
				НужнаяСтрока = СтрокиДерева[Ккк-1];
			Иначе
				Продолжить;
			КонецЕсли;	 
			
			Элементы.ДеревоТестов.ТекущаяСтрока = НужнаяСтрока.ПолучитьИдентификатор();
			
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПроцУстановитьПометкуВыполнятьСценарийСЭтогоШага() Экспорт
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	Если ТекущиеДанные.Шаг <> Истина Тогда
		Сообщить(""Это возможно только для шага."");
		Возврат;
	КонецЕсли;	
	
	Если СтрокаШагаСКоторогоНадоВыполнятьСценарий <> Неопределено Тогда
		Если СтрокаШагаСКоторогоНадоВыполнятьСценарий.Шаг = Истина Тогда
			ПромСтрока = Неопределено;
			НайтиСтрокуДереваПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки,Объект.ДеревоТестов.ПолучитьЭлементы(),ПромСтрока);
			СтрокаШагаСКоторогоНадоВыполнятьСценарий = ПромСтрока;
			
			СтрокаШагаСКоторогоНадоВыполнятьСценарий.ВыполнятьСценарийСЭтогоШага = Ложь;	
		КонецЕсли;	 
	КонецЕсли;	 
	
	СтрокаШагаСКоторогоНадоВыполнятьСценарий  = ТекущиеДанные;
	ТекущиеДанные.ВыполнятьСценарийСЭтогоШага = Истина;	
	
	АктивироватьСоседнююСтрокуДерева(СтрокаШагаСКоторогоНадоВыполнятьСценарий);
	
	Объект.РежимВыполненияСценарияСВыбранногоШага = Истина;
	Объект.СохранятьКонтекстыПередВыполнениемШагов = Истина;
	
	
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость   = Истина;
	
	Сообщить(""Пометка установлена!"");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуВыполнятьСценарийСЭтогоШага(Команда)
	ПроцУстановитьПометкуВыполнятьСценарийСЭтогоШага();
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокуДереваПоИдСтроки(ИдСтроки,СтрокиДерева,Результат)
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Если Результат <> Неопределено Тогда
			Возврат;
		КонецЕсли;	 
		
		
		Если ИдСтроки = СтрокаДерева.ИдСтроки Тогда
			Результат = СтрокаДерева;
			Возврат;
		КонецЕсли;	 
		
		ПодчиненныеЭлементыСтроки = СтрокаДерева.ПолучитьЭлементы();
		НайтиСтрокуДереваПоИдСтроки(ИдСтроки,ПодчиненныеЭлементыСтроки,Результат);
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура СнятьПометкуВыполнятьСценарийСЭтогоШага(Команда)
	Объект.РежимВыполненияСценарияСВыбранногоШага = Ложь;
	Если СтрокаШагаСКоторогоНадоВыполнятьСценарий <> Неопределено Тогда
		ПромСтрока = Неопределено;
		НайтиСтрокуДереваПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки,Объект.ДеревоТестов.ПолучитьЭлементы(),ПромСтрока);
		СтрокаШагаСКоторогоНадоВыполнятьСценарий = ПромСтрока;
		
		СтрокаШагаСКоторогоНадоВыполнятьСценарий.ВыполнятьСценарийСЭтогоШага = Ложь;
	КонецЕсли;	 
	
	СтрокаШагаСКоторогоНадоВыполнятьСценарий = Неопределено;
	
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость = Ложь;
	
	Сообщить(""Пометка снята!"");
КонецПроцедуры

&НаКлиенте
Функция ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок)
	Для каждого Зн Из СтрокаТабДок Цикл
		Если Зн <> """" Тогда
			Возврат Ложь;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Истина;
КонецФункции	

&НаКлиенте
Процедура УбратьПустыеСтрокиИКолонкиСКраёвМакета(ТабДок)
	Если ТабДок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	Если ТабДок[0].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	
	
	
	
	
	//пустые строки сверху
	МассивСтрокДляУдаления = Новый Массив;
	Ном = -1;
	Для каждого СтрокаТабДок Из ТабДок Цикл
		Ном = Ном + 1;
		Если ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок) Тогда
			МассивСтрокДляУдаления.Добавить(Ном);
		Иначе
			//значит нашли первую не пустую строку
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	
	Для Ккк = 0 По МассивСтрокДляУдаления.Количество()-1 Цикл
		ИдМассива = МассивСтрокДляУдаления[МассивСтрокДляУдаления.Количество()-1 - Ккк];
		ТабДок.Удалить(ИдМассива);
	КонецЦикла;
	
	
	
	//пустые строки снизу
	МассивСтрокДляУдаления = Новый Массив;
	Для Ккк = 0 По ТабДок.Количество()-1 Цикл
		Ном          = ТабДок.Количество()-1-Ккк;
		СтрокаТабДок = ТабДок[Ном];
		Если ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок) Тогда
			МассивСтрокДляУдаления.Добавить(Ном);
		Иначе
			//значит нашли первую не пустую строку
			Прервать;
		КонецЕсли;	 
	КонецЦикла;

	
	Для каждого ИдМассива Из МассивСтрокДляУдаления Цикл
	    ТабДок.Удалить(ИдМассива);
	КонецЦикла;
	
	
	
	
	Если ТабДок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	
	//пустые колонки слева
	КолКолонок = ТабДок[0].Количество();
	МассивКолонокДляУдаления = Новый Массив;
	Ном = -1;
	Для ИдКолонки = 0 По КолКолонок-1 Цикл
		КолонкаПустая = Истина;
		Для каждого СтрокаТабДок Из ТабДок Цикл
			Зн = СтрокаТабДок[ИдКолонки];
			Если Зн <> """" Тогда
				КолонкаПустая = Ложь;
				Прервать;
			КонецЕсли;	 
		КонецЦикла;
		
		Если КолонкаПустая Тогда
			МассивКолонокДляУдаления.Добавить(ИдКолонки);
		Иначе
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;
	
	
	Для Ккк = 0 По МассивКолонокДляУдаления.Количество()-1 Цикл
		ИдМассива = МассивКолонокДляУдаления[МассивКолонокДляУдаления.Количество()-1 - Ккк];
		Для каждого СтрокаТабДок Из ТабДок Цикл
			СтрокаТабДок.Удалить(ИдМассива);
		КонецЦикла;
	КонецЦикла;
	
	
	
	
	
	
	//пустые колонки справа
	КолКолонок = ТабДок[0].Количество();	
	МассивКолонокДляУдаления = Новый Массив;
	Ном = -1;
	Для Ккк = 0 По КолКолонок-1 Цикл
		ИдКолонки = КолКолонок-1 - Ккк;
		
		
		КолонкаПустая = Истина;
		Для каждого СтрокаТабДок Из ТабДок Цикл
			Зн = СтрокаТабДок[ИдКолонки];
			Если Зн <> """" Тогда
				КолонкаПустая = Ложь;
				Прервать;
			КонецЕсли;	 
		КонецЦикла;
		
		Если КолонкаПустая Тогда
			МассивКолонокДляУдаления.Добавить(ИдКолонки);
		Иначе
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;
	
	
	Для Ккк = 0 По МассивКолонокДляУдаления.Количество()-1 Цикл
		ИдМассива = МассивКолонокДляУдаления[Ккк];
		Для каждого СтрокаТабДок Из ТабДок Цикл
			СтрокаТабДок.Удалить(ИдМассива);
		КонецЦикла;
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТабДокИзTestClient(ЭлементФормы) Экспорт
	ТабДок = Новый Массив();
	Для Стр = СчитываниеМакетаНачСтр По СчитываниеМакетаНачСтр + СчитываниеМакетаКолСтр - 1 Цикл
		СтрокаТабДок = Новый Массив;
		Для Кол = СчитываниеМакетаНачКол По СчитываниеМакетаНачКол + СчитываниеМакетаКолКол - 1 Цикл
			Адрес = ""R"" + Стр + ""C"" + Кол;
			Адрес = СтрЗаменить(Адрес,Символы.НПП,"""");
			
			Значение = ЭлементФормы.ПолучитьТекстОбласти(Адрес);
			Значение = СтрЗаменить(Значение,Символы.ПС,""\n"");
			
			СтрокаТабДок.Добавить(Значение);
		КонецЦикла;
		
		ТабДок.Добавить(СтрокаТабДок);
	КонецЦикла;
	УбратьПустыеСтрокиИКолонкиСКраёвМакета(ТабДок);
	
	Возврат ТабДок;
КонецФункции	

&НаКлиенте
Функция ПолучитьЗначениеТестируемаяТаблицаФормы(ЭлементФормы)
	НадоПолучатьСтроки = Истина;
	ЗначениеТЧ         = Неопределено;
	
	Попытка
		ЭлементФормы.ПерейтиКПервойСтроке();
	Исключение
		//значит нет ни одной строки
		НадоПолучатьСтроки = Ложь;
	КонецПопытки;
	
	Если НадоПолучатьСтроки  Тогда
		Попытка
			ТекЭлемент = ЭлементФормы.ПолучитьТекстЯчейки();
			ЭлементФормы.ВыделитьВсеСтроки();
			ЗначениеТЧ = ЭлементФормы.ПолучитьВыделенныеСтроки();
		Исключение
			Отладка(""Не смог получить строки для ТЧ "" + ЭлементФормы.Имя);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ЗначениеТЧ;
КонецФункции	

&НаКлиенте
Функция ПолучитьСостояниеЭлементаФормыTestClient(ЭлементФормы)
	СтруктураЗначения = Новый Структура;
	СтруктураЗначения.Вставить(""Тип"",ТипЗнч(ЭлементФормы));
	СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
	
	//Отладка(""Получаю элемент. Имя="" + ЭлементФормы.Имя + "", Тип="" + ТипЗнч(ЭлементФормы));
	//Сообщить(""ЭлементФормы.Тип="" + ТипЗнч(ЭлементФормы));
	
	
	Если ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяКнопкаФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"",ЭлементФормы.Вид);
		Если ЭлементФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка Тогда
			СтруктураЗначения.Вставить(""ТекущаяВидимость"",ЭлементФормы.ТекущаяВидимость());
			СтруктураЗначения.Вставить(""ТекущаяДоступность"",ЭлементФормы.ТекущаяДоступность());
		КонецЕсли;	 
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяТаблицаФормы"") Тогда
	
		//Сообщить(""ЭлементФормы.Имя="" + ЭлементФормы.Имя + "", ЭлементФормы.Тип="" + ТипЗнч(ЭлементФормы));
		//Сообщить(""ЭлементФормы.Тип="" + ТипЗнч(ЭлементФормы));
		
		СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
		
		ЗначениеТЧ = ПолучитьЗначениеТестируемаяТаблицаФормы(ЭлементФормы);
		СтруктураЗначения.Вставить(""ЗначениеТЧ"",ЗначениеТЧ);
		
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяГруппаФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"",ЭлементФормы.Вид);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемоеПолеФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"",ЭлементФормы.Вид);
		
		
		
		
		
		Если ЭлементФормы.Вид = ВидПоляФормы.ПолеТабличногоДокумента Тогда
			Если ЭлементФормы.ТекущаяДоступность() Тогда
				ТабДок = ПолучитьТабДокИзTestClient(ЭлементФормы);
				СтруктураЗначения.Вставить(""ТабДок"",ТабДок);
			КонецЕсли;	 
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеКартинки Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеГеографическойСхемы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеГрафическойСхемы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДендрограммы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДиаграммы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДиаграммыГанта Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеИндикатора Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеКалендаря Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеПолосыРегулирования Тогда
		Иначе	
			//для остальных надо сохранить представление данных
			Попытка
				Если ЭлементФормы.ТекущаяВидимость() Тогда
					СтруктураЗначения.Вставить(""ПредставлениеДанных"",ЭлементФормы.ПолучитьПредставлениеДанных());
				КонецЕсли;	 
			Исключение
				
			КонецПопытки;
		КонецЕсли;	 
		
		
		//СтруктураЗначения.Вставить(""ТекущаяВидимость"",ЭлементФормы.ТекущаяВидимость());
		//СтруктураЗначения.Вставить(""ТекущаяДоступность"",ЭлементФормы.ТекущаяДоступность());
		
		
		//Если ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода Тогда
		//	Попытка
		//		СтруктураЗначения.Вставить(""Текст"",ЭлементФормы.ПолучитьТекстРедактирования());
		//	Исключение
		//		
		//	КонецПопытки;
		//КонецЕсли;
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяДекорацияФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"",ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"",ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"",ЭлементФормы.Вид);
	КонецЕсли;	 
	
	Возврат СтруктураЗначения;
КонецФункции	

&НаКлиенте
Функция ПолучитьСостояниеФормыTestClient()
	Результат       = Новый Структура;
	МассивРезультат = Новый Массив;
	
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		Сообщить(""Перемення КонтекстСохраняемый не содержит значений! Невозможно определить окно TestClient!"");
		Возврат Неопределено;
	КонецЕсли;	 
	
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Сообщить(""Перемення КонтекстСохраняемый не содержит значения """"ТестовоеПриложение""""! Невозможно определить окно TestClient!"");
		Возврат Неопределено;
	КонецЕсли;	 
	
	
	Попытка
		АктивноеОкно = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
		ТекущаяФорма = АктивноеОкно.НайтиОбъект(Тип(""ТестируемаяФорма""));
		Если ТекущаяФорма = Неопределено Тогда
			Сообщить(""Активная форма не найдена!"");
			Возврат Неопределено;
		КонецЕсли;	 
		
		Сообщить(""Найдена форма: ТекстЗаголовка="" + ТекущаяФорма.ТекстЗаголовка + "", ИмяФормы="" + ТекущаяФорма.ИмяФормы);
	Исключение
		Сообщить(""Ошибка при получении активной формы!"");
		Сообщить(""ПолучитьСостояниеФормыTestClient:"" + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	
	ТекТЧ           = Неопределено;
	МассивЭлементов = ТекущаяФорма.НайтиОбъекты();
	Для каждого Элем Из МассивЭлементов Цикл
		//Если ТипЗнч(Элем) = Тип(""ТестируемаяГруппаФормы"") Тогда
		//	Продолжить;
		//КонецЕсли;	 
		
		
		//Если ТипЗнч(Элем) = Тип(""ТестируемаяТаблицаФормы"") Тогда
		//	ТекТЧ = Элем.Имя;
		//Иначе
			Если СокрЛП(ТекТЧ) <> """" Тогда
				Если Лев(Элем.Имя,СтрДлина(ТекТЧ)) = ТекТЧ Тогда
					//это подчиненный элемент ТЧ, а колонки ТЧ обрабатываются в другом месте
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
		//КонецЕсли;	 
		
		
		
		//Отладка(""Получаю элемент. Имя="" + Элем.Имя + "", Тип="" + ТипЗнч(Элем));
		СостояниеЭлемента = ПолучитьСостояниеЭлементаФормыTestClient(Элем);
		МассивРезультат.Добавить(СостояниеЭлемента);
		
		//Сообщить("""" + ТипЗнч(Элем) + "", "" + Элем.Имя);
	КонецЦикла;
	
	Результат.Вставить(""ИмяФормы"",ТекущаяФорма.ИмяФормы);
	Результат.Вставить(""МассивЭлементов"",МассивРезультат);
	
	Возврат Результат;
КонецФункции	

&НаКлиенте
Процедура ЗапомнитьСостояниеФормыTestClient(Команда)
	СохраненноеСостояниеФормыTestClient = ПолучитьСостояниеФормыTestClient();
КонецПроцедуры

&НаКлиенте
Процедура ЗабытьСостояниеФормыTestClient() Экспорт
	СохраненноеСостояниеФормыTestClient = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ЗабытьСостояниеФормыTestClientКнопка(Команда)
	ЗабытьСостояниеФормыTestClient();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЭлементИзСтруктурыПоИмени(Имя,Массив)
	Для каждого Элем Из Массив Цикл
		Если Элем.Имя = Имя Тогда
			Возврат Элем;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции	

&НаКлиенте
Функция ВывестиИзмененияФормыGherkin(Было,Стало)
	Стр = """";
	
	Для каждого ЭлемСтало Из Стало.МассивЭлементов Цикл
		Имя = ЭлемСтало.Имя;
		
		Если Было <> Неопределено Тогда
			ЭлемБыло = ПолучитьЭлементИзСтруктурыПоИмени(Имя,Было.МассивЭлементов);
			Если ЭлемБыло = Неопределено Тогда
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		
		Для каждого Свойство Из ЭлемСтало Цикл
			Ключ = Свойство.Ключ;
			
			Если Ключ = ""ПредставлениеДанных"" Тогда
				Если Было = Неопределено Тогда
					Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" стал равен """""" + ЭлемСтало.ПредставлениеДанных + """""""";
					
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе	
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;	 
				Иначе	
					Если НЕ ЭлемБыло.Свойство(Ключ) Тогда
						Продолжить;
					КонецЕсли;	 
					
					Если СокрЛП(ЭлемСтало[Ключ]) <> СокрЛП(ЭлемБыло[Ключ]) Тогда
						Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" стал равен """""" + ЭлемСтало.ПредставлениеДанных + """""""";
						
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе	
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;	 
						//Сообщить(""Изменлось: "" + ЭлемСтало.Имя);
						//Сообщить(""Было:  "" + ЭлемБыло[Ключ]);
						//Сообщить(""Стало: "" + ЭлемСтало[Ключ]);
					КонецЕсли;	 
				КонецЕсли;	 
			ИначеЕсли Ключ = ""ТабДок"" Тогда
				
				Если Было = Неопределено Тогда
					СтрТабДок = ПолучитьСтрокуТабличныйДокументФормаTestClient(ЭлемСтало[Ключ]);
					Если СтрТабДок = """" Тогда
						Изменение = ""табличный документ формы с именем """""" + ЭлемСтало.Имя + """""" стал пустым"";
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе	
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;	 
					Иначе	
						Изменение = ""табличный документ формы с именем """""" + ЭлемСтало.Имя + """""" стал равен:"";
						
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе	
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;	 
						
						Стр = Стр + СтрТабДок + Символы.ПС;
					КонецЕсли;	 
					
				КонецЕсли;	 
				
			ИначеЕсли Ключ = ""ЗначениеТЧ"" Тогда
				Если ЭлемСтало[Ключ] = Неопределено Тогда
					Продолжить;
				КонецЕсли;	 
				Если ЭлемСтало[Ключ].Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;	 
				
				Если Было = Неопределено Тогда
					Изменение = ""таблица формы с именем """""" + ЭлемСтало.Имя + """""" стала равной:"";
					
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе	
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;	 
					
					СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ]);
					
					Стр = Стр + СтрТЧ + Символы.ПС;
				Иначе
					//надо сравнить две ТЧ
					ТЧбыло  = ЭлемБыло[Ключ];
					ТЧстало = ЭлемСтало[Ключ];
					
					Если ТЧстало.Количество() = 0 Тогда
						Продолжить;
					КонецЕсли;	 
					
					Если ТЧбыло.Количество() <> ТЧстало.Количество() Тогда
						//значит изменилось количество строк, просто выводим новую таблицу
						Изменение = ""таблица формы с именем """""" + ЭлемСтало.Имя + """""" стала равной:"";
						
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе	
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;	 
						
						СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ]);
						
						Стр = Стр + СтрТЧ + Символы.ПС;
						
						Продолжить;
					КонецЕсли;	 
					
					ФлагИзмененныеКолонки = Новый Массив;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Для каждого Колонка Из СтрокаСтало Цикл
							ФлагИзмененныеКолонки.Добавить(Ложь);
						КонецЦикла;	
						
						Прервать;
					КонецЦикла;	
					
					Ном = -1;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Ном        = Ном + 1;
						СтрокаБыло = ТЧбыло[Ном];
						
						идКолонки = -1;
						Для каждого Колонка Из СтрокаСтало Цикл
							идКолонки  = идКолонки + 1;
							
							ИмяКолонки = Колонка.Ключ;
							
							ЗначениеБыло  = СтрокаБыло[ИмяКолонки];
							ЗначениеСтало = СтрокаСтало[ИмяКолонки];
							
							Если ЗначениеБыло <> ЗначениеСтало Тогда
								ФлагИзмененныеКолонки[идКолонки] = Истина;
							КонецЕсли;	 
						КонецЦикла;
					
					КонецЦикла;
					
					
					ИзмененныеКолонки = Новый Массив;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Ном = -1;
						Для каждого Колонка Из СтрокаСтало Цикл
							Ном = Ном + 1;
							ИмяКолонки = Колонка.Ключ;
							Если ФлагИзмененныеКолонки[Ном] Тогда
								ИзмененныеКолонки.Добавить(ИмяКолонки);
							КонецЕсли;	 
						КонецЦикла;	
						
						Прервать;
					КонецЦикла;	
					
					
					Если ИзмененныеКолонки.Количество() = 0 Тогда
						Продолжить;
					КонецЕсли;	 
					
					
					Изменение = ""таблица формы с именем """""" + ЭлемСтало.Имя + """""" содержит изменения:"";
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе	
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;	 
					СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ],ИзмененныеКолонки);
					
					Стр = Стр + СтрТЧ + Символы.ПС;
					
					
					
					
				КонецЕсли;	 
				
			КонецЕсли;	 
			
		КонецЦикла;
		
	КонецЦикла;
	
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ФорматироватьМассивСтрокКакТаблицу(МассивСтрок)
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	Стр = СокрЛП(МассивСтрок[0]);
	Стр = Сред(Стр,2,СтрДлина(Стр)-2);
	МассивСтолбцов = РазложитьСтрокуВМассивПодстрок(Стр,""|"");
	
	КолПараметров = МассивСтолбцов.Количество();
	МассивДлин = Новый Массив;
	Для каждого Элем Из МассивСтолбцов Цикл
		МассивДлин.Добавить(0);
	КонецЦикла;
	
	
	Для каждого Стр Из МассивСтрок Цикл
		Стр = Сред(Стр,2,СтрДлина(Стр)-2);
		МассивСтолбцов = РазложитьСтрокуВМассивПодстрок(Стр,""|"");
		
		Для Ккк = 0 По МассивДлин.Количество()-1 Цикл
			Зн = СокрЛП(МассивСтолбцов[Ккк]);
			Зн = СтрЗаменить(Зн,ПредставлениеВертЧертыВТабДок,""|"");
			
			ДлинаСтроки = СтрДлина(Зн);
			Если ДлинаСтроки > МассивДлин[Ккк] Тогда
				МассивДлин[Ккк] = ДлинаСтроки;
			КонецЕсли;	 
			
		КонецЦикла;
	КонецЦикла;
	
	Ном = -1;
	Для каждого Стр Из МассивСтрок Цикл
		Ном = Ном + 1;
		Стр = Сред(Стр,2,СтрДлина(Стр)-2);
		МассивСтолбцов = РазложитьСтрокуВМассивПодстрок(Стр,""|"");
		
		СтрПараметров = ""| "";
		Для Ккк = 0 По МассивДлин.Количество()-1 Цикл
			Зн = СокрЛП(МассивСтолбцов[Ккк]);
			Зн = СтрЗаменить(Зн,ПредставлениеВертЧертыВТабДок,""|"");
			
			Пока СтрДлина(Зн) < МассивДлин[Ккк] Цикл
				Зн = Зн + "" "";
			КонецЦикла;
			СтрПараметров = СтрПараметров + Зн + "" | "";
		КонецЦикла;
		
		СтрПараметров = СокрЛП(СтрПараметров);
		
		//СтрПараметров = СтрЗаменить(СтрПараметров,ПредставлениеВертЧертыВТабДок,""|"");
		МассивСтрок[Ном] = СтрПараметров;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьСтрокуТабличныйДокументФормаTestClient(ТабДок)
	МассивСтрок = Новый Массив;
	
	Стр = ""|"";
	
	Для каждого СтрокаТабДок Из ТабДок Цикл
		СтрокаТЧ = ""|"";
		Для каждого КолонкаТабДок Из СтрокаТабДок Цикл
			СтрокаТЧ = СтрокаТЧ + "" '"" + СтрЗаменить(КолонкаТабДок,""|"",ПредставлениеВертЧертыВТабДок) + ""' |"";
			
		КонецЦикла;
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	
	
	ФорматироватьМассивСтрокКакТаблицу(МассивСтрок);
	
	
	Стр = """";
	Для каждого Элем Из МассивСтрок Цикл
		Стр = Стр + Символы.Таб + Символы.Таб +  Элем + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Функция ПолучитьСтрокуСТЧФормаTestClient(ТЧ,ИзмененныеКолонки = Неопределено)
	МассивСтрок = Новый Массив;
	
	Стр = ""|"";
	
	//шапка ТЧ
	Для каждого СтрТЧ Из ТЧ Цикл
		Для каждого Элем Из СтрТЧ Цикл
			Если ИзмененныеКолонки <> Неопределено Тогда
				//значит выводим только нужные колонки
				Если ИзмененныеКолонки.Найти(Элем.Ключ) = Неопределено Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			Стр = Стр + "" '"" + Элем.Ключ + ""' |"";
		КонецЦикла;
		
		Прервать;
	КонецЦикла;
	
	МассивСтрок.Добавить(Стр);
	
	Для каждого СтрТЧ Из ТЧ Цикл
		СтрокаТЧ = ""|"";
		Для каждого Элем Из СтрТЧ Цикл
			Если ИзмененныеКолонки <> Неопределено Тогда
				//значит выводим только нужные колонки
				Если ИзмененныеКолонки.Найти(Элем.Ключ) = Неопределено Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			СтрокаТЧ = СтрокаТЧ + "" '"" + Элем.Значение + ""' |"";
		КонецЦикла;
		
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	
	
	ФорматироватьМассивСтрокКакТаблицу(МассивСтрок);
	
	
	Стр = """";
	Для каждого Элем Из МассивСтрок Цикл
		Стр = Стр + Символы.Таб + Символы.Таб +  Элем + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции	


&НаКлиенте
Процедура ПолучитьИзмененияФормы(Тип)
	ТекущееСостояниеФормы = ПолучитьСостояниеФормыTestClient();
	Если ТекущееСостояниеФормы = Неопределено Тогда
		Возврат;                                                                   
	КонецЕсли;	 
	
	Если СохраненноеСостояниеФормыTestClient <> Неопределено Тогда
		Если СохраненноеСостояниеФормыTestClient.ИмяФормы <> ТекущееСостояниеФормы.ИмяФормы Тогда
			Сообщить(""Изменилось имя формы: было: "" + СохраненноеСостояниеФормыTestClient.ИмяФормы + "", стало: "" + ТекущееСостояниеФормы.ИмяФормы);
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если Тип = ""Gherkin"" Тогда
		Изменения = ВывестиИзмененияФормыGherkin(СохраненноеСостояниеФормыTestClient,ТекущееСостояниеФормы);
	Иначе
		ВызватьИсключение ""Неизвестный тип вывода данных по изменению формы!"";
	КонецЕсли;	 
	
	СгенерированныйСценарий = Изменения;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СгенерированныйСценарий;
	
	СделатьСообщение(""Изменения формы обработаны!"");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзмененияФормыGherkin() Экспорт
	ПолучитьИзмененияФормы(""Gherkin"");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзмененияФормыGherkinКнопка(Команда)
	ПолучитьИзмененияФормыGherkin();
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаРаботыVanessaBehaviorВРежимеTestClientПриИзменении(Элемент)
	УстановитьВидимостьСлужебныхЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗначенияДляВыполненияШага(ОбработкаТеста,ИмяПроцедуры,МассивПараметров)
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВременнуюФичу(Стр)
	ИмяФайла = ПолучитьИмяВременногоФайла(""feature"");
	
	ЗТ = Новый ЗаписьТекста(ИмяФайла,""UTF-8"",,Истина); 
	ЗТ.ЗаписатьСтроку(""Функционал: Тест""); 
	ЗТ.ЗаписатьСтроку(""Сценарий: Тестовый сценарий""); 
	ЗТ.ЗаписатьСтроку(Стр); 
	
	ЗТ.Закрыть();
	
	Возврат ИмяФайла; 
КонецФункции	

&НаКлиенте
Функция СоздатьСтруктураПараметровДляЗагрузкиШага(ПутьЗагрузки,ДвоичныеДанные)
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""DebugLog"",Объект.DebugLog);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"",Неопределено);
	СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"",Ложь);
	СтруктураПараметров.Вставить(""КаталогИнструментов"",Объект.КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"",ПутьЗагрузки);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"",Объект.КаталогиБиблиотек);
	
	МассивРезультатОбходаКаталоговДляОднойФичи = Новый Массив;
	ф = Новый Файл(ПутьЗагрузки);
	СтруткураФайла = ПолучитьСтруткураФайлаФичи(1,ф.ИмяБезРасширения,ф.ПолноеИмя,ДвоичныеДанные);
	МассивРезультатОбходаКаталоговДляОднойФичи.Добавить(СтруткураФайла);
	
	СтруктураПараметров.Вставить(""МассивРезультатОбходаКаталогов"",МассивРезультатОбходаКаталоговДляОднойФичи);
	СтруктураПараметров.Вставить(""МассивСообщений"",Новый Массив);
	//СтруктураПараметров.Вставить(""ПутьКОбработке"",Объект.DebugLog);
	СтруктураПараметров.Вставить(""СписокТеговИсключение"",Объект.СписокТеговИсключение);
	СтруктураПараметров.Вставить(""СписокТеговОтбор"",Объект.СписокТеговОтбор);
	СтруктураПараметров.Вставить(""УдалитьСтрокуФичиИзДерева"",Ложь);
	
	СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариевУФ"",ТаблицаУжеСуществующихСценариев);
	
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	СтруктураПараметров.Вставить(""ДвДанныеvbFeatureReader"",ДвДанныеvbFeatureReader);
	
	Возврат СтруктураПараметров;
КонецФункции	

&НаСервере
Процедура ЗагрузитьВременнуюФичуСервер(СтруктураПараметров)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	СтруктураПараметров.ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла,Ложь);
	
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");
	
	
	
	
	
	Дерево = Новый ДеревоЗначений;
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ОбъектСервер.СоздатьКолонкиДерева(Дерево);
	
	Если Не СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		ТаблицаУжеСуществующихСценариевСервер = ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ);
		СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариев"",ТаблицаУжеСуществующихСценариевСервер);
	КонецЕсли;	 
	
	
	//СтруктураПараметров = Неопределено;
	//ТзнТаблицаИзвестныхStepDefinition = Неопределено;
	
	ПерваяСтрокаДерева = Дерево.Строки.Добавить();
	ПерваяСтрокаДерева.Имя = ""Фичи"";
	ПерваяСтрокаДерева.ПолныйПуть = """";
	
	FeatureReader.ЗагрузитьФичу(СтруктураПараметров.КаталогФич,ПерваяСтрокаДерева.Строки,ТзнТаблицаИзвестныхStepDefinition,СтруктураПараметров);
	
	
	
	Если СтруктураПараметров.Свойство(""КешФич"") Тогда
		СтруктураПараметров.КешФич = Неопределено;
	КонецЕсли;	 
	
	Если СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		СтруктураПараметров.ТаблицаУжеСуществующихСценариев = Неопределено;
	КонецЕсли;	 
	
	Шаги = Новый Массив;
	ПолучитьШагиИзДерева(Дерево.Строки,Шаги);
	
	СтруктураПараметров.Вставить(""Шаги"",Шаги);	
КонецПроцедуры

&НаСервере
Процедура ПолучитьШагиИзДерева(ДеревоСтроки,Шаги)
	Для каждого СтрокаДерева Из ДеревоСтроки Цикл
		Если СтрокаДерева.Шаг = Истина Тогда
			Шаг = Новый Структура;
			Шаг.Вставить(""Имя"",СтрокаДерева.Имя);
			Шаг.Вставить(""СтрокаРеальнойПроцедуры"",СтрокаДерева.СтрокаРеальнойПроцедуры);
			Шаг.Вставить(""ЗначенияПараметров"",СтрокаДерева.ЗначенияПараметров);
			Шаг.Вставить(""АдресСнипета"",СтрокаДерева.АдресСнипета);
			Шаг.Вставить(""ШагСПараметрамиВТаблице"",СтрокаДерева.ШагСПараметрамиВТаблице);
			
			Если СтрокаДерева.ШагСПараметрамиВТаблице = Истина Тогда
				ПарамТаблица = Новый Массив;
				
				ПодчиненныеСтроки = СтрокаДерева.Строки;
				Для каждого СтрокиТаблицы Из ПодчиненныеСтроки Цикл
					СтрокаПарамТаблица = Новый Структура;
					
					НомерКолонки = 0;
					Для каждого Колонка Из СтрокиТаблицы.ПараметрыТаблицы Цикл
						НомерКолонки       = НомерКолонки + 1;
						СтруктураПараметра = Колонка.Значение;
						Значение           = ПолучитьЗначениеДляПередачиВМетодСервер(СтруктураПараметра.Значение,СтруктураПараметра.Тип);
						Значение           = Вычислить(Значение);
						
						СтрокаПарамТаблица.Вставить(""Кол"" + НомерКолонки,Значение);
					КонецЦикла;
					
					ПарамТаблица.Добавить(СтрокаПарамТаблица);
				КонецЦикла;
				Шаг.Вставить(""ПарамТаблица"",ПарамТаблица);
			КонецЕсли;	 
			
			
			Шаги.Добавить(Шаг);
		Иначе	
			ПолучитьШагиИзДерева(СтрокаДерева.Строки,Шаги);
		КонецЕсли;	 
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Функция ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов)
	МассивПараметров = Новый Массив;
	Для Каждого ЭлементМассива Из СписокАргументов Цикл
		Элем = ЭлементМассива.Значение;
		МассивПараметров.Добавить(ПолучитьЗначениеДляПередачиВМетод(Элем.Значение,Элем.Тип));
	КонецЦикла;
	
	Возврат МассивПараметров;
КонецФункции	

&НаКлиенте
Процедура ПодготовитьИВызватьМетод(ТекШаг,ОбработкаТеста,ИмяПроцедуры,МассивПараметров)
	ОбработкаТеста.Контекст            = ОбъектКонтекст;
	ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
	
	Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
		ЗаписатьЛогВЖРПередВыполнениемШага(ТекШаг.Имя);
	КонецЕсли;	 
	
	ВсёЕщёИдётВыполнениеШагов = Истина;
	ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
	ВсёЕщёИдётВыполнениеШагов = Ложь;
	
	ОбъектКонтекст            = ОбработкаТеста.Контекст;
	ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
КонецПроцедуры

&НаКлиенте
Процедура Шаг(Стр) Экспорт
	ВременнаяФича = ПолучитьВременнуюФичу(Стр);
	ДвоичныеДанные = Новый ДвоичныеДанные(ВременнаяФича);
	
	СтруктураПараметров = СоздатьСтруктураПараметровДляЗагрузкиШага(ВременнаяФича,ДвоичныеДанные);
	ЗагрузитьВременнуюФичуСервер(СтруктураПараметров);
	
	Шаги = СтруктураПараметров.Шаги;
	Для каждого ТекШаг Из Шаги Цикл
		Если Не ЗначениеЗаполнено(ТекШаг.АдресСнипета) Тогда
			ВызватьИсключение ""Для шага <"" + ТекШаг.Имя + ""> не найден EPF файл!"";
		КонецЕсли;	 
		
		ИмяПроцедуры     = ТекШаг.СтрокаРеальнойПроцедуры;
		СписокАргументов = ТекШаг.ЗначенияПараметров;
		
		МассивПараметров = ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов);
		Если ТекШаг.ШагСПараметрамиВТаблице = Истина Тогда
			МассивПараметров.Добавить(ТекШаг.ПарамТаблица);
		КонецЕсли;	 
		
		АдресСнипета   = ТекШаг.АдресСнипета;
		ОбработкаТеста = ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета);
		
		ПодготовитьИВызватьМетод(ТекШаг,ОбработкаТеста,ИмяПроцедуры,МассивПараметров);
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДляВызоваКонфигуратора(Команда)
	Зн = 1/0;
КонецПроцедуры


&НаКлиенте
Процедура ДляСлужебногоОповещения()
	Оповестить(""СлужебноеОповещение"", ""СлужебноеОповещение"");
КонецПроцедуры

&НаКлиенте
Процедура СделатьСлужебноеОповещение()Экспорт
	ПодключитьОбработчикОжидания(""ДляСлужебногоОповещения"",1,Истина);
КонецПроцедуры


&НаКлиенте
Функция НайтиФормыТекущегоОкна()
	ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
	МассивФорм             = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Возврат МассивФорм;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени = Ложь)Экспорт
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(,, ИмяРеквизита);
		Иначе
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(, ИмяРеквизита);
		КонецЕсли;	 
		
		Если МассивЭлементов = Неопределено Тогда
			Продолжить;
			//Стр = ""Элемента формы с заголовком <"" + ИмяРеквизита + ""> не найдено."";
			//Сообщить(Стр);
			//ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
			//Стр = ""Элемента формы с заголовком <"" + ИмяРеквизита + ""> не найдено."";
			//Сообщить(Стр);
			//ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Если МассивЭлементов.Количество() > 1  Тогда
			Сообщить(""Обнаружено несколько полей с заголовком <"" + ИмяРеквизита + "">"");
			Ном = 0;
			Для каждого Элем Из МассивЭлементов Цикл
				Ном = Ном + 1;
				Сообщить(""№"" + Ном + "". Заголовок=<"" + Элем.ТекстЗаголовка  + "">. Имя=<"" + Элем.Имя + "">. ТекстПоля = <"" + Элем.ПолучитьПредставлениеДанных() + "">"");
			КонецЦикла;
			
			Стр = ""Найдено более одного поля формы с заголовком <"" + ИмяРеквизита + "">. Рекомендуется искать элемент по имени."";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
		ПолеРеквизит = МассивЭлементов[0];
		
		
		//ПолеРеквизит.Активизировать();
		//ПолеРеквизит.ВвестиТекст(Текст);
		Тип = ТипЗнч(ПолеРеквизит);
		
		Если Тип = Тип(""ТестируемоеПолеФормы"") Тогда
			Возврат ПолеРеквизит.ПолучитьПредставлениеДанных();
		ИначеЕсли Тип = Тип(""ТестируемаяТаблицаФормы"") Тогда
			ТабДок = ПолучитьЗначениеТестируемаяТаблицаФормы(ПолеРеквизит);
			Возврат ТабДок;
		КонецЕсли;	 
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = ""Элемента формы с именем <"" + ИмяРеквизита + ""> не найдено."";
		Иначе	
			Стр = ""Элемента формы с заголовком <"" + ИмяРеквизита + ""> не найдено."";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеРеквизитаОткрытойФормыПоИмени(ИмяРеквизита)Экспорт
	Возврат ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяРеквизита,Истина);
КонецФункции


//{снятие скриншота
&НаКлиенте
Функция СформироватьИмяФайлаСкриншота(ОписаниеШага,СтрокаСценария)
	УИД = Новый УникальныйИдентификатор;
	
	Стр = """" + УИД + ""-attachment.png"";
	
	Каталог = Объект.КаталогOutputСкриншоты;
	Если НЕ ФайлСуществуетКомандаСистемы(Каталог, ""СформироватьИмяФайлаСкриншота"") Тогда
		СоздатьКаталогКомандаСистемы(Каталог);
	КонецЕсли;	 
	
	Стр = ДополнитьСлешВПуть(Каталог) + Стр;
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьМассивPIDПоИмениПроцесса(ИмяПроцесса,Массив)
	ЛогФайл = ПолучитьИмяВременногоФайла(""txt"");
	Команда = ""tasklist /FI """"IMAGENAME eq "" + ИмяПроцесса +  """""" /nh > """""" + ЛогФайл + """""""";
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
	
	Если НЕ ФайлСуществуетКомандаСистемы(ЛогФайл, ""ЗаполнитьМассивPIDПоИмениПроцесса"") Тогда
		СделатьСообщение(""Ошибка при получении списка процессов 1С!"");
		Возврат;
	КонецЕсли;	 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ЛогФайл,""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		
		Если СокрЛП(Стр) = """" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Стр = НРег(Стр);
		Стр = СокрЛП(СтрЗаменить(Стр,НРег(ИмяПроцесса),""""));
		Поз = Найти(Стр,"" "");
		PID = Лев(Стр,Поз-1);
		Попытка
			PID = Число(PID);
			Массив.Добавить(PID);
		Исключение
			СделатьСообщение(""Не смог преобразовать к числу PID="" + PID);
		КонецПопытки;
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивPIDОкон1С()
	Рез = Новый Массив;
	
	ЗаполнитьМассивPIDПоИмениПроцесса(""1cv8.exe"",Рез);
	ЗаполнитьМассивPIDПоИмениПроцесса(""1cv8c.exe"",Рез);
	
	//Для каждого Элем Из Рез Цикл
	//	Сообщить("""" + Элем);
	//КонецЦикла;
	
	Возврат Рез;
	
КонецФункции	


&НаКлиенте
Процедура ПолучитьМассивСкриншотовКаждогоОкна1С()
	
	
	
	
	
	//ProcessID = МассивPIDОкон1С[ТекProcessID];
	//WshShell = Новый COMОбъект(""WScript.Shell"");
	//Рез      = WshShell.AppActivate(ProcessID);
	//
	//WshShell = Неопределено;
	
	//Сообщить(""AppActivate="" + Рез);
	
	ИмяФайлаСкриншота = СформироватьИмяФайлаСкриншота(ЗначениеПараметровДляСнятияСкриншотов.ОписаниеШага,ЗначениеПараметровДляСнятияСкриншотов.СтрокаСценария);
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	
	РезультатПрохожденияТестовСценария = ЗначениеПараметровДляСнятияСкриншотов.РезультатПрохожденияТестовСценария;
	Если НЕ РезультатПрохожденияТестовСценария.Свойство(""МассивСкриншотов"") Тогда
		МассивСкриншотов = Новый Массив();
		РезультатПрохожденияТестовСценария.Вставить(""МассивСкриншотов"",МассивСкриншотов);
	Иначе
		МассивСкриншотов = РезультатПрохожденияТестовСценария.МассивСкриншотов;
	КонецЕсли;	 
	
	ФайлИмяФайлаСкриншота = Новый Файл(ИмяФайлаСкриншота);
	
	СтруктураСкриншот = Новый Структура;
	СтруктураСкриншот.Вставить(""ИмяФайла"",ФайлИмяФайлаСкриншота.Имя);
	СтруктураСкриншот.Вставить(""ДвоичныеДанные"",Новый ДвоичныеДанные(ИмяФайлаСкриншота));
	МассивСкриншотов.Добавить(СтруктураСкриншот);
	
	//ПодключитьОбработчикОжидания(""ПолучитьМассивСкриншотовКаждогоОкна1С"",1,Истина);
	
	
	ПерейтиКВыполнениюСледующегоСценария();
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотВозникновенияОшибки(ОписаниеШага,СтрокаСценария,РезультатПрохожденияТестовСценария)
	Если Не Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Возврат;
	КонецЕсли;	 
	//МассивPIDОкон1С = ПолучитьМассивPIDОкон1С();
	ЗначениеПараметровДляСнятияСкриншотов = Новый Структура;
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""ОписаниеШага"",ОписаниеШага);
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""СтрокаСценария"",СтрокаСценария);
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""РезультатПрохожденияТестовСценария"",РезультатПрохожденияТестовСценария);
	
	ТекProcessID = -1;
	ПодключитьОбработчикОжидания(""ПолучитьМассивСкриншотовКаждогоОкна1С"",1,Истина);
	
КонецПроцедуры
//}снятие скриншота



//{получить состояние выполнения сценариев
&НаКлиенте
Функция ПолучитьСостояниеVanessaBehavior() Экспорт 
	Рез        = Новый Структура;
	
	ТекущаяФича = Новый Структура;
	ТекущаяФича.Вставить(""Имя"",Неопределено);
	ТекущаяФича.Вставить(""ПолныйПуть"",Неопределено);
	
	
	ТекущийСценарий = Новый Структура;
	ТекущийСценарий.Вставить(""Имя"",Неопределено);
	
	ТекущийШаг = Новый Структура;
	ТекущийШаг.Вставить(""Имя"",Неопределено);
	
	Рез.Вставить(""ТекущаяФича"",ТекущаяФича);
	Рез.Вставить(""ТекущийСценарий"",ТекущийСценарий);
	Рез.Вставить(""ТекущийШаг"",ТекущийШаг);
	
	Если (МассивСценариевДляВыполнения.Количество()-1) < ТекИД_СценарияВМассиве Тогда
		Возврат Рез;
	КонецЕсли;	 
	
	
	
	ТекущийСценарий.Вставить(""Имя"",МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	
	ТекущаяФича.Вставить(""Имя"",МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи);
	ТекущаяФича.Вставить(""ПолныйПуть"",МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	
	
	Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	
	Если (Шаги.Количество()-1) < ТекИД_ШагаВМассиве Тогда
		Возврат Рез;
	КонецЕсли;	 
	
	Если ТекИД_ШагаВМассиве < 0 Тогда
		Возврат Рез;
	КонецЕсли;	 
	
	
	ТекШаг = Шаги[ТекИД_ШагаВМассиве];
	ТекущийШаг.Вставить(""Имя"",ТекШаг.Имя);
	ТекущийШаг.Вставить(""ЗначенияПараметров"",ТекШаг.ЗначенияПараметров.Скопировать());
	
	
	Возврат Рез;
	
КонецФункции	 
//}получить состояние выполнения сценариев





//рисует рамку вокруг активного элемента формы
&НаКлиенте
Процедура ПодсветитьАктивноеОкно(Длительность,ЖдатьЗавершения = Истина) Экспорт
	Если Не Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм Тогда
		Возврат;
	КонецЕсли;	 
	
	ПутьКПриложению = Объект.КаталогИнструментов + ""\tools\VideoTools\FrameShow.exe"";
	Если Не ФайлСуществуетКомандаСистемы(ПутьКПриложению) Тогда
		Возврат;
	КонецЕсли;	 
	
	Путь = ПутьКПриложению + "" -showframeofactivecontrol timeshowframe="" + СтрЗаменить(СтрЗаменить(Формат(Длительность,""ND=10; NGS=*""),Символы.НПП,""""),""*"","""");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЖдатьЗавершения Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь);	
		Иначе	
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь,0);	
		КонецЕсли;	 
	Иначе
		ЗапуститьПриложение(Путь,,ЖдатьЗавершения);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьАктивныйЭлементФормы() Экспорт
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	ПодсветитьАктивноеОкно(2000,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьАктивныйЭлементФормыHTML() Экспорт
	Если Не Объект.СоздаватьИнструкциюHTML и Не Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;	 
	
	ПодсветитьАктивноеОкно(20000,Ложь);
	
	Sleep(3);
КонецПроцедуры

&НаКлиенте
Процедура УбратьПодсветкуАктвиногоЭлемента() Экспорт
	TASKKILL(""FrameShow.exe"");
КонецПроцедуры


//перемещает курсор у активному объекту
&НаКлиенте
Процедура СделатьДействияПриЗаписиИнструкции(ПарамСтр = """")Экспорт
	СделатьДействияПриЗаписиHTML(ПарамСтр);
	СделатьДействияПриЗаписиВидео(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиВидео(ПарамСтр = """") Экспорт
	Если Объект.ИдетЗаписьВидео Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормы();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъекту();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе	
			ПереместитьКурсорМышиКАктивномуОбъекту();
			ПодсветитьАктивныйЭлементФормы();
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиHTML(ПарамСтр = """") Экспорт
	
	Попытка
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		Если ТекШаг.ЭтоШагКонтекста Тогда
			Возврат;
		КонецЕсли;	 
	Исключение
	
	КонецПопытки;
	
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормыHTML();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе	
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
			ПодсветитьАктивныйЭлементФормыHTML();
		КонецЕсли;	 
		
		ДобавитьВЛогИнструкцииHTMLВыполненияШага();
		СкриншотСделанВСценарии = Истина;
		УбратьПодсветкуАктвиногоЭлемента();
	КонецЕсли;	 
	
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормыHTML();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе	
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
			ПодсветитьАктивныйЭлементФормыHTML();
		КонецЕсли;	 
		
		ДобавитьВЛогИнструкцииMarkdownВыполненияШага();
		СкриншотСделанВСценарии = Истина;
		УбратьПодсветкуАктвиногоЭлемента();
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОкну(Скорость,ЖдатьЗавершения = Истина) Экспорт
	Если Не Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы Тогда
		Возврат;
	КонецЕсли;	 
	
	ПутьКПриложению = Объект.КаталогИнструментов + ""\tools\VideoTools\MouseMove.exe"";
	Если Не ФайлСуществуетКомандаСистемы(ПутьКПриложению) Тогда
		Возврат;
	КонецЕсли;	 
	
	Путь = ПутьКПриложению + "" -movemousetoactivecontrol mousespeed="" + СтрЗаменить(Скорость,Символы.НПП,"""");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЖдатьЗавершения Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь);	
		Иначе	
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь,0);	
		КонецЕсли;	 
	Иначе
		ЗапуститьПриложение(Путь,,ЖдатьЗавершения);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОбъекту() Экспорт
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	ПереместитьКурсорМышиКАктивномуОкну(500);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОбъектуHTML() Экспорт
	Если Не Объект.СоздаватьИнструкциюHTML И НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;	 
	
	ПереместитьКурсорМышиКАктивномуОкну(50);
КонецПроцедуры










//{выбор каталогов
&НаКлиенте
Процедура КаталогиБиблиотекЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.КаталогиБиблиотек.ТекущиеДанные;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогиБиблиотекЗначениеНачалоВыбораЗавершение"""", ЭтаФорма, ТекущиеДанные)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогиБиблиотекЗначениеНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.КаталогиБиблиотек Цикл
		Если Строка.Значение = Элементы.КаталогиБиблиотек.ТекущиеДанные.Значение Тогда
			Строка.Значение = ВыбранныеФайлы[0];
			СохранитьНастройкиВХранилище(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
			Прервать;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputAllureНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputAllureНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputAllureНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputAllure = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputСкриншотыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputСкриншотыЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputСкриншотыЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputСкриншоты = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputxUnitНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputxUnitНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputxUnitНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputxUnit = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputИнструкцияHTMLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияHTMLЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияMarkdownНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияMarkdownЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияHTMLЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияHTML = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияMarkdownЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияMarkdown = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputИнструкцияВидеоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияВидеоЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияВидеоЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияВидео = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура VanessaStackCommonsНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""VanessaStackCommonsЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура VanessaStackCommonsЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.VanessaStackCommons = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогИнструментовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогИнструментовЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнструментовЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогИнструментов = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура TASKKILL(ИмяПриложения) Экспорт
	СтрокаКоманды = ""TASKKILL /F /IM "" + ИмяПриложения;
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(СтрокаКоманды);	
КонецПроцедуры
//}выбор каталогов


&НаКлиенте
Функция ПолучитьМассивСнипетовПрерывающихЗаписьСценария()
	Массив = Новый Массив;
	Массив.Добавить(""обратитевнимание"");
	
	Возврат Массив;
КонецФункции	

//свёртка дерева до строк фич
&НаКлиенте
Процедура СвернутьДеревоДоФичРекурсивно(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		Если Строка.Фича = Истина Тогда
			СвернутьСтрокуДерева(Строка);
			Продолжить;
		КонецЕсли;	 
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			СвернутьДеревоДоФичРекурсивно(ПодчиненныеСтроки);
		КонецЕсли;	 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДеревоДоФич(Команда)
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	СвернутьДеревоДоФичРекурсивно(ДеревоФормыСтроки);
КонецПроцедуры

//свёртка дерева до строк сценариев
&НаКлиенте
Процедура СвернутьДеревоДоСценариевРекурсивно(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		Если Строка.Фича = Истина Тогда
			РазвернутьСтрокуДерева(Строка);
		КонецЕсли;	 
		
		Если Строка.Сценарий = Истина Тогда
			СвернутьСтрокуДерева(Строка);
			Продолжить;
		КонецЕсли;	 
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			СвернутьДеревоДоСценариевРекурсивно(ПодчиненныеСтроки);
		КонецЕсли;	 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДеревоДоСценариев(Команда)
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	СвернутьДеревоДоСценариевРекурсивно(ДеревоФормыСтроки);
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнструментовСлужебныйПриИзменении(Элемент)
	ПодключитьВнешниеБиблиотекиVB();
КонецПроцедуры

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено) Экспорт
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции


&НаКлиенте
Функция ВывестиНаЭкранЗначениеСтруктуры(Значение) Экспорт
	Стр = """";
	Стр = Стр + ""Количество значений = "" + Значение.Количество() + Символы.ПС;
	Для Каждого Элем Из Значение Цикл
		Стр = Стр + ""Ключ="" + Элем.Ключ + "", Значение="" + Элем.Значение + Символы.ПС;
	КонецЦикла;	
	
	Предупреждение(Стр,5);
КонецФункции	

&НаКлиенте
Процедура ПроверитьЧтоЗаписьВидеоБудетРаботать(Команда)
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	МодульРаботыСВидео.ПроверитьЧтоЗаписьВидеоБудетРаботать(ПараметрыВидео);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаписьФайла(Результат, ДопПараметры) Экспорт 
	 	
КонецПроцедуры

Процедура ОкончаниеЧтения()
		
КонецПроцедуры

&НаКлиенте
Процедура КаталогПроектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	Если ЗначениеЗаполнено(Объект.КаталогПроекта) Тогда
		ДиалогВыбораКаталога.ПолноеИмяФайла = Объект.КаталогПроекта;
	КонецЕсли; 
	ПараметрыОбъекта = Новый Структура(""МножественныйВыбор, ИмяРеквизитаОбъекта, ИмяРеквизитаФормы"", ДиалогВыбораКаталога.МножественныйВыбор, ""КаталогПроекта"", """");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогВыборЗавершение"""", ЭтаФорма, ПараметрыОбъекта)""));
	Иначе
		Если ДиалогВыбораКаталога.Выбрать() Тогда
			МассивВыбранныхФайлов = Новый Массив;
			МассивВыбранныхФайлов.Добавить(ДиалогВыбораКаталога.Каталог);
			КаталогВыборЗавершение(МассивВыбранныхФайлов, ПараметрыОбъекта);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыборЗавершение(ВыбранныеФайлы, ПараметрыОбъекта) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	ВыборОбъектаМножественный = Ложь;
	Если ПараметрыОбъекта.Свойство(""МножественныйВыбор"") Тогда
		ВыборОбъектаМножественный = ПараметрыОбъекта[""МножественныйВыбор""];
	КонецЕсли;
	
	ИмяРеквизитаОбъекта = """"; ИмяРеквизитаФормы = """";
	Если ПараметрыОбъекта.Свойство(""ИмяРеквизитаОбъекта"", ИмяРеквизитаОбъекта) И ЗначениеЗаполнено(ИмяРеквизитаОбъекта) Тогда 
		Объект[ИмяРеквизитаОбъекта] =  ?(ВыборОбъектаМножественный, ВыбранныеФайлы, ВыбранныеФайлы[0]);
	КонецЕсли;
	
	Если ПараметрыОбъекта.Свойство(""ИмяРеквизитаФормы"", ИмяРеквизитаФормы) И ЗначениеЗаполнено(ИмяРеквизитаФормы) Тогда 
		Объект[ИмяРеквизитаФормы] =  ?(ВыборОбъектаМножественный, ВыбранныеФайлы, ВыбранныеФайлы[0]);
	КонецЕсли;
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьНастроийки(Команда)
	СохранитьНастройки();
КонецПроцедуры

&НаСервере
Процедура ВосстановитьВсеНастройкиИзХранилища()
	ВосстановитьНастройкиИзХранилища(""КаталогФич"", ""КаталогФич""); 
	ВосстановитьНастройкиИзХранилища(""КаталогиБиблиотек"", ""КаталогиБиблиотек""); 
	ВосстановитьНастройкиИзХранилища(""ПортЗапускаТестКлиента"", ""ПортЗапускаТестКлиента""); 
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиИзХранилища(Ключ, ИмяРеквизита) 
	ПрефиксИнструмента = ""vanessabehavior_"";

	Ключ = ПрефиксИнструмента + Ключ;

	СохраненноеЗначение = ХранилищеОбщихНастроек.Загрузить(ЭтаФорма, Ключ);
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Если Ложь
			Или ИмяРеквизита = ""КаталогФич""
			Или ИмяРеквизита = ""КаталогиБиблиотек""
			Или ИмяРеквизита = ""ПортЗапускаТестКлиента""
			Тогда
			
			Объект[ИмяРеквизита] = СохраненноеЗначение;
			
		//ИначеЕсли Ложь
		//	Или ИмяРеквизита = ""<ИмяРеквизитаФормы>""
		//	Тогда
		//	
		//	<ИмяРеквизитаФормы> = СохраненноеЗначение;
		//	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиВХранилище(Знач Ключ, Значение)
	ПрефиксИнструмента = ""vanessabehavior_"";

	Ключ = ПрефиксИнструмента + Ключ;
	
	ХранилищеОбщихНастроек.Сохранить(ЭтаФорма, Ключ, Значение);
КонецПроцедуры

&НаКлиенте
Процедура КаталогиБиблиотекПослеУдаления(Элемент)
	СохранитьНастройкиВХранилище(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСлужебныеБазыЕслиИхНет() Экспорт
	ИмяФайла = Объект.КаталогИнструментов + ""\tools\ServiceBases\v83ServiceBase\1Cv8.1CD"";
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
		
		ЗТ = Новый ЗаписьТекста(ИмяВременногоBat,""UTF-8"",,Истина); 
		ЗТ.ЗаписатьСтроку(""cd "" + Объект.КаталогИнструментов); 
		ЗТ.ЗаписатьСтроку(""oscript "" + Объект.КаталогИнструментов + ""\tools\onescript\build-service-conf.os""); 
		ЗТ.Закрыть();
		
		
		
		Команда = ИмяВременногоBat;
		Статус = ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
		Если Статус <> 0 Тогда
			ВызватьИсключение ""Не смог создать сервисные базы! Статус=""+Статус; 
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьСеансСлужебнойБазы(Имябазы,ТипЗапуска,Ключи) Экспорт
	СисИнфо = Новый СистемнаяИнформация; 
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	ПутьК1С = ""C:\Program Files (x86)\1cv8\"" + ВерсияПриложения + ""\bin\1cv8.exe"";
	СтрокаЗапускаКонфигуратора = """""""" + ПутьК1С + """""" "" + ТипЗапуска + "" /F"""""" + Объект.КаталогИнструментов + ""\tools\ServiceBases\"" + Имябазы + """""" "" + Ключи;
	Статус = ВыполнитьКомандуОСБезПоказаЧерногоОкна(СтрокаЗапускаКонфигуратора,0);//не ждём окончания работы конфигуратора
	Если Статус <> 0 Тогда
		ВызватьИсключение ""Не смог запустить конфигуратор! СтрокаЗапускаКонфигуратора=<""+СтрокаЗапускаКонфигуратора+"">""; 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиПоУмолчанию(Команда)
	ПараметрыФайла = ПрочитатьСтруктуруИзJSONФайлаКлиент(Объект.КаталогИнструментов + ""\tools\JSON\VBParams836UF.json"");
	
	Для Каждого Элем Из ПараметрыФайла Цикл
		Если Лев(Элем.Ключ,11) = ""ЗаписьВидео"" Тогда
			Значение = Элем.Значение;
			Если Лев(Элем.Значение,1) = ""."" Тогда
				Значение = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
			КонецЕсли;	 
			Объект[Элем.Ключ] = Значение;
		КонецЕсли;	 
	КонецЦикла;	
	
КонецПроцедуры




ТаблицаОбработокДляОтладки = Новый Соответствие;

ВыполнятьСценарииАсинхронно = Истина;

ШагСтрокДляМодуля         = 10000;
ВсёЕщёИдётВыполнениеШагов = 0;

МассивСостоянияКонтекстовДоВыполненияШага = Новый Массив;

ТаблицаУжеСуществующихСценариев = Новый Массив();


МассивВерсийFeatureИмяФайла = Новый Массив;
МассивВерсийFeatureВерсия   = Новый Массив;

МассивВерсийEPFИмяФайла = Новый Массив;
МассивВерсийEPFВерсия   = Новый Массив;

ТаблицаКонтекстовОбработок = Новый Массив;
МассивИменКонтекстовОбработок = Новый Массив;

ЭтоLinux = Ложь;


СчитываниеМакетаНачСтр = 1;
СчитываниеМакетаНачКол = 1;
СчитываниеМакетаКолСтр = 30;
СчитываниеМакетаКолКол = 30;

ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Ложь;
ИнтервалВыполненияШагаПриЗаписиВидео             = 4;
БылаОшибкаСкриптовСборкиВидео                    = Ложь;
СкриншотСделанВСценарии                          = Ложь;
ЭтоЗапускВРежимеКоманднойСтроки                  = Ложь;
ЭтоЗапускВРежимеБезЗагрукиНастроек               = Ложь;

МассивTTS = Неопределено;

ПредставлениеВертЧертыВТабДок = ""__&ВертЧерта__"";

",
{4,11,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ac512ea0-267e-4d05-870b-917be5965353}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ЭтоЗапускИзКоманднойСтроки",
{1,1,
{"ru","Это запуск из командной строки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"ТаблицаИзвестныхStepDefinition",
{1,1,
{"ru","Таблица известных step definition"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"ИмяФайла",
{1,1,
{"ru","Имя файла"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Id",
{1,1,
{"ru","Id"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"СтрокаРеальнойПроцедуры",
{1,1,
{"ru","Строка реальной процедуры"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Параметры",
{1,1,
{"ru","Параметры"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"СтрокаДляПоиска",
{1,1,
{"ru","Строка для поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{2},0,"ЕстьПоддержкаНемодальныхФорм",
{1,1,
{"ru","Есть поддержка немодальных форм"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"СтатусыРезультатаТестирования",
{1,1,
{"ru","Статусы результата тестирования"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"ЕстьПоддержкаАсинхронныхВызовов",
{1,1,
{"ru","Есть поддержка асинхронных вызовов"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"СгенерированныйТекстПроцедуры",
{1,1,
{"ru","Сгенерированный текст процедуры"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"СгенерированныйСценарий",
{1,1,
{"ru","Сгенерированный сценарий"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"СгенерированныйКод",
{1,1,
{"ru","Сгенерированный код"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"СгенерированныйXML",
{1,1,
{"ru","Сгенерированный XML"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"СгенерированныйСценарийКод",
{1,1,
{"ru","Сгенерированный сценарий код"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},1,
{0,
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},29,
{5,1,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ПолныйПуть",
{1,1,
{"ru","Полный путь"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Снипет",
{1,1,
{"ru","Снипет"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"АдресСнипета",
{1,1,
{"ru","Адрес снипета"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"СтрокаРеальнойПроцедуры",
{1,1,
{"ru","Строка реальной процедуры"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Каталог",
{1,1,
{"ru","Каталог"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Фича",
{1,1,
{"ru","Фича"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"Сценарий",
{1,1,
{"ru","Сценарий"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"ЭтоScenarioOutline",
{1,1,
{"ru","Это scenario outline"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"ЭтоКонтекст",
{1,1,
{"ru","Это контекст"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,11,0,"Примеры",
{1,1,
{"ru","Примеры"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"ИменованныеПараметры",
{1,1,
{"ru","Именованные параметры"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,13,0,"Пример",
{1,1,
{"ru","Пример"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,14,0,"Шаг",
{1,1,
{"ru","Шаг"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,15,0,"ЗначенияПараметров",
{1,1,
{"ru","Значения параметров"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,16,0,"ЭтоЧужойСнипет",
{1,1,
{"ru","Это чужой снипет"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,17,0,"ТипКартинки",
{1,1,
{"ru","Тип картинки"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,19,0,"ИДСтроки",
{1,1,
{"ru","ИДСтроки"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,18,0,"Статус",
{1,1,
{"ru","Статус"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,20,0,"ФичаИмеетСвоюEPF",
{1,1,
{"ru","Фича имеет свою EPF"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,21,0,"ШагСПараметрамиВТаблице",
{1,1,
{"ru","Шаг с параметрами в таблице"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,22,0,"СтрокаПараметровШагаВВидеТаблицы",
{1,1,
{"ru","Строка параметров шага в виде таблицы"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,23,0,"ПараметрыТаблицы",
{1,1,
{"ru","Параметры таблицы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,24,0,"ИмяШагаБезКлючевогоСлова",
{1,0},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,25,0,"ВыполнятьСценарийСЭтогоШага",
{1,1,
{"ru","Выполнять сценарий с этого шага"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,26,0,"ШагСценарий",
{1,1,
{"ru","Шаг сценарий"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,27,0,"МассивСценариевЗащитаОтЗацикливания",
{1,1,
{"ru","Массив сценариев защита от зацикливания"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,28,0,"Область",
{1,1,
{"ru","Область"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,29,0,"МассивТегов",
{1,1,
{"ru","Массив тегов"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0}
},7,"Объект.ДеревоТестов.Статус","Объект.ДеревоТестов.Статус",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{18,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.Сценарий","Объект.ДеревоТестов.Сценарий",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{8,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.Пример","Объект.ДеревоТестов.Пример",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{13,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.СтрокаПараметровШагаВВидеТаблицы","Объект.ДеревоТестов.СтрокаПараметровШагаВВидеТаблицы",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{22,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.ЭтоЧужойСнипет","Объект.ДеревоТестов.ЭтоЧужойСнипет",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{16,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.ВыполнятьСценарийСЭтогоШага","Объект.ДеревоТестов.ВыполнятьСценарийСЭтогоШага",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{25,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.Область","Объект.ДеревоТестов.Область",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{28,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxjb25kaXRp
b25hbEFwcGVhcmFuY2U+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCY0LzR
jzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8Zmls
dGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtR3JvdXAiPg0KCQkJ
CQk8Z3JvdXBUeXBlPkFuZEdyb3VwPC9ncm91cFR5cGU+DQoJCQkJCTxpdGVtIHhz
aTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCQk8bGVmdCB4c2k6
dHlwZT0iZGNzY29yOkZpZWxkIj7QntCx0YrQtdC60YIu0JTQtdGA0LXQstC+0KLQ
tdGB0YLQvtCyLtCh0YLQsNGC0YPRgTwvbGVmdD4NCgkJCQkJCTxjb21wYXJpc29u
VHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQk8cmlnaHQgeHNpOnR5
cGU9InhzOnN0cmluZyI+UGVuZGluZzwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJ
CQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Hcm91cCI+DQoJCQkJCQk8Z3Jv
dXBUeXBlPk9yR3JvdXA8L2dyb3VwVHlwZT4NCgkJCQkJCTxpdGVtIHhzaTp0eXBl
PSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCQkJPGxlZnQgeHNpOnR5cGU9
ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXRgdGC
0L7Qsi7QodGG0LXQvdCw0YDQuNC5PC9sZWZ0Pg0KCQkJCQkJCTxjb21wYXJpc29u
VHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQkJPHJpZ2h0IHhzaTp0
eXBlPSJ4czpib29sZWFuIj50cnVlPC9yaWdodD4NCgkJCQkJCTwvaXRlbT4NCgkJ
CQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJ
CQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU
0LXRgNC10LLQvtCi0LXRgdGC0L7Qsi7Qn9GA0LjQvNC10YA8L2xlZnQ+DQoJCQkJ
CQkJPGNvbXBhcmlzb25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJ
CQk8cmlnaHQgeHNpOnR5cGU9InhzOmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJ
CQkJPC9pdGVtPg0KCQkJCQk8L2l0ZW0+DQoJCQkJPC9pdGVtPg0KCQkJPC9maWx0
ZXI+DQoJCQk8YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0geHNpOnR5cGU9
IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRl
cj7QptCy0LXRgtCk0L7QvdCwPC9kY3Njb3I6cGFyYW1ldGVyPg0KCQkJCQk8ZGNz
Y29yOnZhbHVlIHhzaTp0eXBlPSJ2OHVpOkNvbG9yIj4jRkZGQjRBPC9kY3Njb3I6
dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBwZWFyYW5jZT4NCgkJ
PC9pdGVtPg0KCQk8aXRlbT4NCgkJCTxzZWxlY3Rpb24+DQoJCQkJPGl0ZW0+DQoJ
CQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QotC10YHRgtC+0LLQmNC80Y88L2ZpZWxk
Pg0KCQkJCTwvaXRlbT4NCgkJCTwvc2VsZWN0aW9uPg0KCQkJPGZpbHRlcj4NCgkJ
CQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUdyb3VwIj4NCgkJCQkJPGdyb3Vw
VHlwZT5BbmRHcm91cDwvZ3JvdXBUeXBlPg0KCQkJCQk8aXRlbSB4c2k6dHlwZT0i
RmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJPGxlZnQgeHNpOnR5cGU9ImRj
c2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXRgdGC0L7Q
si7QodGC0LDRgtGD0YE8L2xlZnQ+DQoJCQkJCQk8Y29tcGFyaXNvblR5cGU+RXF1
YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpz
dHJpbmciPkZhaWxlZDwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJCQkJPGl0ZW0g
eHNpOnR5cGU9IkZpbHRlckl0ZW1Hcm91cCI+DQoJCQkJCQk8Z3JvdXBUeXBlPk9y
R3JvdXA8L2dyb3VwVHlwZT4NCgkJCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJ
dGVtQ29tcGFyaXNvbiI+DQoJCQkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpG
aWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXRgdGC0L7Qsi7QodGG
0LXQvdCw0YDQuNC5PC9sZWZ0Pg0KCQkJCQkJCTxjb21wYXJpc29uVHlwZT5FcXVh
bDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpi
b29sZWFuIj50cnVlPC9yaWdodD4NCgkJCQkJCTwvaXRlbT4NCgkJCQkJCTxpdGVt
IHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCQkJPGxlZnQg
eHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQ
vtCi0LXRgdGC0L7Qsi7Qn9GA0LjQvNC10YA8L2xlZnQ+DQoJCQkJCQkJPGNvbXBh
cmlzb25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJCQk8cmlnaHQg
eHNpOnR5cGU9InhzOmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJCQkJPC9pdGVt
Pg0KCQkJCQk8L2l0ZW0+DQoJCQkJPC9pdGVtPg0KCQkJPC9maWx0ZXI+DQoJCQk8
YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0geHNpOnR5cGU9IlNldHRpbmdz
UGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRlcj7QptCy0LXR
gtCk0L7QvdCwPC9kY3Njb3I6cGFyYW1ldGVyPg0KCQkJCQk8ZGNzY29yOnZhbHVl
IHhzaTp0eXBlPSJ2OHVpOkNvbG9yIj5zdHlsZTpTcGVjaWFsVGV4dENvbG9yPC9k
Y3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBwZWFyYW5j
ZT4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJCTxzZWxlY3Rpb24+DQoJCQkJPGl0
ZW0+DQoJCQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QotC10YHRgtC+0LLQmNC80Y88
L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCTwvc2VsZWN0aW9uPg0KCQkJPGZpbHRl
cj4NCgkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUdyb3VwIj4NCgkJCQkJ
PGdyb3VwVHlwZT5BbmRHcm91cDwvZ3JvdXBUeXBlPg0KCQkJCQk8aXRlbSB4c2k6
dHlwZT0iRmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJPGxlZnQgeHNpOnR5
cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXR
gdGC0L7Qsi7QodGC0LDRgtGD0YE8L2xlZnQ+DQoJCQkJCQk8Y29tcGFyaXNvblR5
cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQkJPHJpZ2h0IHhzaTp0eXBl
PSJ4czpzdHJpbmciPlN1Y2Nlc3M8L3JpZ2h0Pg0KCQkJCQk8L2l0ZW0+DQoJCQkJ
CTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtR3JvdXAiPg0KCQkJCQkJPGdyb3Vw
VHlwZT5Pckdyb3VwPC9ncm91cFR5cGU+DQoJCQkJCQk8aXRlbSB4c2k6dHlwZT0i
RmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJCTxsZWZ0IHhzaTp0eXBlPSJk
Y3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7QlNC10YDQtdCy0L7QotC10YHRgtC+
0LIu0KHRhtC10L3QsNGA0LjQuTwvbGVmdD4NCgkJCQkJCQk8Y29tcGFyaXNvblR5
cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQkJCTxyaWdodCB4c2k6dHlw
ZT0ieHM6Ym9vbGVhbiI+dHJ1ZTwvcmlnaHQ+DQoJCQkJCQk8L2l0ZW0+DQoJCQkJ
CQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJ
CTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7QlNC1
0YDQtdCy0L7QotC10YHRgtC+0LIu0J/RgNC40LzQtdGAPC9sZWZ0Pg0KCQkJCQkJ
CTxjb21wYXJpc29uVHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQkJ
PHJpZ2h0IHhzaTp0eXBlPSJ4czpib29sZWFuIj50cnVlPC9yaWdodD4NCgkJCQkJ
CTwvaXRlbT4NCgkJCQkJPC9pdGVtPg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVy
Pg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJT
ZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+
0KbQstC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nv
cjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+IzE1QjEwRTwvZGNzY29yOnZh
bHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJCTwv
aXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVtPg0KCQkJ
CQk8ZmllbGQ+0JTQtdGA0LXQstC+0KLQtdGB0YLQvtCy0JjQvNGPPC9maWVsZD4N
CgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJ
PGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Hcm91cCI+DQoJCQkJCTxncm91cFR5
cGU+T3JHcm91cDwvZ3JvdXBUeXBlPg0KCQkJCQk8aXRlbSB4c2k6dHlwZT0iRmls
dGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2Nv
cjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXRgdGC0L7Qsi7Q
odGC0YDQvtC60LDQn9Cw0YDQsNC80LXRgtGA0L7QstCo0LDQs9Cw0JLQktC40LTQ
tdCi0LDQsdC70LjRhtGLPC9sZWZ0Pg0KCQkJCQkJPGNvbXBhcmlzb25UeXBlPkVx
dWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJCTxyaWdodCB4c2k6dHlwZT0ieHM6
Ym9vbGVhbiI+dHJ1ZTwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJCQkJPGl0ZW0g
eHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJpc29uIj4NCgkJCQkJCTxsZWZ0IHhz
aTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7QlNC10YDQtdCy0L7Q
otC10YHRgtC+0LIu0J/RgNC40LzQtdGAPC9sZWZ0Pg0KCQkJCQkJPGNvbXBhcmlz
b25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJCTxyaWdodCB4c2k6
dHlwZT0ieHM6Ym9vbGVhbiI+dHJ1ZTwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJ
CQk8L2l0ZW0+DQoJCQk8L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxk
Y3Njb3I6aXRlbSB4c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJ
CQkJCTxkY3Njb3I6cGFyYW1ldGVyPtCo0YDQuNGE0YI8L2Rjc2NvcjpwYXJhbWV0
ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Rm9udCIgcmVm
PSJzeXM6RGVmYXVsdEdVSUZvbnQiIGZhY2VOYW1lPSJMdWNpZGEgQ29uc29sZSIg
aGVpZ2h0PSIxMCIga2luZD0iV2luZG93c0ZvbnQiLz4NCgkJCQk8L2Rjc2Nvcjpp
dGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJ
PHNlbGVjdGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQ
vtCi0LXRgdGC0L7QstCf0L7Qu9C90YvQudCf0YPRgtGMPC9maWVsZD4NCgkJCQk8
L2l0ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QotC1
0YHRgtC+0LLQkNC00YDQtdGB0KHQvdC40L/QtdGC0LA8L2ZpZWxkPg0KCQkJCTwv
aXRlbT4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXR
gdGC0L7QstCh0L3QuNC/0LXRgjwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9z
ZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0
ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6
RmllbGQiPtCe0LHRitC10LrRgi7QlNC10YDQtdCy0L7QotC10YHRgtC+0LIu0K3R
gtC+0KfRg9C20L7QudCh0L3QuNC/0LXRgjwvbGVmdD4NCgkJCQkJPGNvbXBhcmlz
b25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0IHhzaTp0
eXBlPSJ4czpib29sZWFuIj50cnVlPC9yaWdodD4NCgkJCQk8L2l0ZW0+DQoJCQk8
L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4c2k6
dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6cGFy
YW1ldGVyPtCm0LLQtdGC0KTQvtC90LA8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJCQkJ
CTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiNEOUQ3Q0M8L2Rj
c2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNl
Pg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRl
bT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCY0LzRjzwv
ZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVy
Pg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJ
CQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7Q
lNC10YDQtdCy0L7QotC10YHRgtC+0LIu0JLRi9C/0L7Qu9C90Y/RgtGM0KHRhtC1
0L3QsNGA0LjQudCh0K3RgtC+0LPQvtCo0LDQs9CwPC9sZWZ0Pg0KCQkJCQk8Y29t
cGFyaXNvblR5cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQg
eHNpOnR5cGU9InhzOmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4N
CgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVt
IHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2Nv
cjpwYXJhbWV0ZXI+0KbQstC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4N
CgkJCQkJPGRjc2Nvcjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+Izk5Q0NG
RjwvZGNzY29yOnZhbHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVh
cmFuY2U+DQoJCTwvaXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJ
CTxpdGVtPg0KCQkJCQk8ZmllbGQ+0JTQtdGA0LXQstC+0KLQtdGB0YLQvtCy0JjQ
vNGPPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxm
aWx0ZXI+DQoJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Hcm91cCI+DQoJ
CQkJCTxncm91cFR5cGU+T3JHcm91cDwvZ3JvdXBUeXBlPg0KCQkJCQk8aXRlbSB4
c2k6dHlwZT0iRmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJPGxlZnQgeHNp
OnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi
0LXRgdGC0L7Qsi7QntCx0LvQsNGB0YLRjDwvbGVmdD4NCgkJCQkJCTxjb21wYXJp
c29uVHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQk8cmlnaHQgeHNp
OnR5cGU9InhzOmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJCQk8L2l0ZW0+DQoJ
CQkJPC9pdGVtPg0KCQkJPC9maWx0ZXI+DQoJCQk8YXBwZWFyYW5jZT4NCgkJCQk8
ZGNzY29yOml0ZW0geHNpOnR5cGU9IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0K
CQkJCQk8ZGNzY29yOnBhcmFtZXRlcj7QqNGA0LjRhNGCPC9kY3Njb3I6cGFyYW1l
dGVyPg0KCQkJCQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ2OHVpOkZvbnQiIHJl
Zj0ic3lzOkRlZmF1bHRHVUlGb250IiBmYWNlTmFtZT0iVGltZXMgTmV3IFJvbWFu
IiBoZWlnaHQ9IjEyIiBib2xkPSJmYWxzZSIgaXRhbGljPSJ0cnVlIiB1bmRlcmxp
bmU9ImZhbHNlIiBzdHJpa2VvdXQ9ImZhbHNlIiBraW5kPSJXaW5kb3dzRm9udCIv
Pg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJCTwvaXRl
bT4NCgk8L2NvbmRpdGlvbmFsQXBwZWFyYW5jZT4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,23,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьСценарии",
{1,2,
{"ru","Выполнить сценарии"},
{"en","Run scenarios"}
},
{1,1,
{"ru","Выполнить сценарии"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьСценарииФорма",3,0,0,
{0,0},1,0},
{7,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Перезагрузить",
{1,1,
{"ru","Перезагрузить"}
},
{1,1,
{"ru","Перезагрузить"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Перезагрузить",3,0,0,
{0,0},1,0},
{7,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьФичиИзКаталога",
{1,1,
{"ru","Загрузить фичи из каталога"}
},
{1,1,
{"ru","Загрузить фичи из каталога"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьФичиИзКаталога",3,0,0,
{0,0},1,0},
{7,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьОднуФичу",
{1,1,
{"ru","Загрузить одну фичу"}
},
{1,1,
{"ru","Загрузить одну фичу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьОднуФичу",3,0,0,
{0,0},1,0},
{7,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СоздатьШаблоныОбработок",
{1,1,
{"ru","Создать шаблоны обработок"}
},
{1,1,
{"ru","Создать шаблоны обработок"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СоздатьШаблоныОбработокКоманда",3,0,0,
{0,0},1,0},
{7,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьВыделенныйСценарий",
{1,2,
{"ru","Выполнить выделенный сценарий"},
{"en","Run selected scenario"}
},
{1,1,
{"ru","Выполнить выделенный сценарий"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьВыделенныйСценарий",3,0,0,
{0,0},1,0},
{7,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПерезагрузитьИВыполнить",
{1,1,
{"ru","Перезагрузить и выполнить"}
},
{1,1,
{"ru","Перезагрузить и выполнить"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПерезагрузитьИВыполнить",3,0,0,
{0,0},1,0},
{7,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьФичаФайл",
{1,1,
{"ru","Открыть фича файл"}
},
{1,1,
{"ru","Открыть фича файл"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьФичаФайл",3,0,0,
{0,0},1,0},
{7,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НачатьЗаписьДействийПользователя",
{1,1,
{"ru","Начать запись действий пользователя"}
},
{1,1,
{"ru","Начать запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НачатьЗаписьДействийПользователяКнопка",3,0,0,
{0,0},1,0},
{7,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗавершитьЗаписьДействийПользователя",
{1,1,
{"ru","Завершить запись действий пользователя"}
},
{1,1,
{"ru","Завершить запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗавершитьЗаписьДействийПользователяКнопка",3,0,0,
{0,0},1,0},
{7,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьПодключитьTestClient",
{1,1,
{"ru","Открыть подключить test client"}
},
{1,1,
{"ru","Открыть подключить test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьПодключитьTestClient",3,0,0,
{0,0},1,0},
{7,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УстановитьПометкуВыполнятьСценарийСЭтогоШага",
{1,2,
{"ru","Установить пометку выполнять сценарий с этого шага"},
{"en","Set flag run scenarion from that step"}
},
{1,1,
{"ru","Установить пометку выполнять сценарий с этого шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УстановитьПометкуВыполнятьСценарийСЭтогоШага",3,0,0,
{0,0},1,0},
{7,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СнятьПометкуВыполнятьСценарийСЭтогоШага",
{1,2,
{"ru","Снять пометку выполнять сценарий с этого шага"},
{"en","Disable flag for run scenario from that step"}
},
{1,1,
{"ru","Снять пометку выполнять сценарий с этого шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СнятьПометкуВыполнятьСценарийСЭтогоШага",3,0,0,
{0,0},1,0},
{7,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗапомнитьСостояниеФормыTestClient",
{1,1,
{"ru","Запомнить состояние формы test client"}
},
{1,1,
{"ru","Запомнить состояние формы test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗапомнитьСостояниеФормыTestClient",3,0,0,
{0,0},1,0},
{7,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗабытьСостояниеФормыTestClient",
{1,1,
{"ru","Забыть состояние формы test client"}
},
{1,1,
{"ru","Забыть состояние формы test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗабытьСостояниеФормыTestClientКнопка",3,0,0,
{0,0},1,0},
{7,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьИзмененияФормыGherkin",
{1,1,
{"ru","Получить изменения формы gherkin"}
},
{1,1,
{"ru","Получить изменения формы gherkin"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьИзмененияФормыGherkinКнопка",3,0,0,
{0,0},1,0},
{7,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьИзмененияФормыJSON",
{1,1,
{"ru","Получить изменения формы JSON"}
},
{1,1,
{"ru","Получить изменения формы JSON"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"",3,0,0,
{0,0},1,0},
{7,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДляВызоваКонфигуратора",
{1,2,
{"ru","Для вызова конфигуратора"},
{"en","For invoke designer"}
},
{1,1,
{"ru","Для вызова конфигуратора"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДляВызоваКонфигуратора",3,0,0,
{0,0},1,0},
{7,
{19,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоДоФич",
{1,1,
{"ru","Свернуть дерево до фич"}
},
{1,1,
{"ru","Свернуть дерево до фич"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоДоФич",3,0,0,
{0,0},1,0},
{7,
{20,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоДоСценариев",
{1,1,
{"ru","Свернуть дерево до сценариев"}
},
{1,1,
{"ru","Свернуть дерево до фич"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоДоСценариев",3,0,0,
{0,0},1,0},
{7,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПроверитьЧтоЗаписьВидеоБудетРаботать",
{1,1,
{"ru","Проверить что запись видео будет работать"}
},
{1,1,
{"ru","Проверить что запись видео будет работать"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПроверитьЧтоЗаписьВидеоБудетРаботать",3,0,0,
{0,0},1,0},
{7,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КомандаСохранитьНастроийки",
{1,1,
{"ru","Команда сохранить настроийки"}
},
{1,1,
{"ru","Команда сохранить настроийки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,894cf65b-4109-4533-a1d7-c87b1fcc80a3},"",-1,-1,1,0,""},"КомандаСохранитьНастроийки",3,0,0,
{0,0},1,0},
{7,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНастройкиПоУмолчанию",
{1,1,
{"ru","Загрузить настройки по умолчанию"}
},
{1,1,
{"ru","Загрузить настройки по умолчанию"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНастройкиПоУмолчанию",3,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}